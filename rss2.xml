<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Pega Devlog</title>
    <link>https://jehyunlee.github.io/</link>
    
    <atom:link href="https://jehyunlee.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>Pega&#39;s Development log for myself and others</description>
    <pubDate>Mon, 23 Oct 2023 10:35:26 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>EOST2023 - 오픈소스가 만드는 LLM의 미래</title>
      <link>https://jehyunlee.github.io/2023/10/23/General-32-eost2023_talk/</link>
      <guid>https://jehyunlee.github.io/2023/10/23/General-32-eost2023_talk/</guid>
      <pubDate>Mon, 23 Oct 2023 10:33:00 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;b&gt;Contributor:&lt;/b&gt; 임준호, 박찬성, 유용균&lt;br&gt;&lt;a href=&quot;https://eostday.kr/&quot;&gt;EOST2023&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;지난 10월 11일 &lt;a hre</description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p><b>Contributor:</b> 임준호, 박찬성, 유용균<br><a href="https://eostday.kr/">EOST2023</a></p></blockquote><ul><li>지난 10월 11일 <a href="https://eostday.kr/">ETRI Open Source Tech Day 2023</a>가 열렸습니다.</li><li>과학기술정보통신부 주최, 한국전자통신연구원, 한국과학기술정보연구원, 한국식품연구원, 한국에너지기술연구원, 한국원자력연구원, 한국천문연구원, 한국화학연구원, 한국항공우주연구원 등 8개 출연연 공동 주관으로 열리는 오픈소스 관련 큰 행사입니다.</li><li>정부에서 주최, 주관하는 행사이지만 오픈소스 진영에서 대다수 참여하는, 정부와 오픈소스의 가교가 되는 행사입니다.</li></ul><ul><li>제 발표를 마친 후 <b>오픈소스가 만드는 LLM의 미래는?</b>이라는 제목으로 패널 토의를 진행했습니다.</li><li>발표 영상 : (<a href="https://youtu.be/zAMi3nm0iyE?si=BIdZ9OQbLWpJj-1m">Youtube Link</a>)<br></li></ul><div class="video-container"><iframe src="https://www.youtube.com/embed/zAMi3nm0iyE" frameborder="0" loading="lazy" allowfullscreen></iframe></div> <ul><li>튜터러스랩스 <b>임준호</b> 박사님의 사회로 <b>박찬성</b>, <b>유용균</b> 두 분과 생각을 나눌 수 있었습니다.</li><li>좋은 기회를 주신 주최측에 깊이 감사드립니다.</li></ul><p><img src="31_eost2023_jehyun_01.png"></p>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/General/">General</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/openai/">openai</category>
      
      <category domain="https://jehyunlee.github.io/tags/chatgpt/">chatgpt</category>
      
      <category domain="https://jehyunlee.github.io/tags/microsoft/">microsoft</category>
      
      <category domain="https://jehyunlee.github.io/tags/bingimagecreator/">bingimagecreator</category>
      
      <category domain="https://jehyunlee.github.io/tags/EOST/">EOST</category>
      
      <category domain="https://jehyunlee.github.io/tags/nst/">nst</category>
      
      <category domain="https://jehyunlee.github.io/tags/bingchat/">bingchat</category>
      
      
    </item>
    
    <item>
      <title>EOST2023 - 거대언어모델을 활용한 연구 효율화</title>
      <link>https://jehyunlee.github.io/2023/10/23/General-31-eost2023_jehyun/</link>
      <guid>https://jehyunlee.github.io/2023/10/23/General-31-eost2023_jehyun/</guid>
      <pubDate>Mon, 23 Oct 2023 10:11:00 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://eostday.kr/&quot;&gt;EOST2023&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;지난 10월 11일 &lt;a href=&quot;https://eostday.kr/&quot;&gt;ETRI Open Sou</description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p><a href="https://eostday.kr/">EOST2023</a></p></blockquote><ul><li>지난 10월 11일 <a href="https://eostday.kr/">ETRI Open Source Tech Day 2023</a>가 열렸습니다.</li><li>과학기술정보통신부 주최, 한국전자통신연구원, 한국과학기술정보연구원, 한국식품연구원, 한국에너지기술연구원, 한국원자력연구원, 한국천문연구원, 한국화학연구원, 한국항공우주연구원 등 8개 출연연 공동 주관으로 열리는 오픈소스 관련 큰 행사입니다.</li><li>정부에서 주최, 주관하는 행사이지만 오픈소스 진영에서 대다수 참여하는, 정부와 오픈소스의 가교가 되는 행사입니다.</li></ul><ul><li>이 자리에서 <b>거대언어모델을 활용한 연구 효율화</b>를 주제로 발표를 드렸습니다.</li><li>발표 영상 : (<a href="https://youtu.be/7arA7HzuC6Y?si=YT0Nkme9-vGd5dLL">Youtube Link</a>)<br></li></ul><div class="video-container"><iframe src="https://www.youtube.com/embed/7arA7HzuC6Y" frameborder="0" loading="lazy" allowfullscreen></iframe></div> <ul><li>최근 여러 곳에서 진행한 발표를 20분에 모아 정리했습니다.</li><li>발표자료를 공유합니다. (<a href="231011_%EC%9D%B4%EC%A0%9C%ED%98%84_EOST2023.pdf">다운로드</a>)</li><li>출처만 밝혀주시면 자유롭게 활용해주셔도 좋습니다.</li></ul><p><img src="31_eost2023_jehyun_01.png"></p>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/General/">General</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/openai/">openai</category>
      
      <category domain="https://jehyunlee.github.io/tags/chatgpt/">chatgpt</category>
      
      <category domain="https://jehyunlee.github.io/tags/microsoft/">microsoft</category>
      
      <category domain="https://jehyunlee.github.io/tags/bingimagecreator/">bingimagecreator</category>
      
      <category domain="https://jehyunlee.github.io/tags/EOST/">EOST</category>
      
      <category domain="https://jehyunlee.github.io/tags/nst/">nst</category>
      
      <category domain="https://jehyunlee.github.io/tags/bingchat/">bingchat</category>
      
      
    </item>
    
    <item>
      <title>2023 출연(연) 박사후연구원 연수성과교류회</title>
      <link>https://jehyunlee.github.io/2023/09/21/General-30-nst/</link>
      <guid>https://jehyunlee.github.io/2023/09/21/General-30-nst/</guid>
      <pubDate>Thu, 21 Sep 2023 09:00:00 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://www.nst.re.kr/&quot;&gt;nst: 국가과학기술연구회&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.nst.re.kr/&quot;&gt;&lt;b&gt;국가과학기술연구회</description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p><a href="https://www.nst.re.kr/">nst: 국가과학기술연구회</a></p></blockquote><ul><li><a href="https://www.nst.re.kr/"><b>국가과학기술연구회(NST)</b></a>에서 출연(연)에서 근무한 박사후연구원들의 연수성과교류회를 열었습니다.</li><li>훌륭한 성과를 거두신 분들에 대한 시상 이후에,</li><li>언어모델을 사용해 연구를 효율화하는 방법을 강연했습니다.</li></ul><ul><li>발표 영상 : (<a href="https://youtu.be/ZvrLE5bPc0o?t=3308">Youtube Link</a>)<br></li></ul><div class="video-container"><iframe src="https://www.youtube.com/embed/ZvrLE5bPc0o?t=3308" frameborder="0" loading="lazy" allowfullscreen></iframe></div> <ul><li>API를 사용해 각자의 니즈에 맞는 도구를 만드실 수도 있고,</li><li>이미 많이 나와 있는 훌륭한 도구를 섞어서 사용하시는 것만으로도 업무를 효율화할 수 있습니다.</li></ul><p><img src="30_nst_01.png"></p>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/General/">General</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/openai/">openai</category>
      
      <category domain="https://jehyunlee.github.io/tags/chatgpt/">chatgpt</category>
      
      <category domain="https://jehyunlee.github.io/tags/microsoft/">microsoft</category>
      
      <category domain="https://jehyunlee.github.io/tags/bingimagecreator/">bingimagecreator</category>
      
      <category domain="https://jehyunlee.github.io/tags/nst/">nst</category>
      
      <category domain="https://jehyunlee.github.io/tags/bingchat/">bingchat</category>
      
      
    </item>
    
    <item>
      <title>Guatte cè ChatGPT 3부작</title>
      <link>https://jehyunlee.github.io/2023/08/15/General-29-Trendsetter/</link>
      <guid>https://jehyunlee.github.io/2023/08/15/General-29-Trendsetter/</guid>
      <pubDate>Tue, 15 Aug 2023 08:52:00 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;b&gt;Contributor:&lt;/b&gt; 방준성, 이진희, 원종윤, 대덕특구&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;연구개발특구진흥재단에서 과학문화 트렌드 세터, 줄여서 과트세라는 이름으로 영상을 올렸습니다.&lt;/li&gt;
</description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p><b>Contributor:</b> 방준성, 이진희, 원종윤, 대덕특구</p></blockquote><ul><li>연구개발특구진흥재단에서 과학문화 트렌드 세터, 줄여서 과트세라는 이름으로 영상을 올렸습니다.</li><li>8월에 올라온 영상인데 포스팅이 10월이네요. 업로드가 많이 늦었습니다.</li><li>ETRI의 방준성 박사님, 화학연의 이진희 박사님, 동명대학교의 원종윤 교수님과 함께 3부에 걸쳐 영상을 촬영했습니다.</li><li>주최측에서 구성을 잘 해주신 덕에 편안하게 녹화하고 발표했네요 :)</li></ul><ul><li><p><b>Episode 1 ChatGPT의 이해: </b> <a href="https://youtu.be/tXjf4cCMxA0?list=PLIu2GjepvRDX2fKLTMRixjV_dJkgqDuOr">YouTube Link</a><br><br><img src="29_trendsetter_01.png"><br></p></li><li><p><b>Episode 2 ChatGPT의 활용: </b> <a href="https://youtu.be/tXjf4cCMxA0?list=PLIu2GjepvRDX2fKLTMRixjV_dJkgqDuOr">YouTube Link</a><br><br><img src="29_trendsetter_02.png"><br></p></li><li><p><b>Episode 3 연구현장과 ChatGPT: </b> <a href="https://youtu.be/tXjf4cCMxA0?list=PLIu2GjepvRDX2fKLTMRixjV_dJkgqDuOr">YouTube Link</a><br><br><img src="29_trendsetter_03.png"><br></p></li></ul>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/General/">General</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/openai/">openai</category>
      
      <category domain="https://jehyunlee.github.io/tags/chatgpt/">chatgpt</category>
      
      <category domain="https://jehyunlee.github.io/tags/microsoft/">microsoft</category>
      
      <category domain="https://jehyunlee.github.io/tags/bingimagecreator/">bingimagecreator</category>
      
      <category domain="https://jehyunlee.github.io/tags/AI-Frenz/">AI Frenz</category>
      
      
    </item>
    
    <item>
      <title>ChatGPT Code Interpreter</title>
      <link>https://jehyunlee.github.io/2023/08/09/Python-DS-132-kierlecture202303/</link>
      <guid>https://jehyunlee.github.io/2023/08/09/Python-DS-132-kierlecture202303/</guid>
      <pubDate>Tue, 08 Aug 2023 16:51:00 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://chat.openai.com/&quot;&gt;ChatGPT&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://openai.com/blog/chatgpt-plugins#code-interpreter&quot;&gt;Code In</description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p><a href="https://chat.openai.com/">ChatGPT</a><br><a href="https://openai.com/blog/chatgpt-plugins#code-interpreter">Code Interpreter</a></p></blockquote><ul><li><b>한국에너지기술연구원 AI 학습조직</b>에서는 2023년 한 해동안 <b>데이터 처리</b>를 공부합니다.<ul><li>세 번째 시간으로 <a href="https://openai.com/blog/chatgpt-plugins#code-interpreter">ChatGPT Code Interpreter</a>를 소개합니다.</li><li>챗봇으로 알려진 ChatGPT의 언어 능력과 코딩 능력, 그리고 실행 능력을 조합해 데이터를 처리합니다.</li><li>머신 러닝도 수행하고 최적화도 알아서 할 뿐만 아니라 이미지 분석까지 됩니다.</li></ul></li></ul><ul><li><b>한계</b>가 있습니다.<ul><li>일정 시간이 지나면 실행을 정지시키는 time out이 다소 엄격하게 적용되어 있습니다.</li><li>데이터의 크기가 크거나 모델이 복잡해서, 또는 최적화가 오래 걸리면 중단됩니다.</li><li>vscode의 GPT 기반 extension이나 Copilot과의 적절한 병용을 권합니다.<br><br><img src="132-kierlecture202303_01.png" alt="ChatGPT Code Interpreter로 실행한 머신 러닝 결과"></li></ul></li></ul><ul><li>발표 영상 : <a href="https://youtu.be/4AV1LzYAxJg">Youtube Link</a><br></li></ul><div class="video-container"><iframe src="https://www.youtube.com/embed/4AV1LzYAxJg" frameborder="0" loading="lazy" allowfullscreen></iframe></div> <ul><li>ChatGPT Code Interpreter 사용 이미지 프로세싱 예시 : <a href="https://chat.openai.com/share/f46fa3c3-ff2a-4e11-b872-155d5f95dee8">ChatGPT Link</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/Python/">Python</category>
      
      <category domain="https://jehyunlee.github.io/categories/Python/Data-Science/">Data Science</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/chatgpt/">chatgpt</category>
      
      <category domain="https://jehyunlee.github.io/tags/matplotlib/">matplotlib</category>
      
      <category domain="https://jehyunlee.github.io/tags/scikit-learn/">scikit-learn</category>
      
      <category domain="https://jehyunlee.github.io/tags/numpy/">numpy</category>
      
      
    </item>
    
    <item>
      <title>Bing Image Creator 활용 방법</title>
      <link>https://jehyunlee.github.io/2023/08/02/General-28-BingImageCreator/</link>
      <guid>https://jehyunlee.github.io/2023/08/02/General-28-BingImageCreator/</guid>
      <pubDate>Wed, 02 Aug 2023 12:47:00 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;b&gt;Contributor:&lt;/b&gt; August Lee, Misba Zamar, 조남경, Scott Swenor&lt;br&gt;&lt;a href=&quot;https://www.bing.com/create&quot;&gt;Bing Image Creator&lt;/</description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p><b>Contributor:</b> August Lee, Misba Zamar, 조남경, Scott Swenor<br><a href="https://www.bing.com/create">Bing Image Creator</a><br><a href="https://www.facebook.com/groups/2330023650502725/?hoisted_section_header_type=recently_seen&multi_permalinks=2406734856164937">facebook group: Bing Image Creator</a></p></blockquote><ul><li>연구개발특구 AI 특성화기업 역량강화 지원사업의 일환으로 AI프렌즈, Microsoft와 공동으로 세미나를 진행했습니다.</li><li>Microsoft Cloud Solution Architecture (CSA) <b>August Lee</b> 님께서 MS의 AI 관련 최근 행보를 정리해주셨고</li><li>이 중 하나의 제품인 Bing Image Creator를 소개하는 시간을 가졌습니다.</li></ul><ul><li><p>August Lee님, <b>“Microsoft와 인공지능”: </b> <a href="https://www.youtube.com/live/ARCC3jqN-uY?feature=share">YouTube Link</a><br><br><img src="28_bic_01.png"><br></p></li><li><p>이제현, <b>Microsoft의 이미지 생성 AI, Bing Image Creator :</b> <a href="https://www.youtube.com/watch?v=ARCC3jqN-uY&t=2350s">YouTube Link</a><br><br><img src="28_bic_02.png"><br></p></li><li><p>제 발표자료와 함께 강연에서 언급한 DALL-E 프롬프트집을 공유합니다.</p><ul><li><a href="230726_%EC%9D%B4%EC%A0%9C%ED%98%84_BIC.pdf">이제현 발표자료 다운로드</a><br></li><li><a href="The-DALL%C2%B7E-2-prompt-book-v1.02.pdf">dallery.gallery, DALL-E prompt book</a></li></ul></li></ul>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/General/">General</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/openai/">openai</category>
      
      <category domain="https://jehyunlee.github.io/tags/microsoft/">microsoft</category>
      
      <category domain="https://jehyunlee.github.io/tags/dalle/">dalle</category>
      
      <category domain="https://jehyunlee.github.io/tags/bingimagecreator/">bingimagecreator</category>
      
      <category domain="https://jehyunlee.github.io/tags/AI-Frenz/">AI Frenz</category>
      
      
    </item>
    
    <item>
      <title>Bing Image Creator (3) 특수한 연출</title>
      <link>https://jehyunlee.github.io/2023/07/16/General-27-BingImageCreator3/</link>
      <guid>https://jehyunlee.github.io/2023/07/16/General-27-BingImageCreator3/</guid>
      <pubDate>Sat, 15 Jul 2023 19:47:00 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;b&gt;Contributor:&lt;/b&gt; Misba Zamar, 안대영, Scott Swenor&lt;br&gt;&lt;a href=&quot;https://www.bing.com/create&quot;&gt;Bing Image Creator&lt;/a&gt;&lt;br&gt;&lt;a hre</description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p><b>Contributor:</b> Misba Zamar, 안대영, Scott Swenor<br><a href="https://www.bing.com/create">Bing Image Creator</a><br><a href="https://www.facebook.com/groups/2330023650502725/?hoisted_section_header_type=recently_seen&multi_permalinks=2406734856164937">facebook group: Bing Image Creator</a></p></blockquote><ul><li>ChatGPT 이후 등장하는 생성 AI들은 특징이 있습니다.</li><li>소프트웨어 출시에 따른 <b>공식 문서가 없거나 있어도 매우 짧고, 매뉴얼이라 부를만한 것이 없다는 점</b>입니다.</li><li>기존의 라이브러리가 수십~수백페이지 분량의 공식 문서를 달고 있는 것과 대비됩니다.</li><li>대량의 데이터에 기반해 행동하기 때문에 자유도가 매우 높고</li><li>다른 의미로는 <b>개발자조차 어떻게 동작할지 파악이 어렵다</b>는 것으로 볼 수도 있습니다.</li></ul><ul><li>이럴수록 서로의 경험을 나눌 수 있는 커뮤니티가 중요합니다.</li><li>입력에 따른 결과를 귀납적으로 파악해가며 본인의 의도를 표현할 방법을 찾아야 합니다.</li><li>오늘의 예제는 활동이 활발한 <a href="https://www.facebook.com/groups/2330023650502725/?hoisted_section_header_type=recently_seen&multi_permalinks=2406734856164937">Bing Image Creator</a>에서 가져왔습니다.</li><li>개별 프롬프트의 효과를 확인하고자 최대한 간단하게 표현했습니다.</li></ul><h1 id="1-투명"><a href="#1-투명" class="headerlink" title="1. 투명"></a>1. 투명</h1><h2 id="1-1-인물"><a href="#1-1-인물" class="headerlink" title="1.1. 인물"></a>1.1. 인물</h2><ul><li><p>투명인간을 직역하면 invisible man입니다.</p></li><li><p>한글과 영어로 숲 속에 있는 투명인간을 그리면 다음과 같습니다.<br><img src="25_bic3_01.png" alt="투명인간, in the forest"><br><br><img src="25_bic3_02.png" alt="invisible man, in the forest"><br></p></li><li><p>양복을 입고 중절모를 쓴 모습이 그려집니다.</p></li><li><p>H.G. Wells의 소설책 표지에도 사용된 르네 마그리트의 그림 영향이 큰 것으로 보입니다.<br><br><img src="25_bic3_03.jpg" alt="Rene Magritte, &quot;The Pilgrim&quot;"><br></p></li><li><p>온몸이 투명해보이는 사람을 그리고 싶다면 프롬프트를 바꿀 필요가 있습니다.<br><br><img src="25_bic3_04.png" alt="투명한 사람, in the forest"><br><br><img src="25_bic3_05.png" alt="transparent man, in the forest"><br></p></li></ul><h2 id="1-2-사물"><a href="#1-2-사물" class="headerlink" title="1.2. 사물"></a>1.2. 사물</h2><ul><li><p>프로토타입 이미지가 존재하는 투명인간(invisible man)과 달리,</p></li><li><p>보이지 않는(invisible)과 투명(transparent)는 사물에 다르게 적용됩니다.<br><br><img src="25_bic3_06.png" alt="투명 헬리콥터, flying in the sky"><br><br><img src="25_bic3_07.png" alt="transparent helicopter, flying in the sky"><br></p></li><li><p>transparent가 속이 비쳐 보인다면 invisible은 형체 판별이 어렵다는 느낌입니다.<br><br><img src="25_bic3_08.png" alt="invisible helicopter, flying in the sky"><br></p></li></ul><h1 id="2-fractal"><a href="#2-fractal" class="headerlink" title="2. fractal"></a>2. fractal</h1><ul><li><p>무한 반복과 자기 복제의 아름다움이 꽉 찬 프랙탈은 수학적, 미학적으로 흥미로운 소재입니다.</p></li><li><p><code>fractal</code>을 프롬프트에 추가하는 것 만으로도 환상적인 장식효과를 얻을 수 있습니다.<br><br><img src="25_bic3_09.png" alt="flowers"><br><br><img src="25_bic3_10.png" alt="flowers, fractal"><br></p></li><li><p>그러나 때로는 과하다는 느낌이 들 만큼 변형이 심하게 될 때가 있습니다.</p></li><li><p>사람 얼굴에 적용했을 때를 예로 들 수 있습니다.<br><br><img src="25_bic3_11.png" alt="a korean face"><br><br><img src="25_bic3_12.png" alt="a korean face, fractal"><br></p></li><li><p><code>fractal</code>을 장식적 용도로 사용하는 것도 좋지만, 본연의 의미를 생각해보면 좋을 것 같습니다.</p></li><li><p>자기 복제 무한 반복 패턴이 있을 때 프랙탈을 사용하면 진가가 발휘됩니다.</p></li><li><p>잎사귀의 잎맥, 나뭇잎의 회전 패턴 등에 사용하면 평면적 느낌과 함께 원래의 패턴이 강해집니다.<br><br><img src="25_bic3_13.png" alt="a leaf"><br><img src="25_bic3_14.png" alt="a leaf, fractal"><br></p></li></ul><p><img src="25_bic3_15.png" alt="Succulents, top view"><br><img src="25_bic3_16.png" alt="Succulents, top view, fractal"><br></p><h1 id="3-빛남"><a href="#3-빛남" class="headerlink" title="3. 빛남"></a>3. 빛남</h1><ul><li><p>특별한 지정이 없다면 자연광 아래의 명암이 반영되지만, 빛나는 대상을 만들 수 있습니다.</p></li><li><p><code>glowing</code>, <code>neon</code>, <code>LED</code> 같은 단어를 사용하여 광원을 연출하면 됩니다.<br><br><img src="25_bic3_17.png" alt="trees"><br><img src="25_bic3_18.png" alt="glowing trees"><br><img src="25_bic3_19.png" alt="LED trees"><br><img src="25_bic3_20.png" alt="neon trees"><br></p></li><li><p>광원 효과에 따라 대상의 형상이 바뀌는 점을 주목할 필요가 있습니다.</p></li><li><p><code>glowing</code>은 나무 본연의 모습을 바꾸지 않은 채 빛나는 효과만 추가되었다면</p></li><li><p><code>LED</code>는 점점이 빛나는 전구가 달린 것처럼 표현되었고</p></li><li><p><code>neon</code>은 주로 직선으로 구성된 줄기와 가지의 윤곽선이 도드라집니다.</p></li><li><p>데이터가 어디서 왔는지를 생각하면 납득이 어렵지 않습니다.</p></li></ul><h1 id="4-동세"><a href="#4-동세" class="headerlink" title="4. 동세"></a>4. 동세</h1><ul><li><p>어떤 움직임도 스틸사진을 찍으면 정지한 듯 보이기 쉽습니다.</p></li><li><p><code>high speed</code>를 붙이면 여기에 잔상이 부여되어 움직임이 강조됩니다. <br><br><img src="25_bic3_21.png" alt="running man"><br><img src="25_bic3_22.png" alt="running man, {high speed}"><br></p></li><li><p>정면을 향한 일부 이미지에서는 독특한 느낌이 느껴집니다.</p></li><li><p>구도를 특정하여 이런 이미지를 재현할 수 있는데, <code>FOV</code> (Field of View)를 붙이면 됩니다.<br><br><img src="25_bic3_23.png" alt="running man, {high speed}, FOV"><br></p></li><li><p>대상을 고양이로 바꾸어 그리면 FOV에서 동작이 달라지는 모습을 볼 수 있습니다.<br><br><img src="25_bic3_24.png" alt="hunting cat"><br><img src="25_bic3_25.png" alt="hunting cat, {high speed}"><br><img src="25_bic3_26.png" alt="hunting cat, {high speed}, FOV"><br></p></li></ul><h1 id="5-결론"><a href="#5-결론" class="headerlink" title="5. 결론"></a>5. 결론</h1><ul><li>극히 일부이지만 특수한 연출의 일부를 확인했습니다.</li><li>강한 표현들인 만큼 무작정 사용하기보다 필요한 시점에 적절하게 사용하시길 바랍니다.<br><br><img src="25_bic3_27.jpg" alt="a man wearing military look rushing {high speed} with a toy rifle in deep forest, full face mask, side view, DOF"></li></ul>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/General/">General</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/openai/">openai</category>
      
      <category domain="https://jehyunlee.github.io/tags/microsoft/">microsoft</category>
      
      <category domain="https://jehyunlee.github.io/tags/dalle/">dalle</category>
      
      <category domain="https://jehyunlee.github.io/tags/bingimagecreator/">bingimagecreator</category>
      
      
    </item>
    
    <item>
      <title>KIRD- 이공계 Job터뷰</title>
      <link>https://jehyunlee.github.io/2023/07/06/General-26-kirdjob/</link>
      <guid>https://jehyunlee.github.io/2023/07/06/General-26-kirdjob/</guid>
      <pubDate>Thu, 06 Jul 2023 09:00:00 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://www.kird.re.kr/&quot;&gt;KIRD: 국가과학기술인력개발원&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://www.youtube.com/@kirdkird&quot;&gt;KIRD Youtube Channel&lt;</description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p><a href="https://www.kird.re.kr/">KIRD: 국가과학기술인력개발원</a><br><a href="https://www.youtube.com/@kirdkird">KIRD Youtube Channel</a></p></blockquote><ul><li><a href="https://www.kird.re.kr/"><b>국가과학기술인력개발원(KIRD)</b></a>에서 좋은 기회를 주셨습니다.</li><li>전공이나 연구분야 변경에 불안해하는 대학원생 및 젊은 연구자들에게 저의 이야기를 들려주자는 제안을 주셔서,</li><li>지나온 길을 담담하게 말씀드렸습니다.</li></ul><ul><li><p>지나온 뒤에는 담담이지만 당시에는 몸과 마음이 격류에 휩싸여있었습니다.</p></li><li><p>잘 타던 배에서 떠밀려 자칫하면 빠져 죽을 수도 있다는 공포에 휩싸인 적도 있었고</p></li><li><p>내가 탄 배가 가고자 하는 방향으로 가지 않아 내 발로 뛰어내린 적도 있습니다.</p></li><li><p>계기와 형태가 무엇이건간에 모든 도전을 응원합니다.<br></p></li><li><p>발표 영상 : (<a href="https://youtu.be/DXjRdBuJ7e8">Youtube Link</a>)<br></p></li></ul><div class="video-container"><iframe src="https://www.youtube.com/embed/DXjRdBuJ7e8" frameborder="0" loading="lazy" allowfullscreen></iframe></div> <p><img src="26_kirdjob_01.png"></p>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/General/">General</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/openai/">openai</category>
      
      <category domain="https://jehyunlee.github.io/tags/chatgpt/">chatgpt</category>
      
      <category domain="https://jehyunlee.github.io/tags/seoul/">seoul</category>
      
      <category domain="https://jehyunlee.github.io/tags/education/">education</category>
      
      
    </item>
    
    <item>
      <title>UST Tech. Review - ChatGPT 연구 활용 방안</title>
      <link>https://jehyunlee.github.io/2023/07/04/General-25-utr/</link>
      <guid>https://jehyunlee.github.io/2023/07/04/General-25-utr/</guid>
      <pubDate>Tue, 04 Jul 2023 11:41:00 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://ust.ac.kr/&quot;&gt;UST&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://industry.ust.ac.kr/bbs/BBSMSTR_000000000783/view.do&quot;&gt;UST Technology</description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p><a href="https://ust.ac.kr/">UST</a><br><a href="https://industry.ust.ac.kr/bbs/BBSMSTR_000000000783/view.do">UST Technology Review vol.4.</a></p></blockquote><ul><li><b>UST(과학기술연합대학원대학교)</b>에서 발행하는 <b>UST Tech Review</b>에 글을 실었습니다.</li><li><b>ChatGPT 연구 활용 방안</b>이라는 제목으로 ChatGPT뿐 아니라 주변 기능들을 함께 사용하는 법에 대한 글입니다.</li><li>글을 제출하고 보니 나란히 기고한 <b>AI Factory 김태영 대표님</b>과 논조가 매우 비슷하더군요.</li><li>바라보는 시각이 비슷하다보니 둘이 논의한 것도 아닌데 그렇게 되었습니다. :) <br></li></ul><blockquote><p><a href="https://industry.ust.ac.kr/ebook/technology_review_vol4/index.html"><b>e-book 보기 링크</b></a></p></blockquote><p><img src="25_utr_02.png"><br></p><ul><li>약간의 아쉬움이 남습니다.</li><li>집필부터 출간까지의 시간이 결코 길다고는 볼 수 없었음에도 불구하고</li><li>ChatGPT가 앞장선 LLM과 LangChain의 속도에 비해서는 느리다고 느껴집니다.</li><li>기술의 속도를 느낄 수 있는 계기가 되었습니다.<br></li></ul><p><img src="25_utr_01.png" alt="UST Technology Review vol.4 표지"><br></p>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/General/">General</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/openai/">openai</category>
      
      <category domain="https://jehyunlee.github.io/tags/chatgpt/">chatgpt</category>
      
      <category domain="https://jehyunlee.github.io/tags/UST/">UST</category>
      
      
    </item>
    
    <item>
      <title>Bing Image Creator (2) 사진 배율과 효과</title>
      <link>https://jehyunlee.github.io/2023/06/29/General-24-BingImageCreator2/</link>
      <guid>https://jehyunlee.github.io/2023/06/29/General-24-BingImageCreator2/</guid>
      <pubDate>Wed, 28 Jun 2023 19:33:00 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;b&gt;Contributor:&lt;/b&gt; 조남경님&lt;br&gt;&lt;a href=&quot;https://www.bing.com/create&quot;&gt;Bing Image Creator&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;이미지 생성 A</description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p><b>Contributor:</b> 조남경님<br><a href="https://www.bing.com/create">Bing Image Creator</a></p></blockquote><ul><li>이미지 생성 AI를 이용해 가상의 사진을 찍는 효과를 얻을 수 있습니다.</li><li>인물, 동물, 사물, 풍경 등을 찍을 때 가능한 효과를 알아봅니다.</li><li><b>본 글에는 모든 사례를 담을 수 없습니다.</b> 예시로 생각해주시고 <b>무한한 가능성을 누벼주시기 바랍니다.</b></li><li>대개 <b>이거 될까?</b> 싶으면 <b>거의 됩니다.</b></li></ul><h1 id="1-인물-Camera-shots"><a href="#1-인물-Camera-shots" class="headerlink" title="1. 인물 Camera shots"></a>1. 인물 Camera shots</h1><blockquote><p><a href="https://www.studiobinder.com/blog/ultimate-guide-to-camera-shots">Studio Binder: Ultimate Guide to Camera Shots</a></p></blockquote><ul><li>이미지 생성 AI는 사람이 그림을 보고 설명하듯 prompt를 작성하면 이에 맞는 이미지가 생성됩니다.</li><li>생성 모델이 학습했을 수많은 이미지-Text 쌍을 생각해 봅시다.</li><li>각종 사진 밑에 달린 촬영 기법에 대한 주석을 떠올릴 수 있을 것입니다.<br></li></ul><h2 id="1-1-by-Reference"><a href="#1-1-by-Reference" class="headerlink" title="1.1. by Reference"></a>1.1. by Reference</h2><p><img src="24_bic2_08.png"><br></p><ul><li>인물 사진을 찍을 때 이와 같이 다양한 범위를 적용할 수 있습니다.</li><li>그렇다면 <a href="https://www.bing.com/create">Bing Image Creator</a>를 비롯한 이미지 생성 AI에서도 가능할 것 같습니다.</li><li>성별 이슈를 피하기 위해 성별이 없는 마네킹을 세워놓고 카메라 샷만 바꿔가며 촬영합니다.</li><li>최근 자주 보이는 생성 이미지의 질적 향상이 반가운 반면 <b>굳이 헐벗은 어린 여자들을 그려야 하는지</b>는 의문입니다.</li></ul><blockquote><p>manikin {gender: neutral}, front view, grayscale, [camera shot]</p></blockquote><ul><li>구도는 정면, 색은 회색조(grayscale)로 지정하고 <code>[camera shot]</code> 부분에 위 예시들을 번갈아가며 넣습니다.</li><li>결과는 다음과 같습니다.<br></li></ul><p><img src="24_bic2_01.png" alt="Various camera shots. 클릭하면 커집니다."><br></p><ul><li>full shot은 전신이, extreme close up은 얼굴만 나왔습니다.</li><li>전반적으로 배율을 높여가는 경향은 관찰되지만 위 예제와는 많이 다릅니다.</li><li><b>full shot부터 medium close up까지 구분도 잘 되지 않고, close up은 그림마다 제각각입니다.</b></li><li>믿고 사용하기에는 많이 부족합니다.</li></ul><h2 id="1-2-by-anatomy"><a href="#1-2-by-anatomy" class="headerlink" title="1.2. by anatomy"></a>1.2. by anatomy</h2><ul><li><p>집중하고자 하는 신체 부위를 명시하는 방식으로 카메라 배율을 조정해 봅니다.</p></li><li><p>손, 눈 등 신체 부위의 이름을 지정하면 훨씬 직관적일 듯 합니다.</p></li><li><p>full body를 시작으로 upper body(상체), lower body(하체)를 나누고 배율을 높여갑니다.<br><br><img src="24_bic2_02.png" alt="Various camera shots. 클릭하면 커집니다."><br></p></li><li><p><b>full body</b>는 성공적입니다. </p></li><li><p><b>upper body</b>와 <b>torso</b>도 괜찮습니다 - 사실 torso는 허리부터 목까지 나오기를 기대했습니다.</p></li><li><p>아쉽지만 일관성은 있으니 넘어갑니다.</p></li><li><p><b>head</b>와 <b>nose</b>도 의도에 충실한 결과가 나왔습니다.<br></p></li></ul><ul><li>그러나 하반신에서 문제가 발견됩니다.</li><li><b>lower body</b>는 제대로 그려지지 않고</li><li><b>legs</b>는 <b>유해 컨텐츠 경고</b>가 뜹니다 - 사람이 아니라 마네킹인데도 이러네요.</li><li><b>feet</b>은 문제가 없습니다.</li></ul><ul><li><p>한편, 같은 내용이라도 프롬프트 사용 방식에 따라 다른 결과가 나옵니다.</p></li><li><p><b>남성의 torso</b> 사진을 제작했습니다.</p></li><li><p>한 번은 <b>a man, front view, grayscale, torso</b>로 제작했고</p></li><li><p>다음에는 <b>torso of a man, front view, grayscale</b>로 제작했습니다.</p></li><li><p>의미상으로는 완전히 동일한 것으로 생각되나 결과물은 다음과 같습니다.<br><br><img src="24_bic2_03.png" alt="torso의 prompt별 비교. 클릭하면 커집니다."><br></p></li><li><p>여성도 마찬가지입니다. 남성과 동일하게 적용됩니다.</p></li><li><p>마네킹 다리는 경고를 띄우면서 여성의 상체는 부각시키는 점이 의아하기도 합니다.</p></li><li><p>명시적인 가이드라인이 없어 시행착오를 통해 알아가야 합니다.<br><br><img src="24_bic2_07.png" alt="여성 torso의 prompt별 비교. 클릭하면 커집니다."><br></p></li></ul><h1 id="2-건물-동물-사물"><a href="#2-건물-동물-사물" class="headerlink" title="2. 건물, 동물, 사물"></a>2. 건물, 동물, 사물</h1><ul><li>그렇다면 신체 부위가 없는 건물, 동물, 사물은 어떨까요?</li><li>동물이라면 head, feet 등을 그대로 사용할 수 있겠지만 건물과 사물은 그럴 수 없습니다.</li><li>게다가, 경험적으로 피사체의 크기가 달라지면 같은 효과도 결과가 달라짐을 알고 있습니다.</li></ul><h2 id="2-1-건물"><a href="#2-1-건물" class="headerlink" title="2.1. 건물"></a>2.1. 건물</h2><blockquote><p>buildings in a city, [camera setting]</p></blockquote><ul><li><p>프롬프트를 위와 같이 고정하고 <code>[camera setting]</code>만 변화를 줍니다.</p></li><li><p><b>None</b>은 아무런 입력을 하지 않은 결과입니다.<br><br><img src="24_bic2_04.png" alt="도시 전경의 prompt별 비교. 클릭하면 커집니다."><br></p></li><li><p><b>None</b>의 일상적인 풍경이 설정에 따라 완전히 바뀝니다.</p></li><li><p><b>fisheye</b>(어안렌즈)와 <b>wide angle</b>(광각)은 비슷한 듯 다릅니다.</p></li><li><p><b>wide angle</b>과 <b>wide view</b>는 시점이 다릅니다.</p></li><li><p><b>35 mm</b>는 눈 앞에서 보는 것 같고 <b>telephoto</b>는 줌을 당긴 듯 합니다.</p></li><li><p><b>bokeh</b>와 <b>lomo</b>가 독특한데, 초점이 맞지 않은 듯 필름에 빛이 들어간 듯 합니다.</p></li></ul><h2 id="2-2-동물"><a href="#2-2-동물" class="headerlink" title="2.2. 동물"></a>2.2. 동물</h2><blockquote><p>white cat, [camera setting]</p></blockquote><p><img src="24_bic2_05.png" alt="고양이 사진의 prompt별 비교. 클릭하면 커집니다."><br></p><ul><li>지난 글의 하얀 고양이를 다시 사용합니다.</li><li><b>fisheye와 wide angle</b>이 비슷해 보이지만 fisheye가 카메라를 들여다보는 느낌이 더 강합니다.</li><li><b>wide view</b>는 <b>None</b>, <b>35 mm</b>, <b>telephoto</b>와 차이를 느끼기 어렵습니다.</li><li><b>bokeh</b>가 진가를 발휘합니다. 고양이 주변으로 이슬이 아롱거리는 듯 합니다.</li><li><b>lomo</b>의 효과는 시크한 표정과 잘 어우러집니다.</li></ul><h2 id="2-3-사물"><a href="#2-3-사물" class="headerlink" title="2.3. 사물"></a>2.3. 사물</h2><blockquote><p>water droplet, [camera setting]</p></blockquote><p><img src="24_bic2_06.png" alt="물방울 사진의 prompt별 비교. 클릭하면 커집니다."><br></p><ul><li>가장 작은 물체 중 하나인 물방울을 그렸습니다.</li><li>전체적으로 <b>fisheye</b>를 제외하면 화면의 변화를 알아채기가 어렵습니다.</li><li><b>bokeh</b>와 <b>lomo</b>가 독특한 효과를 줄 뿐입니다.</li></ul><h1 id="3-색의-3요소-제어-채도-명도-색상"><a href="#3-색의-3요소-제어-채도-명도-색상" class="headerlink" title="3. 색의 3요소 제어 - 채도, 명도, 색상"></a>3. 색의 3요소 제어 - 채도, 명도, 색상</h1><ul><li>온라인에서 볼 수 있는 생성 이미지의 공통점 중 하나는 <b>색상이 화려하다</b>는 점입니다.</li><li>의도적인 설정인지는 모르겠으나 전반적으로 대비가 강하고 현란한 색의 그림이 많습니다.</li><li>실제로 동물이나 인물 위주로 생성시키면 왠지 그런 그림들이 많이 그려집니다.</li><li>그러나 색의 3요소 - 채도, 명도, 색상을 전반적으로 조정하면 다채로운 연출을 할 수 있습니다.</li></ul><h2 id="3-1-전반적-제어"><a href="#3-1-전반적-제어" class="headerlink" title="3.1. 전반적 제어"></a>3.1. 전반적 제어</h2><blockquote><p>rainbow, [color setting]</p></blockquote><ul><li><p>무지개를 다양한 효과와 함께 그린 예시입니다.<br><br><img src="24_bic2_09.png" alt="무지개 사진의 prompt별 비교. 클릭하면 커집니다."><br></p></li><li><p>같은 무지개라도 <b>밝고</b>, <b>어둡고</b>, <b>선명하고</b>, <b>흐리고</b>, <b>흑백</b>으로 표현할 수 있습니다.</p></li><li><p>특정 색상을 지정하여 <b>붉은 느낌이 강하게</b> 할 수도 있으며,</p></li><li><p>심지어 <b>은색이 강하게</b> 처럼 존재하지 않는 색을 지정할 수도 있습니다.</p></li></ul><h2 id="3-2-부분적-제어"><a href="#3-2-부분적-제어" class="headerlink" title="3.2. 부분적 제어"></a>3.2. 부분적 제어</h2><ul><li>색 요소 지정을 부분적으로 적용할 수도 있습니다.</li><li><a href="https://jehyunlee.github.io/2023/06/25/General-23-BingImageCreator1/">지난 시간</a>에 익혔던 중괄호 <code>&#123; &#125;</code>를 사용하면 편리합니다.</li><li>전반적인 느낌을 지정한 후 특정 부분에만 다른 속성을 인가하는 식입니다.</li></ul><blockquote><p>a basket of tropical fruits {grayscale}, a banana at center {yellow}, top view</p></blockquote><p><img src="24_bic2_10.png" alt="전체 흑백, 가운데 바나나만 노랑. 클릭하면 커집니다."><br></p><h1 id="4-결론"><a href="#4-결론" class="headerlink" title="4. 결론"></a>4. 결론</h1><ul><li>사진 용어를 사용한 배율 제어에 한계가 있는 것은 아쉽지만 다른 방식으로 강조 부위에 집중할 수 있습니다.</li><li>torso 예시에서 보았듯 같은 의도도 표현에 따라 결과물이 다르기 때문에 다양한 시도를 통한 학습이 필요합니다.</li><li>여러 방법을 조합하여 원하는 결과물을 연출하시기 바랍니다.</li></ul>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/General/">General</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/openai/">openai</category>
      
      <category domain="https://jehyunlee.github.io/tags/microsoft/">microsoft</category>
      
      <category domain="https://jehyunlee.github.io/tags/dalle/">dalle</category>
      
      <category domain="https://jehyunlee.github.io/tags/bingimagecreator/">bingimagecreator</category>
      
      
    </item>
    
    <item>
      <title>Bing Image Creator (1) 시작</title>
      <link>https://jehyunlee.github.io/2023/06/25/General-23-BingImageCreator1/</link>
      <guid>https://jehyunlee.github.io/2023/06/25/General-23-BingImageCreator1/</guid>
      <pubDate>Sat, 24 Jun 2023 15:40:00 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;b&gt;Contributor:&lt;/b&gt; 조남경님&lt;br&gt;&lt;a href=&quot;https://www.bing.com/create&quot;&gt;Bing Image Creator&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Microsof</description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p><b>Contributor:</b> 조남경님<br><a href="https://www.bing.com/create">Bing Image Creator</a></p></blockquote><ul><li>Microsoft가 OpenAI와 손을 잡고 진격을 계속하고 있습니다.</li><li>ChatGPT 관련된 협력에 이어 지난 5월 21일, <a href="https://blogs.microsoft.com/blog/2023/03/21/create-images-with-your-words-bing-image-creator-comes-to-the-new-bing/">BingChat에서 그림을 그릴 수 있음</a>을 공지했습니다.</li></ul><ul><li>이미 <a href="https://www.bing.com/create">Bing Image Creator</a>라는 이름으로 OpenAI의 DALL-E를 서비스하기 시작했으며</li><li><a href="https://divine.ai/blog/dall-e-2-vs-bing-image-creator-do-we-have-a-winner/">모든 면에서 DALL-E보다 성능이 우수하다</a>는 평을 받고 있습니다.</li><li>Midjourney, Stable Diffusion 등 다른 좋은 모델들이 있습니다.</li><li>그렇지만 Bing Image Creator는 간편합니다. <b>Discord 없이 웹에서 접근 가능</b>하고, <b>Bingchat</b>에서 쓸 수 있다는 장점이 있습니다.</li><li>특징을 하나씩 알아가는 중이지만 본 글을 통해 제가 알게 된 노하우를 조금씩 나누고자 합니다.</li></ul><h1 id="1-Bing-Image-Creator-접속"><a href="#1-Bing-Image-Creator-접속" class="headerlink" title="1. Bing Image Creator 접속"></a>1. Bing Image Creator 접속</h1><ul><li><p><a href="https://www.bing.com/create">https://www.bing.com/create</a>에 접속하면 다음과 같은 화면이 보입니다.<br><br><img src="23_bic1_01.png"><br></p></li><li><p>혹시 위와 같은 화면이 보이지 않는다면, <b>오른쪽 위</b>에서 <b>로그인</b>버튼을 찾아 들어갑니다.</p></li><li><p><b>Microsoft 계정</b>이 필요합니다.</p></li><li><p>윈도우 사용자라면 윈도우를 설치할 때 사용한 그 계정을 사용하시면 됩니다.</p></li></ul><ul><li><p>전반적인 구성은 단순합니다.</p></li><li><p><b>상단 입력창</b>에 프롬프트를 입력해 그림을 생성합니다.</p></li><li><p>자주색 <b>만들기</b> 버튼을 누르면 그림이 생성되는데, 바로 왼쪽 <b>번개 코인</b> 숫자가 보일 것입니다.</p></li><li><p><b>부스트</b>라고 합니다.</p></li><li><p>그림을 한 번 그릴 때마다 숫자가 차감이 되지만 0이 된다고 못 그리지 않습니다. 늦게 그려질 뿐입니다.<br><br><img src="23_bic1_17.png"><br></p></li><li><p>부스트는 <b>오후 4시경 리셋</b>됩니다.</p></li><li><p>Microsoft bing 검색, Edge browser 사용 등 Microsoft 제품을 열심히 쓰면 최대 코인 수가 늘어납니다.</p></li><li><p>저는 매일 부스트가 100개로 리셋됩니다.</p></li><li><p><b>Microsoft Edge browser</b>를 기본으로 사용하고 있기 때문입니다.</p></li></ul><h1 id="2-그림-그리기"><a href="#2-그림-그리기" class="headerlink" title="2. 그림 그리기"></a>2. 그림 그리기</h1><ul><li>첫 번째 그림으로 <b>고양이</b>를 그립니다.</li><li>입력창에 <b>cat</b>이라고 입력하고 <b>만들기</b>를 누릅니다.<br></li></ul><p><img src="23_bic1_02.png" alt="&quot;cat&quot;"><br></p><ul><li>잠시 기다림이 지난 후 고양이 얼굴이 생겼습니다.</li><li>반가운 마음에 곧장 다운로드를 하고 싶겠지만 조금만 참아봅시다.</li><li>내 머리 속에는 <b>하얀 고양이가 웃는 옆모습</b>이 자리잡고 있기 때문입니다.</li><li>이 그림을 머리 속에서 화면으로 옮기려고 합니다.</li></ul><h1 id="3-그림-고치기"><a href="#3-그림-고치기" class="headerlink" title="3. 그림 고치기"></a>3. 그림 고치기</h1><h2 id="3-1-고양이-표정-색-고치기"><a href="#3-1-고양이-표정-색-고치기" class="headerlink" title="3.1. 고양이 표정, 색 고치기"></a>3.1. 고양이 표정, 색 고치기</h2><ul><li>cat 앞에 smiling과 white를 차례로 추가해 표정과 색을 지정합니다.<br></li></ul><p><img src="23_bic1_03.png" alt="&quot;smiling cat&quot;"><br></p><p><img src="23_bic1_04.png" alt="&quot;smiling white cat&quot;"><br></p><ul><li>이 밖에 원하는 그림이 있다면 속성을 지정하는 말을 얼마든지 붙일 수 있습니다.</li><li><b>귀찮게 외워야 하는 특별한 명령어가 없습니다.</b></li><li><b>머리 속으로 그림을 최대한 구체적으로 그린 후, 이를 말로 옮기면 됩니다.</b></li></ul><h2 id="3-2-우리말로-명령하기"><a href="#3-2-우리말로-명령하기" class="headerlink" title="3.2. 우리말로 명령하기"></a>3.2. 우리말로 명령하기</h2><ul><li>꼭 영어를 사용해야 하는 것은 아닙니다.</li><li><b>미소짓는 하얀 고양이</b>를 입력해도 같은 효과가 있습니다.<br></li></ul><p><img src="23_bic1_07.png" alt="&quot;미소짓는 하얀 고양이&quot;"><br></p><ul><li>그러나 저는 영어 입력을 선호하는 편입니다.</li><li>이런 모델이 학습한 언어 중 영어의 비율이 압도적이기 때문에 적확한 표현이 가능하기 때문입니다.</li><li>물론 영어단어가 잘 떠오르지 않거나 한글 입력이 더 적확할 때는 한글을 씁니다만,</li><li>경험적으로 영어 입력이 의도를 더 잘 반영하는 것 같습니다.</li></ul><ul><li>“미소짓는 white cat” 처럼 <b>여러 언어를 섞어도 됩니다.</b><br></li></ul><p><img src="23_bic1_08.png" alt="&quot;미소짓는 white cat&quot;"><br></p><h2 id="3-3-속성-개별-지정"><a href="#3-3-속성-개별-지정" class="headerlink" title="3.3. 속성 개별 지정"></a>3.3. 속성 개별 지정</h2><ul><li>고양이의 속성으로 “smiling”과 “white”를 지정했습니다.</li><li>묘사하고자 하는 속성이 길어지면 문장이 꼬이기 시작합니다.</li><li>이럴 때, 속성을 따로 떼어 지정할 수 있으면 의도 반영이 유리해집니다.</li><li><b>중괄호</b>를 사용할 수 있으며, 소재, 스타일, 색, 크기 등 여러 속성을 지정할 수 있습니다.<br></li></ul><p><img src="23_bic1_05.png" alt="&quot;cat {smile}{white}&quot;"><br></p><h2 id="3-4-구도-지정"><a href="#3-4-구도-지정" class="headerlink" title="3.4. 구도 지정"></a>3.4. 구도 지정</h2><ul><li>우리 그림에서는 고양이가 정면을 보여주고 있습니다.</li><li>그러나 사실 그래야만 하는 이유는 없습니다. <b>smile</b>이라는 단어에 의해 확률적으로 앞모습이 나왔을 뿐입니다.</li><li>고양이를 바라보는 카메라의 방향을 지정하면 구도가 바뀝니다.<br></li></ul><p><img src="23_bic1_16.png" alt="여러 가지 구도"><br></p><ul><li><b>side view</b>라는 입력에 <b>left view</b>가 나온 것은 우연입니다.</li><li>방향을 지정하고자 하면 <b>right view</b>처럼 명확히 지정할 수 있습니다.</li><li>뒷모습을 뜻하는 <b>rear view</b>에서는 고양이가 고개를 돌리고 있습니다. <b>smiling</b>때문입니다.</li></ul><ul><li><b>같은 구도가 여러 이름으로 표현되기도 합니다.</b></li><li><b>top view</b>는 <b>overhead shot</b>과 동일하고, <b>bottom view</b>는 <b>low angle</b>과 동일합니다.</li><li><b>dutch angle</b>은 <b>front view</b>와 유사하나 삐딱합니다.</li></ul><ul><li>좌우는 딱히 중요하지 않으므로 side view로 지정하겠습니다.</li></ul><h2 id="3-5-표현-범위-지정"><a href="#3-5-표현-범위-지정" class="headerlink" title="3.5. 표현 범위 지정"></a>3.5. 표현 범위 지정</h2><ul><li>고양이 머리만 잔뜩 그려지고 있지만, 저는 고양이 전체 모습을 그리고 싶습니다.</li><li>그림 대상을 명확히 해서 다리와 꼬리까지 모두 나오게 해봅니다.</li><li>먼저, full body라는 프롬프트를 시도합니다.<br></li></ul><p><img src="23_bic1_10.png" alt="&quot;smiling white cat, side view, full body&quot;"><br></p><ul><li>명령이 불충분한 것 같습니다. 마음에 드는 그림이 나오지 않았습니다.</li><li>발과 꼬리를 포함하라는 뜻으로 including feet and tail을 추가합니다.<br></li></ul><p><img src="23_bic1_12.png" alt="&quot;smiling white cat, side view, full body including feet and tail&quot;"><br></p><ul><li>갑자기 만화체가 등장해서 조금 당황스럽긴 하지만 이상한 일은 아닙니다.</li><li>그림체를 지정한 적은 없으니까요. 애초에 사진 같은 이미지도 랜덤으로 나왔을 뿐입니다.</li><li><b>왼쪽 아래 이미지</b>가 맘에 듭니다. 저장하기로 합시다. 선택합니다.</li></ul><h1 id="4-그림-저장"><a href="#4-그림-저장" class="headerlink" title="4. 그림 저장"></a>4. 그림 저장</h1><ul><li>화면 한가득 내가 선택한 그림이 펼쳐집니다.<br></li></ul><p><img src="23_bic1_13.png" alt="&quot;smiling white cat, side view, full body&quot;"><br></p><ul><li><b>다운로드</b>를 누르면 파일이 저장됩니다. <b>1024 x 1024</b>의 .jpg입니다.</li></ul><p><img src="23_bic1_17.jpg"><br></p><ul><li><b>저장</b>을 누르면 내 bing 계정에 저장됩니다. <br></li></ul><p><img src="23_bic1_14.png" alt="&quot;smiling white cat, side view, full body&quot;"><br></p><ul><li>링크를 따라가면 내가 저장했던 그림들을 나중에 다시 꺼내볼 수 있습니다. <br></li></ul><p><img src="23_bic1_15.png"><br></p><ul><li>오늘은 여기까지입니다.</li><li>각자 머리 속에 떠오른 그림을 그려보면 어떨까요?</li></ul>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/General/">General</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/openai/">openai</category>
      
      <category domain="https://jehyunlee.github.io/tags/microsoft/">microsoft</category>
      
      <category domain="https://jehyunlee.github.io/tags/dalle/">dalle</category>
      
      <category domain="https://jehyunlee.github.io/tags/bingimagecreator/">bingimagecreator</category>
      
      
    </item>
    
    <item>
      <title>SciPy Smoothing</title>
      <link>https://jehyunlee.github.io/2023/06/20/Python-DS-131-kierlecture202302/</link>
      <guid>https://jehyunlee.github.io/2023/06/20/Python-DS-131-kierlecture202302/</guid>
      <pubDate>Tue, 20 Jun 2023 13:20:00 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://scipy.org/&quot;&gt;SciPy&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;한국에너지기술연구원 AI 학습조직&lt;/b&gt;에서는 2023년 한 해동안 &lt;b&gt;데이터 처리&lt;/b&gt;를 공부</description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p><a href="https://scipy.org/">SciPy</a></p></blockquote><ul><li><b>한국에너지기술연구원 AI 학습조직</b>에서는 2023년 한 해동안 <b>데이터 처리</b>를 공부합니다.<ul><li>두 번째 시간으로 <a href="https://scipy.org/">SciPy</a>를 활용한 smoothing을 소개합니다.</li><li>smoothing은 신호의 잡음을 억제해 신호를 더 잘 드러내는 기술입니다.</li><li>인접한 데이터끼리 평균을 내는 <b>adjacent averaging</b>, 중간값을 취하는 <b>median</b> 외에도</li><li>데이터를 따라가며 polynomial fitting을 하는 <b>Savitsky-Golay</b>,</li><li>데이터의 주기성을 파악하여 이를 바탕으로 신호를 재구성하는 <b>inverse FFT</b>까지 여러 기법이 있습니다.</li></ul></li></ul><ul><li><b>이미지 부분 확대</b>를 사용했습니다.<ul><li>데이터의 일부를 확대하기 위해 Matplotlib의 <code>Axes.indicate_inset_zoom()</code>을 활용했습니다.</li><li>자세한 내용은 소스코드를 참고하시기 바랍니다.<br><img src="131-kierlecture202302_01.png"></li></ul></li></ul><ul><li>발표 영상 : <a href="https://youtu.be/swIlsPoprQM">Youtube Link</a><br></li></ul><div class="video-container"><iframe src="https://www.youtube.com/embed/swIlsPoprQM" frameborder="0" loading="lazy" allowfullscreen></iframe></div> <ul><li>실습 코드 : (<a href="https://bit.ly/3NaBpX0">https://bit.ly/3NaBpX0</a>)</li></ul>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/Python/">Python</category>
      
      <category domain="https://jehyunlee.github.io/categories/Python/Data-Science/">Data Science</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/matplotlib/">matplotlib</category>
      
      <category domain="https://jehyunlee.github.io/tags/numpy/">numpy</category>
      
      <category domain="https://jehyunlee.github.io/tags/scipy/">scipy</category>
      
      
    </item>
    
    <item>
      <title>SciPy 소개 + curve fitting</title>
      <link>https://jehyunlee.github.io/2023/05/19/Python-DS-130-kierlecture202301/</link>
      <guid>https://jehyunlee.github.io/2023/05/19/Python-DS-130-kierlecture202301/</guid>
      <pubDate>Fri, 19 May 2023 08:13:00 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://scipy.org/&quot;&gt;SciPy&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;한국에너지기술연구원 AI 학습조직&lt;/b&gt;에서는 2023년 한 해동안 &lt;b&gt;데이터 처리&lt;/b&gt;를 공부</description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p><a href="https://scipy.org/">SciPy</a></p></blockquote><ul><li><b>한국에너지기술연구원 AI 학습조직</b>에서는 2023년 한 해동안 <b>데이터 처리</b>를 공부합니다.<ul><li>첫 시간으로 <a href="https://scipy.org/">SciPy</a>를 소개합니다.</li><li><b>SciPy</b>는 미분방정식을 풀고, 적분을 해주고, 최적해를 찾아주는 막강한 기능을 가지고 있습니다.</li><li>그러나 Numpy에 비해 덜 필수적이고 - Numpy는 데이터를 다룰 때 필수니까요</li><li>SciPy가 막강한 힘을 발휘하는 공학 분야에 계신 분들은 의외로 코딩과 친하지 않아서 그런지,</li><li>수년 전부터 억울하게 저평가를 받고 있다는 느낌이 있어 여러분께 소개드리고자 합니다.</li><li><a href="230517_%EC%9D%B4%EC%A0%9C%ED%98%84_KIER_EnergyAI_1%EC%B0%A8%EB%AA%A8%EC%9E%84.pdf">강의 자료는 여기에서 다운받으실 수 있습니다</a></li></ul></li></ul><ul><li>발표 영상 : <a href="https://youtu.be/r7GABULBFvA">Youtube Link</a><br></li></ul><div class="video-container"><iframe src="https://www.youtube.com/embed/r7GABULBFvA" frameborder="0" loading="lazy" allowfullscreen></iframe></div> <ul><li>실습 코드 : (<a href="https://bit.ly/AIEnergy_230517_2">https://bit.ly/AIEnergy_230517_2</a>)</li></ul>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/Python/">Python</category>
      
      <category domain="https://jehyunlee.github.io/categories/Python/Data-Science/">Data Science</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/matplotlib/">matplotlib</category>
      
      <category domain="https://jehyunlee.github.io/tags/numpy/">numpy</category>
      
      <category domain="https://jehyunlee.github.io/tags/scipy/">scipy</category>
      
      
    </item>
    
    <item>
      <title>챗GPT 러닝데이 &amp; MS 애저톤 - Open API를 활용한 연구원의 업무 효율화</title>
      <link>https://jehyunlee.github.io/2023/04/28/Python-DS-129-azurethon/</link>
      <guid>https://jehyunlee.github.io/2023/04/28/Python-DS-129-azurethon/</guid>
      <pubDate>Thu, 27 Apr 2023 21:54:00 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://aifactory.space/&quot;&gt;AI Factory&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://aifactory.space/learning/2361/discussion/234&quot;&gt;AI Facto</description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p><a href="https://aifactory.space/">AI Factory</a><br><a href="https://aifactory.space/learning/2361/discussion/234">AI Factory: [챗GPT 러닝데이 &amp; MS 애저톤] Open API를 활용한 연구원의 업무 효율화 -이제현</a><br><a href="230425_MVP_OpenAPI.pdf">강의자료 다운로드</a><br><a href="https://bit.ly/3HaUIgy">예제코드: Google Colab</a><br><a href="https://blog.langchain.dev/">Langchain 공식 블로그</a><br><a href="https://python.langchain.com/en/latest/index.html">Langchain 공식문서</a></p></blockquote><ul><li><a href="https://aifactory.space/">AI Factory</a> 김태영 대표님(MS RD, MS MVP AI)의 초청으로 <b>챗GPT 러닝데이 &amp; MS 애저톤</b>에서 발표를 드렸습니다.</li><li>제가 늘상 수행하는 연구원의 업무 효율화 일부를 <a href="https://blog.langchain.dev/">Langchain</a>을 사용해 대체했습니다.</li></ul><ul><li><p>대량의 논문을 가져와서 약간의 데이터 처리를 거쳐 두 가지로 정리합니다.</p></li><li><p>첫번째로 <b>년도별 출판 건수</b>를 그림으로 정리하고,</p></li><li><p>두번째로는 <b>요약보고서</b>를 만드는 시나리오입니다.<br><br><img src="129_azurethon_01.png"><br><br><img src="129_azurethon_02.png"><br></p></li><li><p>발표 영상 : <a href="https://youtu.be/ENun2zuvZuE">Youtube Link</a><br></p><p></li></ul><div class="video-container"><iframe src="https://www.youtube.com/embed/ENun2zuvZuE" frameborder="0" loading="lazy" allowfullscreen></iframe></div> <ul><li><a href="https://aifactory.space/">AI Factory</a>에서는 이 외에도 많은 양질의 강의를 제공합니다.</li><li>원하는 내용의 영상을 보시고 필요한 기술을 습득하시기 바랍니다.<br><br><img src="129_azurethon_03.png"></li></ul>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/Python/">Python</category>
      
      <category domain="https://jehyunlee.github.io/categories/Python/Data-Science/">Data Science</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/openai/">openai</category>
      
      <category domain="https://jehyunlee.github.io/tags/chatgpt/">chatgpt</category>
      
      <category domain="https://jehyunlee.github.io/tags/microsoft/">microsoft</category>
      
      <category domain="https://jehyunlee.github.io/tags/llm/">llm</category>
      
      <category domain="https://jehyunlee.github.io/tags/langchain/">langchain</category>
      
      <category domain="https://jehyunlee.github.io/tags/azurethon/">azurethon</category>
      
      <category domain="https://jehyunlee.github.io/tags/AI-Factory/">AI Factory</category>
      
      
    </item>
    
    <item>
      <title>연구 및 행정 활용 AI 도구들</title>
      <link>https://jehyunlee.github.io/2023/04/15/General-22-AItools/</link>
      <guid>https://jehyunlee.github.io/2023/04/15/General-22-AItools/</guid>
      <pubDate>Sat, 15 Apr 2023 07:08:00 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://chat.openai.com/chat&quot;&gt;ChatGPT&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;ChatGPT 이후 업무 효율화로 관심이 이어지고 있습니다.&lt;/li&gt;
&lt;li&gt;Cha</description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p><a href="https://chat.openai.com/chat">ChatGPT</a></p></blockquote><ul><li>ChatGPT 이후 업무 효율화로 관심이 이어지고 있습니다.</li><li>ChatGPT는 블로그나 이메일을 쉽게 쓰는 것도 장점이지만 업무도 덜어줄 수 있습니다.</li><li>그리고 <b>ChatGPT 외에도 좋은 도구들이 많이 있습니다.</b></li><li>이 도구 중 제가 사용하는 것들을 모아서 소개드리고자 합니다.</li></ul><ul><li>4/10 원내 ChatGPT 발표에서 원장님이 지시하여 작성한 문서이므로 연구원 로고가 날인되어 있습니다.</li><li><b><a href="AI_tools_KIER.pdf">PDF 파일은 여기에서 내려받을 수 있습니다</a></b></li></ul><h2 id="1-전체-요약"><a href="#1-전체-요약" class="headerlink" title="1. 전체 요약"></a>1. 전체 요약</h2><p><img src="AI_tools_KIER_01.png" alt="전체 요약 (1)"></p><p><img src="AI_tools_KIER_02.png" alt="전체 요약 (2)"></p><h2 id="2-활용-예시"><a href="#2-활용-예시" class="headerlink" title="2. 활용 예시"></a>2. 활용 예시</h2><ul><li><p><a href="https://chat.openai.com/"><b>ChatGPT :</b> 문서 초안 작성, 번역, 요약, 어조 변경 </a><br><img src="AI_tools_KIER_03.png"><br></p></li><li><p><a href="http://pf.kakao.com/_BhxkWxj"><b>아숙업(AskUp) :</b> 카톡에서 실행하는 눈 달린 ChatGPT </a><br><img src="AI_tools_KIER_04.png"><br></p></li><li><p><a href="https://perplexity.ai/"><b>perplexity :</b> 참고문헌 검색 </a><br><img src="AI_tools_KIER_05.png"><br></p></li><li><p><a href="https://elicit.org/"><b>elicit :</b> 참고문헌 검색 </a><br><img src="AI_tools_KIER_06.png"><br></p></li><li><p><a href="https://www.chatpdf.com/"><b>ChatPDF :</b> 입력한 PDF에 대한 질의 응답 </a><br><img src="AI_tools_KIER_07.png"><br></p></li><li><p><a href="https://tldrthis.com/"><b>TLDRThis :</b> 요약 및 키워드 추출 </a><br><img src="AI_tools_KIER_08.png"><br></p></li><li><p><a href="https://www.deepl.com/"><b>DeepL :</b> 다국어 번역 </a><br><img src="AI_tools_KIER_09.png"><br></p></li><li><p><a href="https://www.connectedpapers.com/"><b>connected papers :</b> 인용 네트워크 활용 레퍼런스 탐색 </a><br><img src="AI_tools_KIER_10.png"><br></p></li><li><p><a href="https://www.paper-digest.com/"><b>paper digest :</b> 논문 요약해서 보기 </a><br><img src="AI_tools_KIER_11.png"><br></p></li><li><p><a href="https://typeset.io/"><b>scispace :</b> Research Copilot 표방. 용어 설명 및 관련 문헌 검색 </a><br><img src="AI_tools_KIER_12.png"><br></p></li></ul>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/General/">General</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/openai/">openai</category>
      
      <category domain="https://jehyunlee.github.io/tags/chatgpt/">chatgpt</category>
      
      <category domain="https://jehyunlee.github.io/tags/RPA/">RPA</category>
      
      
    </item>
    
    <item>
      <title>디스플레이 CEO 인사이트 - AI를 하고 싶은 C-LEVEL의 흔한 실수들</title>
      <link>https://jehyunlee.github.io/2023/03/27/General-21-kdiaceo/</link>
      <guid>https://jehyunlee.github.io/2023/03/27/General-21-kdiaceo/</guid>
      <pubDate>Mon, 27 Mar 2023 01:59:00 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://www.kdia.org/&quot;&gt;한국디스플레이 산업협회&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;작년 한국디스플레이 산업협회에서 발표 기회를 주셔서 &lt;a href=&quot;https:/</description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p><a href="https://www.kdia.org/">한국디스플레이 산업협회</a></p></blockquote><ul><li><p>작년 한국디스플레이 산업협회에서 발표 기회를 주셔서 <a href="https://jehyunlee.github.io/2022/03/28/Python-DS-97-ceo_mistakes/">온라인으로 발표</a>를 드린 바 있습니다.</p></li><li><p>같은 내용을 발행물에 원고로 기고하게 되었고, 요약본의 형태로 이번에 실렸습니다.<br></p></li><li><p><b>기사 링크:</b> <a href="https://web.kdia.org/ceo/20230324/index_1.html">AI를 하고 싶은 C-LEVEL의 흔한 실수들 (디스플레이 CEO 인사이트 vol.99)</a><br><br><img src="21_kdiaceo_02.png"><br></p></li><li><p>CEO는 한 회사의 선장입니다.</p></li><li><p>선장이 길을 잘못 인도하면 모두가 위험에 처합니다.</p></li><li><p>AI라는 새로운 돛을 달기 전에 우리 배의 어디에 어떻게 달지 판단할 수 있어야 합니다.</p></li><li><p>아래는 기사 전문입니다.<br></p><img src="https://web.kdia.org/ceo/20230324/images/a1.png"><img src="https://web.kdia.org/ceo/20230324/images/a2.png"><img src="https://web.kdia.org/ceo/20230324/images/a3.png"><img src="https://web.kdia.org/ceo/20230324/images/a4.png"><img src="https://web.kdia.org/ceo/20230324/images/a5.png"></li></ul>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/General/">General</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/c-level/">c-level</category>
      
      <category domain="https://jehyunlee.github.io/tags/display/">display</category>
      
      
    </item>
    
    <item>
      <title>서울특별시 교육청 - ChatGPT와 인공지능시대</title>
      <link>https://jehyunlee.github.io/2023/03/26/General-20-seouledu/</link>
      <guid>https://jehyunlee.github.io/2023/03/26/General-20-seouledu/</guid>
      <pubDate>Sat, 25 Mar 2023 22:49:00 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://www.sen.go.kr/&quot;&gt;서울특별시 교육청&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://www.youtube.com/@GoodSenNews&quot;&gt;YouTube: 서울특별시 교육청 TV&lt;/a&gt;&lt;b</description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p><a href="https://www.sen.go.kr/">서울특별시 교육청</a><br><a href="https://www.youtube.com/@GoodSenNews">YouTube: 서울특별시 교육청 TV</a><br><a href="https://news.mt.co.kr/mtview.php?no=2023031609193638586">머니투데이: 챗GPT 활용방안 찾는 ‘서울시교육청’..직원 특강 -우수 사례 공유</a><br><a href="https://v.daum.net/v/20230316143150820">EBS뉴스: 서울교육청 “챗GPT 적극 활용한다” 사례집·연수 제공</a></p></blockquote><ul><li>서울특별시 교육청에서 초청해주셔서 발표를 드렸습니다.</li><li>오프라인 200분을 포함해 460분 정도가 신청해주셨고 당일 500분 이상 접속하셨다고 들었습니다.</li><li>현장에서 반갑게 맞아주시고 경청해주셔서 감사드리고, 온라인으로 들어주신 분들께도 감사드립니다.</li></ul><ul><li><b>영상 링크:</b> (<a href="https://www.youtube.com/live/-5S8yHHsaHQ?feature=share">Youtube Link</a>)<br><ul><li>유튜브에서만 재생되도록 설정되어 있습니다. 링크를 클릭해서 시청해주시기 바랍니다.<br><img src="20_seouledu_01.png"><p><p></li></ul></li></ul><ul><li>며칠 전 <b><a href="https://jehyunlee.github.io/2023/03/24/Python-General-19-sciencepeople/">과학하고 앉아있네</a></b>에서도 그랬지만 이런 이야기를 하면 수렴하는 주제가 있습니다.</li><li><b>“앞으로 우리 아이들을 어떻게 가르쳐야 할 것인가”</b>가 그 것입니다.</li><li>작년 말 대전광역시 교육청에서 불러주셨던 덕에 인공지능시대에 대한 생각을 미리 정리할 수 있었습니다.</li><li>교육 전문가들 앞에서 교육 방식을 제가 언급하는 것은 어불성설이지만 <b>다가올 미래</b>에 대한 제 생각은 말씀드릴 수 있을 것 같아 전체의 3분의 1 정도를 할애했습니다.<p></li></ul><ul><li>영상 중 해당 부분 : (<a href="https://youtu.be/-5S8yHHsaHQ?t=3722">YoutTube Link</a>)<br></li></ul><ul><li><b>발표자료를 공유합니다. (<a href="230324_%EC%9D%B4%EC%A0%9C%ED%98%84_ChatGPT.pdf">다운로드</a>)</b></li><li>새로운 시대를 맞는 분들께 조금이나마 도움이 되시기를 바랍니다.</li><li><b>이 자료와 발표에서 언급한 ChatGPT는 2023년 3월 23일 현황입니다.</b> </li><li>매우 빠른 속도로 변화와 진화가 벌어지고 있기 때문에 이후에는 새로운 내용을 반영해야 함을 유의해주시기 바랍니다.</li></ul><h1 id="ChatGPT-활용-교육-분야-업무-효율화-가이드"><a href="#ChatGPT-활용-교육-분야-업무-효율화-가이드" class="headerlink" title="ChatGPT 활용 교육 분야 업무 효율화 가이드"></a>ChatGPT 활용 교육 분야 업무 효율화 가이드</h1><ul><li><b>한국교원대 김귀훈</b> 교수님께서 <b>교육 분야 업무 효율화 가이드</b>를 작성해 주셨습니다.</li><li><a href="https://jehyunlee.github.io/2023/02/15/Python-General-16-chatgpt/">제가 만들었던 범용 업무 효율화 가이드</a>를 기반으로,</li><li><b>교사</b>, <b>행정</b>, <b>학생</b> 관점에서 ChatGPT를 사용할 때 믿어도 되는 점과 주의할 점을 정리해 주셨습니다.</li><li><a href="ChatGPT_AiFrenz_edu_guide.pdf">pdf 파일로도 다운받으실 수 있습니다.</a><br><br><img src="ChatGPT_AiFrenz_edu_guide.png"><br></li></ul>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/General/">General</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/openai/">openai</category>
      
      <category domain="https://jehyunlee.github.io/tags/chatgpt/">chatgpt</category>
      
      <category domain="https://jehyunlee.github.io/tags/seoul/">seoul</category>
      
      <category domain="https://jehyunlee.github.io/tags/education/">education</category>
      
      
    </item>
    
    <item>
      <title>과학하고 앉아있네 - 최팀장의 과학탐구</title>
      <link>https://jehyunlee.github.io/2023/03/24/General-19-sciencepeople/</link>
      <guid>https://jehyunlee.github.io/2023/03/24/General-19-sciencepeople/</guid>
      <pubDate>Fri, 24 Mar 2023 14:08:00 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://www.sciencepeople.co.kr/&quot;&gt;과학과사람들&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;과학과 사람들에서 운영하는 유튜브, &lt;b&gt;과학하고 앉아있네&lt;/b&gt;에 출연</description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p><a href="https://www.sciencepeople.co.kr/">과학과사람들</a></p></blockquote><ul><li><p>과학과 사람들에서 운영하는 유튜브, <b>과학하고 앉아있네</b>에 출연했습니다.</p></li><li><p><b>최진영 팀장</b>, <b>곽재식 작가</b>, 게임평론가 <b>이경혁 작가</b>님과 함께 했습니다.</p></li><li><p>선망하는 채널이라 섭외 요청에 너무 기뻤는데 시간이 맞지 않아 함께 할 수 없었습니다.</p></li><li><p>다행히 운영진께서 배려해주셔서 온라인으로 함께 참여할 수 있었습니다.</p></li><li><p>영상 : (<a href="https://youtu.be/VMJ492EzKv4">Youtube Link</a>)<br></p></li></ul><div class="video-container"><iframe src="https://www.youtube.com/embed/VMJ492EzKv4" frameborder="0" loading="lazy" allowfullscreen></iframe></div> <p><ul><li>스튜디오에서 함께 했다면, </li><li>이 분들과 사전에 친분이 좀 있어서 끼어들 수 있었다면 더 재밌었을 것 같은 아쉬움도 남습니다.</li><li>마이크가 넘어오기를 기다리며 가만히 있는 모습을 보고 사진인 줄 알았다는 댓글도 있네요 ^^;</li><li>2시간 반 녹화분이 2시간으로 편집되어서 정리되었습니다.</li></ul>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/General/">General</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/openai/">openai</category>
      
      <category domain="https://jehyunlee.github.io/tags/chatgpt/">chatgpt</category>
      
      <category domain="https://jehyunlee.github.io/tags/science-and-people/">science and people</category>
      
      
    </item>
    
    <item>
      <title>대전MBC 시시각각- 대덕 과학자가 본 챗GPT 열풍</title>
      <link>https://jehyunlee.github.io/2023/03/19/General-18-ssgg/</link>
      <guid>https://jehyunlee.github.io/2023/03/19/General-18-ssgg/</guid>
      <pubDate>Sun, 19 Mar 2023 08:08:00 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://chat.openai.com/chat&quot;&gt;ChatGPT&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;대전 MBC&lt;/b&gt; 초청으로 ChatGPT 관련 방송에 참여했습니다.&lt;/li&gt;</description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p><a href="https://chat.openai.com/chat">ChatGPT</a></p></blockquote><ul><li><b>대전 MBC</b> 초청으로 ChatGPT 관련 방송에 참여했습니다.</li><li>시사토론 프로그램인 <b>시시각각</b>에 참여해 다른 전문가 분들과 함께 말씀을 나눴습니다.</li></ul><ul><li><p>2016년, 우리는 준비되지 않은 채 알파고라는 이름에 얽매였던 경험이 있습니다.</p></li><li><p>오늘의 우리는 <b>ChatGPT라는 이름에 얽매이지 않기를 바랍니다.</b></p></li><li><p>지금의 관심이 새로운 파도를 탈 수 있는 기초체력으로 이어지기를 희망합니다.</p></li><li><p>영상 : (<a href="https://youtu.be/snd_LISfByA">Youtube Link</a>)<br></p></li></ul><div class="video-container"><iframe src="https://www.youtube.com/embed/snd_LISfByA" frameborder="0" loading="lazy" allowfullscreen></iframe></div> <p>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/General/">General</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/openai/">openai</category>
      
      <category domain="https://jehyunlee.github.io/tags/chatgpt/">chatgpt</category>
      
      <category domain="https://jehyunlee.github.io/tags/mbc/">mbc</category>
      
      
    </item>
    
    <item>
      <title>Company Personification</title>
      <link>https://jehyunlee.github.io/2023/03/09/Python-General-17-company/</link>
      <guid>https://jehyunlee.github.io/2023/03/09/Python-General-17-company/</guid>
      <pubDate>Thu, 09 Mar 2023 14:02:00 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://chat.openai.com/chat&quot;&gt;ChatGPT&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://platform.openai.com/docs/introduction&quot;&gt;OpenAI API doc</description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p><a href="https://chat.openai.com/chat">ChatGPT</a><br><a href="https://platform.openai.com/docs/introduction">OpenAI API documentation</a></p></blockquote><ul><li>ChatGPT API가 공개되었습니다.</li><li>사전 신청자를 받고 있긴 했지만 기습적으로 느껴질만큼 갑자기 공개했습니다.</li><li>API를 공개했기 때문에 다른 여러 기능과 연계기를 발휘하기 좋습니다.</li><li>기존의 GPT API를 사용해 회사의 이미지를 의인화합니다.</li></ul><h1 id="1-인물로-본-회사-이미지"><a href="#1-인물로-본-회사-이미지" class="headerlink" title="1. 인물로 본 회사 이미지"></a>1. 인물로 본 회사 이미지</h1><blockquote><p><a href="https://www.yna.co.kr/view/GYH20141105001500044">연합뉴스: 인물로 본 6개 그룹 이미지</a></p></blockquote><p><img src="yna.jpg"></p><ul><li>가끔 언론에 이런 보도가 납니다.</li><li>특정 집단을 대상으로 특정 회사에 대한 이미지를 조사한 후 인물로 표현합니다.</li><li>직관적이기도 하지만 재미가 있어서 좋아하는 기사입니다.</li><li><b>ChatGPT</b>한테 이걸 시키면 잘 할 것 같다는 생각이 들었습니다.</li><li>그림으로 표현하는 능력이 없으니 그림은 <b>DALL.E</b>에게 그리도록 합니다.</li></ul><h1 id="2-ChatGPT를-통해-회사를-의인화해서-묘사하기"><a href="#2-ChatGPT를-통해-회사를-의인화해서-묘사하기" class="headerlink" title="2. ChatGPT를 통해 회사를 의인화해서 묘사하기"></a>2. ChatGPT를 통해 회사를 의인화해서 묘사하기</h1><ul><li><p>ChatGPT에게 회사 이름을 주고, 의인화해서 설명을 해보라면 잘 합니다.</p></li><li><p><b>삼성전자</b>가 사람으로 치면 어떤 사람인지 물어봤습니다.</p></li><li><p>한국인이고, 중성이고, 확신감에 차있고 전문성이 있다고 합니다.<br><br><img src="17_company_01.png"><br></p></li><li><p>ChatGPT 사이트에 가서 물어볼 수도 있지만 API를 이용해보겠습니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> openai</span><br><span class="line"><span class="keyword">from</span> MyAPIKEY <span class="keyword">import</span> OpenAI  <span class="comment"># openai API key를 미리 발급받아 저장했습니다.</span></span><br><span class="line">openai.api_key = OpenAI  <span class="comment"># API Key 입력</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ChatGPT API 활용 : 회사를 의인화해서 정보 말하기.</span></span><br><span class="line">company = <span class="string">&quot;Samsung Electronics&quot;</span></span><br><span class="line">completion = openai.ChatCompletion.create(</span><br><span class="line">  model=<span class="string">&quot;gpt-3.5-turbo&quot;</span>,</span><br><span class="line">  messages=[</span><br><span class="line">    &#123;<span class="string">&quot;role&quot;</span>: <span class="string">&quot;user&quot;</span>, </span><br><span class="line">     <span class="string">&quot;content&quot;</span>: <span class="string">f&quot;Answer me about the company, whose name is <span class="subst">&#123;company&#125;</span>, without using any other words. \</span></span><br><span class="line"><span class="string">                  What is its nationality? \</span></span><br><span class="line"><span class="string">                  Imagine the company as a person. \</span></span><br><span class="line"><span class="string">                  Is it male or female? What is its impression? How does it dress?&quot;</span>&#125;</span><br><span class="line">  ]</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># ChatGPT 응답 출력</span></span><br><span class="line">answer = completion.choices[<span class="number">0</span>].message</span><br><span class="line">answer</span><br></pre></td></tr></table></figure></li><li><p>실행 결과</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> &lt;OpenAIObject at 0x1fd3ca48a40&gt; JSON: &#123;</span><br><span class="line">  <span class="string">&quot;content&quot;</span>: <span class="string">&quot;\n\nNationality: South Korean\n\nImagined person: Gender-neutral \n\nImpression: Technologically advanced and innovative \n\nDressing style: Modern and trendy with a focus on functionality.&quot;</span>,</span><br><span class="line">  <span class="string">&quot;role&quot;</span>: <span class="string">&quot;assistant&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>웹과 완전 동일하지는 않지만 비슷한 형식의 답변이 나왔습니다.</p></li><li><p>다음과 같이 답변에서 원하는 문장만 깔끔하게 뽑아낼 수 있습니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">prompt = <span class="built_in">dict</span>(answer)[<span class="string">&quot;content&quot;</span>].lstrip(<span class="string">&quot;\n&quot;</span>).replace(<span class="string">&quot;\n\n&quot;</span>, <span class="string">&quot;, &quot;</span>)</span><br><span class="line">prompt</span><br></pre></td></tr></table></figure></li><li><p>실행 결과</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;Nationality: South Korean, Imagined person: Gender-neutral , Impression: Technologically advanced and innovative , Dressing style: Modern and trendy with a focus on functionality.&#x27;</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="3-DALL-E를-통해-그림으로-표현하기"><a href="#3-DALL-E를-통해-그림으로-표현하기" class="headerlink" title="3. DALL.E를 통해 그림으로 표현하기"></a>3. DALL.E를 통해 그림으로 표현하기</h1><ul><li><p>회사에 대한 이미지를 얻었으니 그림으로 그립니다.</p></li><li><p>마찬가지로 OpenAI API를 사용합니다.</p></li><li><p>ChatGPT가 만든 <code>prompt</code>를 입력으로 넣고, 그 앞에 <b>길에 서있는 사람의 몸통 사진</b>이라는 뜻의 문구를 추가합니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">response = openai.Image.create(</span><br><span class="line">  prompt= <span class="string">&quot;a photography of torso of a person, standing on the street: &quot;</span> + prompt,</span><br><span class="line">  n=<span class="number">4</span>,</span><br><span class="line">  size=<span class="string">&quot;512x512&quot;</span></span><br><span class="line">)</span><br><span class="line">images = response[<span class="string">&#x27;data&#x27;</span>]</span><br><span class="line">images_url = [i[<span class="string">&quot;url&quot;</span>] <span class="keyword">for</span> i <span class="keyword">in</span> images]</span><br><span class="line">images_url</span><br></pre></td></tr></table></figure></li><li><p>실행 결과</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">&#x27;https://oaidalleapiprodscus.blob.core.windows.net/private/org-AhUkzJK2WZGMFoMyGMghYXRV/user-GJilwEnUIKmd9QOgEkYhUF46/img-wmfnBPTbuqfFVPWhBCgWAehQ.png?st=2023-03-09T13%3A45%3A16Z&amp;se=2023-03-09T15%3A45%3A16Z&amp;sp=r&amp;sv=2021-08-06&amp;sr=b&amp;rscd=inline&amp;rsct=image/png&amp;skoid=6aaadede-4fb3-4698-a8f6-684d7786b067&amp;sktid=a48cca56-e6da-484e-a814-9c849652bcb3&amp;skt=2023-03-08T23%3A46%3A41Z&amp;ske=2023-03-09T23%3A46%3A41Z&amp;sks=b&amp;skv=2021-08-06&amp;sig=A9gkIRkfbORN06hfMsCAfIB6ZxDCyYg3PBGVhY9pjX4%3D&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;https://oaidalleapiprodscus.blob.core.windows.net/private/org-AhUkzJK2WZGMFoMyGMghYXRV/user-GJilwEnUIKmd9QOgEkYhUF46/img-ILfQqDLOe9qezlAS4HNDYIb0.png?st=2023-03-09T13%3A45%3A16Z&amp;se=2023-03-09T15%3A45%3A16Z&amp;sp=r&amp;sv=2021-08-06&amp;sr=b&amp;rscd=inline&amp;rsct=image/png&amp;skoid=6aaadede-4fb3-4698-a8f6-684d7786b067&amp;sktid=a48cca56-e6da-484e-a814-9c849652bcb3&amp;skt=2023-03-08T23%3A46%3A41Z&amp;ske=2023-03-09T23%3A46%3A41Z&amp;sks=b&amp;skv=2021-08-06&amp;sig=RSDcoiw3vqtHQTgXqEeQKBf2EOY9Zbx%2BCNrgcJetcFU%3D&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;https://oaidalleapiprodscus.blob.core.windows.net/private/org-AhUkzJK2WZGMFoMyGMghYXRV/user-GJilwEnUIKmd9QOgEkYhUF46/img-wxblEkkn0ZZjmp3vxwA3Kso2.png?st=2023-03-09T13%3A45%3A16Z&amp;se=2023-03-09T15%3A45%3A16Z&amp;sp=r&amp;sv=2021-08-06&amp;sr=b&amp;rscd=inline&amp;rsct=image/png&amp;skoid=6aaadede-4fb3-4698-a8f6-684d7786b067&amp;sktid=a48cca56-e6da-484e-a814-9c849652bcb3&amp;skt=2023-03-08T23%3A46%3A41Z&amp;ske=2023-03-09T23%3A46%3A41Z&amp;sks=b&amp;skv=2021-08-06&amp;sig=2pDH7f8ONdppBdPcEsQJcZ/qNt/jpmUrpZ9LVuLDzQw%3D&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;https://oaidalleapiprodscus.blob.core.windows.net/private/org-AhUkzJK2WZGMFoMyGMghYXRV/user-GJilwEnUIKmd9QOgEkYhUF46/img-lfyMHLR93DZ8a0iOM9H268Jr.png?st=2023-03-09T13%3A45%3A16Z&amp;se=2023-03-09T15%3A45%3A16Z&amp;sp=r&amp;sv=2021-08-06&amp;sr=b&amp;rscd=inline&amp;rsct=image/png&amp;skoid=6aaadede-4fb3-4698-a8f6-684d7786b067&amp;sktid=a48cca56-e6da-484e-a814-9c849652bcb3&amp;skt=2023-03-08T23%3A46%3A41Z&amp;ske=2023-03-09T23%3A46%3A41Z&amp;sks=b&amp;skv=2021-08-06&amp;sig=UJIty7F3F7wDiFhOLpMewwXjzw4K9M3zocJlGuHiwso%3D&#x27;</span>]</span><br></pre></td></tr></table></figure></li><li><p>아주 긴 URL이 나왔습니다. 긁어다 인터넷 주소창에 붙이면 그림이 보입니다.</p></li><li><p>이 그림을 받아다 모아서 파일로 저장합니다.</p></li><li><p><code>urllib</code>과 <code>numpy</code>, <code>PIL</code>을 사용해 주소를 가져와 <code>Matplotlib</code>으로 표현합니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">%matplotlib inline</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> PIL</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">plt.rcParams[<span class="string">&#x27;font.family&#x27;</span>]=<span class="string">&#x27;NanumGothic&#x27;</span></span><br><span class="line">plt.rcParams[<span class="string">&#x27;axes.unicode_minus&#x27;</span>] = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">imgs = [np.array(PIL.Image.<span class="built_in">open</span>(urllib.request.urlopen(url))) <span class="keyword">for</span> url <span class="keyword">in</span> images_url]</span><br><span class="line"></span><br><span class="line">fig, axes = plt.subplots(ncols=<span class="number">2</span>, nrows=<span class="number">2</span>, figsize=(<span class="number">6</span>, <span class="number">6</span>), gridspec_kw=&#123;<span class="string">&quot;hspace&quot;</span>:<span class="number">0</span>, <span class="string">&quot;wspace&quot;</span>:<span class="number">0</span>&#125;)</span><br><span class="line">axs = axes.ravel()</span><br><span class="line"><span class="keyword">for</span> ax, img <span class="keyword">in</span> <span class="built_in">zip</span>(axs, imgs):</span><br><span class="line">    ax.imshow(img)</span><br><span class="line">    ax.axis(<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">fig.suptitle(<span class="string">f&quot;<span class="subst">&#123;company&#125;</span>&quot;</span>, fontsize=<span class="string">&quot;x-large&quot;</span>, fontweight=<span class="string">&quot;bold&quot;</span>)</span><br><span class="line">fig.savefig(<span class="string">f&quot;imgs_<span class="subst">&#123;company&#125;</span>.png&quot;</span>)</span><br></pre></td></tr></table></figure><p><img src="imgs_Samsung_Electronics.png"><br></p></li></ul><h1 id="4-회사-이름을-입력받아-그림으로-출력"><a href="#4-회사-이름을-입력받아-그림으로-출력" class="headerlink" title="4. 회사 이름을 입력받아 그림으로 출력"></a>4. 회사 이름을 입력받아 그림으로 출력</h1><ul><li><p>ChatGPT는 회사 이름에서 회사의 인상을 도출했고</p></li><li><p>DALL.E는 회사의 인상을 그림으로 표현했습니다.</p></li><li><p>이제 둘을 합칩니다.</p></li><li><p>먼저 ChatGPT 활용 부분을 함수로 만들어 잘 동작하는지 확인합니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tell_me_about</span>(<span class="params">company</span>):</span></span><br><span class="line">    completion = openai.ChatCompletion.create(</span><br><span class="line">      model=<span class="string">&quot;gpt-3.5-turbo&quot;</span>,</span><br><span class="line">      messages=[</span><br><span class="line">        &#123;<span class="string">&quot;role&quot;</span>: <span class="string">&quot;user&quot;</span>, </span><br><span class="line">         <span class="string">&quot;content&quot;</span>: <span class="string">f&quot;Answer me about the company, whose name is <span class="subst">&#123;company&#125;</span>, without using any other words. \</span></span><br><span class="line"><span class="string">                      What is its nationality? \</span></span><br><span class="line"><span class="string">                      Imagine the company as a person. \</span></span><br><span class="line"><span class="string">                      Is it male or female? What is its impression? How does it dress?&quot;</span>&#125;</span><br><span class="line">      ]</span><br><span class="line">    )</span><br><span class="line">    answer = completion.choices[<span class="number">0</span>].message</span><br><span class="line">    prompt = <span class="built_in">dict</span>(answer)[<span class="string">&quot;content&quot;</span>].lstrip(<span class="string">&quot;\n&quot;</span>).replace(<span class="string">&quot;\n\n&quot;</span>, <span class="string">&quot;, &quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> prompt</span><br><span class="line"></span><br><span class="line">prompt = tell_me_about(<span class="string">&quot;LG Chemistry&quot;</span>)</span><br><span class="line">prompt</span><br></pre></td></tr></table></figure></li><li><p>실행 결과</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;This company is from South Korea. As a person, LG Chemistry would be considered gender-neutral. Its impression would be innovative and tech-savvy. In terms of dressing, it would likely wear modern, professional attire.&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>잘 됩니다.</p></li><li><p>이번엔 DALL.E를 사용해 설명을 그림으로 변환합니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">draw_about</span>(<span class="params">prompt, company</span>):</span></span><br><span class="line">    response = openai.Image.create(</span><br><span class="line">    prompt= <span class="string">&quot;a photography of torso of a person, standing on the street: &quot;</span> + prompt,</span><br><span class="line">    n=<span class="number">4</span>,</span><br><span class="line">    size=<span class="string">&quot;512x512&quot;</span></span><br><span class="line">    )</span><br><span class="line">    images = response[<span class="string">&#x27;data&#x27;</span>]</span><br><span class="line">    images_url = [i[<span class="string">&quot;url&quot;</span>] <span class="keyword">for</span> i <span class="keyword">in</span> images]</span><br><span class="line"></span><br><span class="line">    imgs = [np.array(PIL.Image.<span class="built_in">open</span>(urllib.request.urlopen(url))) <span class="keyword">for</span> url <span class="keyword">in</span> images_url]</span><br><span class="line"></span><br><span class="line">    fig, axes = plt.subplots(ncols=<span class="number">2</span>, nrows=<span class="number">2</span>, figsize=(<span class="number">6</span>, <span class="number">6</span>), gridspec_kw=&#123;<span class="string">&quot;hspace&quot;</span>:<span class="number">0</span>, <span class="string">&quot;wspace&quot;</span>:<span class="number">0</span>&#125;)</span><br><span class="line">    axs = axes.ravel()</span><br><span class="line">    <span class="keyword">for</span> ax, img <span class="keyword">in</span> <span class="built_in">zip</span>(axs, imgs):</span><br><span class="line">        ax.imshow(img)</span><br><span class="line">        ax.axis(<span class="literal">False</span>)</span><br><span class="line">    </span><br><span class="line">    fig.suptitle(<span class="string">f&quot;<span class="subst">&#123;company&#125;</span>&quot;</span>, fontsize=<span class="string">&quot;x-large&quot;</span>, fontweight=<span class="string">&quot;bold&quot;</span>)</span><br><span class="line">    fig.savefig(<span class="string">f&quot;imgs_<span class="subst">&#123;company.replace(<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;_&#x27;</span>)&#125;</span>.png&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> fig</span><br><span class="line"></span><br><span class="line">fig = draw_about(<span class="string">&quot;LG Chemistry&quot;</span>)</span><br></pre></td></tr></table></figure><p><img src="imgs_LG_Chemistry.png"><br></p></li></ul><ul><li>그리고 두 함수를 합칩니다.<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tell_and_draw</span>(<span class="params">company</span>):</span></span><br><span class="line">    prompt = tell_me_about(company)</span><br><span class="line">    fig = draw_about(company)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;# Name: <span class="subst">&#123;company&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;# <span class="subst">&#123;prompt&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> prompt, fig</span><br><span class="line"></span><br><span class="line">prompt, fig = tell_and_draw(<span class="string">&quot;TSMC&quot;</span>)</span><br></pre></td></tr></table></figure></li><li>실행 결과<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment"># Name: TSMC</span></span><br><span class="line"><span class="comment"># Taiwanese. , The company is an entity and therefore does not have a gender or dress style.</span></span><br></pre></td></tr></table></figure><img src="imgs_TSMC.png"><br></li></ul><h1 id="5-DeepL로-묘사-부분-번역"><a href="#5-DeepL로-묘사-부분-번역" class="headerlink" title="5. DeepL로 묘사 부분 번역"></a>5. DeepL로 묘사 부분 번역</h1><ul><li>나름 재밌게 돌아가는데 설명을 읽기 귀찮습니다. </li><li>외국어는 모국어보다 불편하거든요.</li><li>번역기를 붙입니다.<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> MyAPIKEY <span class="keyword">import</span> RapidAPI</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="comment"># DeepL 사용 번역</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">deepl</span>(<span class="params">text, RapidAPI=RapidAPI, src=<span class="string">&quot;auto&quot;</span>, dest=<span class="string">&quot;ko&quot;</span></span>):</span></span><br><span class="line">    url = <span class="string">&quot;https://deepl-translator.p.rapidapi.com/translate&quot;</span></span><br><span class="line">    </span><br><span class="line">    payload = &#123;</span><br><span class="line">        <span class="string">&quot;text&quot;</span>: text,</span><br><span class="line">        <span class="string">&quot;source&quot;</span>: src,</span><br><span class="line">        <span class="string">&quot;target&quot;</span>: dest</span><br><span class="line">    &#125;</span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&quot;content-type&quot;</span>: <span class="string">&quot;application/json&quot;</span>,</span><br><span class="line">        <span class="string">&quot;X-RapidAPI-Key&quot;</span>: RapidAPI,</span><br><span class="line">        <span class="string">&quot;X-RapidAPI-Host&quot;</span>: <span class="string">&quot;deepl-translator.p.rapidapi.com&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    response = requests.request(<span class="string">&quot;POST&quot;</span>, url, json=payload, headers=headers)</span><br><span class="line">    translated = response.json()[<span class="string">&quot;text&quot;</span>]</span><br><span class="line">    <span class="keyword">return</span> translated</span><br><span class="line"></span><br><span class="line"><span class="comment"># DeelL 포함 함수 재정의</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tell_and_draw</span>(<span class="params">company</span>):</span></span><br><span class="line">    prompt = tell_me_about(company)</span><br><span class="line">    fig = draw_about(company)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;# Name: <span class="subst">&#123;company&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;# <span class="subst">&#123;deepl(prompt)&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> prompt, fig</span><br><span class="line"></span><br><span class="line">prompt, fig = tell_and_draw(<span class="string">&quot;IBM&quot;</span>)</span><br></pre></td></tr></table></figure></li><li>실행 결과 : 영문을 모르겠지만 IBM 묘사가 유달리 짧습니다.<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Name: IBM</span></span><br><span class="line"><span class="comment"># IBM은 컴퓨터 하드웨어, 미들웨어 및 소프트웨어를 설계하고 판매하는 다국적 기업입니다.</span></span><br></pre></td></tr></table></figure><img src="imgs_IBM.png"><br></li></ul><ul><li>하나를 더 해봅니다.<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">prompt, fig = tell_and_draw(<span class="string">&quot;Toyota&quot;</span>)</span><br></pre></td></tr></table></figure></li><li>실행 결과<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment"># Name: Toyota</span></span><br><span class="line"><span class="comment"># 국적: 일본어, 의인화: 도요타는 품질과 신뢰성을 중시하는 근면하고 혁신적인 개인입니다. , 성별: 중립 , 인상: 도요타는 자동차 산업의 리더로 간주되며 첨단 기술과 친환경으로 존경 받고 있습니다. , 복장: 기업 이미지에 걸맞게 깔끔하고 전문적인 외모에 스마트한 정장 차림을 주로 합니다.</span></span><br></pre></td></tr></table></figure><img src="imgs_Toyota.png"><br></li></ul><h1 id="6-결론"><a href="#6-결론" class="headerlink" title="6. 결론"></a>6. 결론</h1><ul><li>길지 않은 코드이지만 ChatGPT + DALL.E + DeepL을 묶었습니다.</li><li><b>단순해보이지만 세 개의 API를 묶은 컴비네이션</b>입니다.</li><li>API를 활용하면 여러 기능을 레고 조립하듯 마음껏 엮을 수 있습니다.</li><li>마음껏 사용하시기 바랍니다.</li></ul><h1 id="6-마음껏-사용하기"><a href="#6-마음껏-사용하기" class="headerlink" title="6. 마음껏 사용하기"></a>6. 마음껏 사용하기</h1><h3 id="Apple"><a href="#Apple" class="headerlink" title="Apple"></a><b>Apple</b><br></h3><p><img src="Apple.png"><br></p><h3 id="Tesla"><a href="#Tesla" class="headerlink" title="Tesla"></a><b>Tesla</b><br></h3><p><img src="Tesla.png"><br></p><h3 id="Facebook"><a href="#Facebook" class="headerlink" title="Facebook"></a><b>Facebook</b><br></h3><p><img src="Facebook.png"><br></p><h3 id="McDonalds"><a href="#McDonalds" class="headerlink" title="McDonalds"></a><b>McDonalds</b><br></h3><p><img src="McDonalds.png"><br></p><h3 id="YouTube"><a href="#YouTube" class="headerlink" title="YouTube"></a><b>YouTube</b><br></h3><p><img src="YouTube.png"><br></p><h3 id="OpenAI"><a href="#OpenAI" class="headerlink" title="OpenAI"></a><b>OpenAI</b><br></h3><p><img src="OpenAI.png"><br></p><ul><li><b># Name: Amazon</b><ul><li><b># 국적: 미국, 의인화:</b> 성별: 중립. 인상: 혁신적이고, 기술에 정통함. 복장: 모던하고 캐주얼하면서도 전문적인 복장</li></ul></li><li><b># Name: Microsoft</b><ul><li><b># 국적: 미국, 의인화:</b> 마이크로소프트는 고도로 분석적이고 혁신적인 기술에 정통한 개인으로 묘사됩니다., 성별: N/A(마이크로소프트는 회사이기 때문에 성별이 없음), 인상: 소프트웨어, 하드웨어 및 클라우드 서비스 분야의 리더로서 기술 업계에서 높은 존경과 인정을 받고 있습니다., 복장: N/A(Microsoft는 회사이기 때문에 복장은 없지만 제품과 로고는 세련되고 현대적인 스타일을 나타냅니다).</li></ul></li><li><b># Name: Google</b><ul><li>(설명이 전혀 없음)<br><br><img src="imgs_Amazon_Microsoft_Google.png"><br></li></ul></li></ul>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/Python/">Python</category>
      
      <category domain="https://jehyunlee.github.io/categories/Python/General/">General</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/openai/">openai</category>
      
      <category domain="https://jehyunlee.github.io/tags/chatgpt/">chatgpt</category>
      
      <category domain="https://jehyunlee.github.io/tags/DALL-E/">DALL.E</category>
      
      <category domain="https://jehyunlee.github.io/tags/DeepL/">DeepL</category>
      
      
    </item>
    
  </channel>
</rss>
