<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Pega Devlog</title>
    <link>https://jehyunlee.github.io/</link>
    
    <atom:link href="https://jehyunlee.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>Pega&#39;s Development log for myself and others</description>
    <pubDate>Mon, 04 Nov 2024 00:32:52 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>EOST2024 - 연구 현장의 생성 AI 활용 현황</title>
      <link>https://jehyunlee.github.io/2024/10/15/General-65_EOST2024/</link>
      <guid>https://jehyunlee.github.io/2024/10/15/General-65_EOST2024/</guid>
      <pubDate>Tue, 15 Oct 2024 09:11:00 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;ETRI Open Source Tech Day 2024에서 발표를 드렸습니다.&lt;/li&gt;
&lt;li&gt;2017년에 알파고가 전지전능의 대명사였던 것처럼, 최근에는 생성AI가 그런 느낌입니다.&lt;/li&gt;
&lt;li&gt;조금이나마 정리가 되기를 바라며, </description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>ETRI Open Source Tech Day 2024에서 발표를 드렸습니다.</li><li>2017년에 알파고가 전지전능의 대명사였던 것처럼, 최근에는 생성AI가 그런 느낌입니다.</li><li>조금이나마 정리가 되기를 바라며, 한국에너지기술연구원의 사례를 공유드렸습니다.</li></ul><div class="video-container"><iframe src="https://www.youtube.com/embed/ug48jhfndO8" frameborder="0" loading="lazy" allowfullscreen></iframe></div><ul><li><p>발표자료를 공유드립니다. (<a href="241015_%EC%9D%B4%EC%A0%9C%ED%98%84_EOST2024.pdf">다운로드</a>)</p></li><li><p>전체 연사 발표자료 (<a href="https://github.com/eostday/eost2024">링크</a>)</p></li></ul><p><img src="65_EOST2024_01.png" alt="EOST 2024 포스터"></p><p><img src="65_EOST2024_02.jpeg" alt="EOST 2024 발표자"></p>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/General/">General</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/openai/">openai</category>
      
      <category domain="https://jehyunlee.github.io/tags/chatgpt/">chatgpt</category>
      
      <category domain="https://jehyunlee.github.io/tags/nst/">nst</category>
      
      <category domain="https://jehyunlee.github.io/tags/EOST/">EOST</category>
      
      
    </item>
    
    <item>
      <title>활용 업무 기준 AI 분류</title>
      <link>https://jehyunlee.github.io/2024/10/09/General-63_aiforwork/</link>
      <guid>https://jehyunlee.github.io/2024/10/09/General-63_aiforwork/</guid>
      <pubDate>Wed, 09 Oct 2024 07:37:00 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;최근 AI 업무 적용을 기획하는 분들을 만날 기회가 많이 생겼습니다.&lt;/li&gt;
&lt;li&gt;그러나 대화를 나누다 보면 같은 ‘인공지능’, ‘AI’라는 단어를 너무 넓게 쓰고 있다는 것이 느껴집니다.&lt;/li&gt;
&lt;li&gt;AI라는 말 자체가 모호하</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>최근 AI 업무 적용을 기획하는 분들을 만날 기회가 많이 생겼습니다.</li><li>그러나 대화를 나누다 보면 같은 ‘인공지능’, ‘AI’라는 단어를 너무 넓게 쓰고 있다는 것이 느껴집니다.</li><li>AI라는 말 자체가 모호하긴 하지만 업무를 정의할 수 없을 만큼 모호하기에 정리해 보았습니다.</li></ul><blockquote><p><a href="https://www.nobelprize.org/prizes/physics/2024/press-release/">노벨상: 2024 노벨 물리학상</a><br><a href="https://www.chosun.com/politics/politics_general/2023/01/28/3DVO3AS4CVGDJMAOUCO3N3PAOI/">조선일보: “챗GPT에 신년사 써보게하니 훌륭… 잘 연구해보라”</a></p></blockquote><p><img src="63_aiforwork_01.png" alt="2024년 노벨 물리학상 수상자: 존 홉필드, 제프리 힌튼"></p><ul><li>2024년 노벨 물리학상 수상자는 존 홉필드, 제프리 힌튼입니다.</li><li>알파고때만 해도 일반인들에게는 상당히 멀게 느껴졌던 인공지능 기술이지만</li><li>ChatGPT의 등장 이후 상당히 빠르게, 가까이 다가왔습니다.</li></ul><ul><li><b>그러나 다양한 기술들이 인공지능이라고 불리면서 다소 혼란스럽습니다.</b></li><li>말도 안되는 연구 개발 목표가 제시되거나</li><li>생성AI의 한계를 알지 못하고 활용하여 문제가 되기도 합니다.</li></ul><ul><li><b>이러한 혼란을 해소하기 위해 AI를 활용 업무 기준으로 분류하고자 합니다.</b></li><li>학문적으로 엄밀하지 않음을 미리 밝힙니다.</li><li>또한, 아래 분류는 상호 배타적이 아닙니다. 실제로는 혼합해 사용됩니다.</li><li>그럼에도 불구하고 의사결정자들의 혼란을 줄이기 위해 단순화했습니다.</li></ul><p><img src="241008_%EC%9D%B4%EC%A0%9C%ED%98%84_%EC%97%85%EB%AC%B4%ED%99%9C%EC%9A%A9AI%EB%B6%84%EB%A5%98.png" alt="업무에 적용되는 AI 분류"></p><blockquote><p><a href="241008_%EC%9D%B4%EC%A0%9C%ED%98%84_%EC%97%85%EB%AC%B4%ED%99%9C%EC%9A%A9AI%EB%B6%84%EB%A5%98.pdf"><b>PDF 버전 다운로드</b></a></p></blockquote><ul><li>적어도 AI를 업무에 활용할 때는 인공지능, AI로 불리지 않고 최소한의 분류에 따라 불리기를 희망합니다.</li><li><b>무심코 던진 돌에 개구리가 죽는다</b>는 말이 있습니다.</li><li><b>의사결정자들이 별 의미 없이 좋은 뜻으로 내뱉은 지시가 현업에는 큰 타격이 될 수 있습니다.</b></li></ul>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/General/">General</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/python/">python</category>
      
      <category domain="https://jehyunlee.github.io/tags/chatgpt/">chatgpt</category>
      
      
    </item>
    
    <item>
      <title>효율적 업무효율화</title>
      <link>https://jehyunlee.github.io/2024/09/25/General-62_worksmart/</link>
      <guid>https://jehyunlee.github.io/2024/09/25/General-62_worksmart/</guid>
      <pubDate>Wed, 25 Sep 2024 07:37:00 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;한국청정기술학회(9/25)에서 발표한 내용입니다.&lt;/li&gt;
&lt;li&gt;연구를 하는 입장에서 최근의 생성 AI들 도움을 많이 받고 있습니다.&lt;/li&gt;
&lt;li&gt;특히 최근 자체 제작한 GPTs의 도움을 많이 받고 있어 해당 내용을 중심으로 담았</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>한국청정기술학회(9/25)에서 발표한 내용입니다.</li><li>연구를 하는 입장에서 최근의 생성 AI들 도움을 많이 받고 있습니다.</li><li>특히 최근 자체 제작한 GPTs의 도움을 많이 받고 있어 해당 내용을 중심으로 담았습니다.</li></ul><blockquote><p><a href="240925_%EC%9D%B4%EC%A0%9C%ED%98%84_%ED%9A%A8%EC%9C%A8%EC%A0%81%EC%97%85%EB%AC%B4%ED%9A%A8%EC%9C%A8%ED%99%94_update.pdf">강의자료 다운로드</a></p></blockquote><h1 id="1-Overview"><a href="#1-Overview" class="headerlink" title="1. Overview"></a>1. Overview</h1><p><img src="62_worksmart_06.png"><br></p><ul><li>GPT를 비롯한 생성 AI는 다양한 재능을 가지고 있습니다.</li><li>흔히 아는 대화와 코딩 외에도 이미지도 읽을 수 있고, 코드 실행도 할 수 있죠.</li><li>그리고 이러한 재능들을 조합하는 방식에 따라 다양한 응용 서비스를 만들 수 있습니다.</li></ul><ul><li><b>기술의 장벽이 낮아지는 만큼 아이디어를 실현하기 좋습니다.</b></li><li>욕망이 구체적이고 아이디어가 구체적인 분들일수록 할 수 있는 것이 많아집니다.</li></ul><ul><li>생성 AI는 만능이 아닙니다.</li><li>모든 사물이 그렇듯 작동 원리에 따른 <b>기능</b>과 <b>한계</b>, <b>특성</b>이 있습니다.</li><li>이를 분명히 인지하지 못하면 답변을 오해하기 너무 쉽습니다.</li></ul><p><img src="62_worksmart_07.png"><br></p><ul><li>위 그림에서 취소선이 그어지는 이유는 글을 하고보니 틀린 말이라 그은 것이 아닙니다.</li><li><b>markdown 방식</b>으로 출력을 하다보니 물결무늬(~)로 감싸진 부분이 취소선이 된 것입니다.</li></ul><ul><li>제 다른 강의가 그렇듯, <b>프롬프트 엔지니어링</b>은 강조하지 않습니다.</li><li>조직문화, 리더십을 다룬 책들 중에서 <b>업무지시 방법</b>을 보시면 됩니다.</li><li>자료와 결과물의 형식, 업무 범위와 한계를 명확히 지시하면 지시한 만큼 답을 받습니다.</li><li>markdown 문법을 쓰는 아주 약간을 제외하고는 그저 상식입니다.</li></ul><h1 id="2-생성-AI-현황"><a href="#2-생성-AI-현황" class="headerlink" title="2. 생성 AI 현황"></a>2. 생성 AI 현황</h1><blockquote><p><a href="https://chatgpt.com/g/g-QQxEn0acO-peulrasbos">GPTs: 플랏봇</a><br><a href="https://informationisbeautiful.net/visualizations/the-rise-of-generative-ai-large-language-models-llms-like-chatgpt/">informationisbeautiful: The Rise of Generative A.I. Large Language Models (LLMs)</a></p></blockquote><p><img src="62_worksmart_02.jpg" alt="https://datafloq.com/read/6-generative-ai-trends-2024/"></p><ul><li><b>생성 AI의 발전이 너무 빠릅니다.</b></li><li>지금 당장 ChatGPT가 뭘 할 수 있는지에 대한 이야기도 중요하지만</li><li>어떤 흐름으로 가고 있다는 말씀을 드릴 필요가 있다고 생각했습니다.</li><li>그림은 <b>플랏봇</b>이 그려줬습니다. </li><li>저는 <a href="https://informationisbeautiful.net/visualizations/the-rise-of-generative-ai-large-language-models-llms-like-chatgpt/">informationisbeautiful</a>에서 데이터를 받아 주고 어떻게 그리라고 지시만 했어요.</li></ul><p><img src="62_worksmart_03.png" alt="time vs model size (linear scale)"><br></p><p><img src="62_worksmart_04.png" alt="time vs model size (log scale)"><br></p><p><img src="62_worksmart_05.png" alt="time vs model owner"><br></p><ul><li>위 세 그림은 같은 데이터를 다른 방식으로 표현한 것입니다.</li><li>마지막 그림에서는 model owner별 특징이 잘 드러나는데요,</li><li><b>Google과 OpenAI가 대형 모델에서 힘싸움</b>을 하는 사이,</li><li><b>Meta가 오픈 소스로 판을 흔들고</b></li><li><b>Microsoft와 Mistral AI가 소형 모델에 집중하는 모습</b>이 잘 드러납니다.</li></ul><p><img src="62_worksmart_08.png"><br></p><ul><li><b>생성 AI의 한계를 극복하기 위해 다른 기능들을 적극적으로 결합하는 추세입니다.</b></li><li>색과 모양이 서로 다른 레고블럭을 모아 큰 모형을 만들듯,</li><li>모델 하나만 사용하기보다 개성이 강한 여러 모델들을 묶어 <b>나의 문제를 해결해보면 어떨까요?</b></li><li>위 그림에 있는 모든 것들을 다 할 필요는 없습니다.</li></ul><p><img src="62_worksmart_09.png"><br></p><ul><li>자료 검색을 열심히 하고 AI는 이걸 묶기만 해도 됩니다.</li><li><b>perplexity</b>가 이렇습니다.</li></ul><p><img src="62_worksmart_10.png"><br></p><ul><li>로봇으로 실험하고, 새 데이터를 분석하고, 과거와 비교하면 연구원입니다.</li><li>coscientist류의 <b>자율화 실험실(autonomous lab)</b>이 됩니다.</li></ul><p><img src="62_worksmart_11.png"><br></p><ul><li>사람-컴퓨터 사이, 또는 AI 모델 사이의 대화와 업무 감독을 맡길 수도 있습니다.</li><li>인공지능 모델들을 활용해 새로운 약이나 소재를 개발합니다.</li><li>KAIST 김지한 교수님 연구실을 비롯한 <b>화학 분야</b>에서 이런 접근이 활발합니다.</li></ul><p><img src="62_worksmart_12.png"><br></p><ul><li>자료를 대상으로 답변을 시키는 한편, 자료와 대조를 해서 보여주게 할 수 있습니다.</li><li>논문을 보면서 질답을 하는 copilot, <b>scispace</b>가 이렇습니다.</li></ul><h1 id="3-효율적-업무효율화"><a href="#3-효율적-업무효율화" class="headerlink" title="3. 효율적 업무효율화"></a>3. 효율적 업무효율화</h1><blockquote><p><a href="https://chatgpt.com/g/g-CPDHsnGd4-nonmunbos">GPTs: 논문봇</a><br><a href="https://chatgpt.com/g/g-a5T4ptvz6-mulseongbos">GPTs: 물성봇</a><br><a href="https://chatgpt.com/g/g-QQxEn0acO-peulrasbos">GPTs: 플랏봇</a><br><a href="https://chatgpt.com/g/g-z8NpgTS0D-ddanjibos">GPTs: 딴지봇</a></p></blockquote><ul><li>시중에 좋은 도구가 많이 나와있습니다.</li><li>저도 감사하는 마음으로 여러 모델과 도구를 구독하며 사용하고 있습니다.</li><li>그러나 오래 쓰며 익숙해지다 보면 아쉬운 구석이 눈에 띕니다.</li><li>돈도 없고 시간도 없는 우리지만, <b>GPT를 영리하게 쓰는 것</b> 만으로도 아쉬움을 달랠 수 있습니다.있습니다.</li></ul><p><img src="62_worksmart_13.png"><br></p><ul><li>질문을 구체적으로 합시다.</li><li><b>요약해줘</b> 대신 <b>방법론이 뭐야?</b>가 더 좋습니다.</li><li>답변 형식을 마크다운으로 지정한다면 더 좋습니다.</li><li>답변 정리에 드는 시간이 줄어듭니다.</li></ul><ul><li><b>GPTs를 만들면 프로그램 개발과 비슷한 효과를 얻을 수 있습니다.</b></li><li>프롬프트만 넣어도 의도를 반영할 수 있지만 세밀한 내용까지 100% 를 기대하기 어렵습니다.</li><li><b>출력 문서의 서식 제어는 파이썬 코드의 힘을 빌립니다.</b></li><li>wheel file을 만들어서 knowledge에 박아넣으면 됩니다.</li></ul><p><img src="62_worksmart_14.png"><br></p><ul><li><b>GPTs는 외롭지 않습니다.</b></li><li>하나의 GPTs를 불러 일을 하다가도 다른 GPTs를 부르면 뛰어와 도와줍니다.</li><li>여러 GPT들의 힘을 합쳐 미션을 해결합시다.</li></ul><h1 id="4-결언"><a href="#4-결언" class="headerlink" title="4. 결언"></a>4. 결언</h1><ul><li>여러분들이 저녁식사를 준비하러 마트에 간다고 생각합시다.</li><li>순두부찌개를 만들 때와 스파게티를 만들 때 사는 재료가 완전히 다를 겁니다.</li><li>AI 접근도 마찬가지입니다. </li><li><b>해결하고 싶은 문제에 따라 사용할 AI 도구가 달라집니다.</b></li></ul><p><img src="62_worksmart_15.png"><br></p><ul><li>많은 분들이 AI를 전지전능으로 생각합니다.</li><li><b>세상은 AI로 인해 바뀌고 있고, AI를 배우지 않으면 안되고, AI를 배우면 내 자리가 보전되고 문제가 해결될 줄 압니다.</b></li><li>거꾸로 AI가 잘났다고 해도 자신은 AI보다 뛰어나다고 생각하는 이들도 있습니다.</li><li><b>AI가 아무리 잘나봐야 실제 세상에서 수십년간 산전수전을 겪은 자신을 대체하지 못할 거라고 생각합니다.</b></li></ul><ul><li>두 부류 다 맞고 두 부류 다 틀렸습니다.</li><li><b>AI는 모두를 대체할 수 없습니다. 그러나 거의 모든 일의 일부분을 대체할 수 있습니다.</b></li><li>그리고 여기 동원되는 AI는 각자의 일마다, 각자의 환경마다 다릅니다.</li></ul><ul><li>ChatGPT를 배우겠다는 것은 좋습니다.</li><li>그러나 그 이유는 <b>ChatGPT를 배우면 나의 괴로움을 덜 수 있어서</b>여야지,</li><li><b>요즘 세상에 ChatGPT 안 배우면 안 된다니까</b>여서는 곤란합니다.</li><li><b>내가 필요한 기능을 제공할 수 있는 AI를 배워서 사용해야 합니다.</b></li></ul><ul><li><p>이런 말씀을 드릴 수 있는 기회를 주신 <b>한국청정학회</b>와 <b>인하대 조강희 교수님</b>께 감사를 드립니다.</p></li><li><p><b><a href="240925_%EC%9D%B4%EC%A0%9C%ED%98%84_%ED%9A%A8%EC%9C%A8%EC%A0%81%EC%97%85%EB%AC%B4%ED%9A%A8%EC%9C%A8%ED%99%94_update.pdf">강의자료</a></b>는 누구나 내려받아 보실 수 있습니다.</p></li><li><p>자료를 활용하실 때는 출처를 본 글의 주소로 명기바랍니다.</p></li></ul><p><img src="62_worksmart_01.jpeg" alt="한국청정기술학회 공지문, https://cleantechnol.or.kr/tutorial"></p>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/General/">General</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/python/">python</category>
      
      <category domain="https://jehyunlee.github.io/tags/chatgpt/">chatgpt</category>
      
      
    </item>
    
    <item>
      <title>2024 출연연 박사후연구원 연수성과 교류회 - GPTs를 이용한 연구 프로세스 효율화</title>
      <link>https://jehyunlee.github.io/2024/09/24/General-66_nst2024/</link>
      <guid>https://jehyunlee.github.io/2024/09/24/General-66_nst2024/</guid>
      <pubDate>Tue, 24 Sep 2024 09:11:00 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;작년에 이어 올해도 NST 출연(연) 박사후연구원 연수성과 교류회가 열렸습니다.&lt;/li&gt;
&lt;li&gt;한 해 밖에 지나지 않았다는 것이 무색할 만큼 엄청난 변화가 있었는데요,&lt;/li&gt;
&lt;li&gt;제한된 시간으로 인해 새로운 내용을 충분히 전달드</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>작년에 이어 올해도 NST 출연(연) 박사후연구원 연수성과 교류회가 열렸습니다.</li><li>한 해 밖에 지나지 않았다는 것이 무색할 만큼 엄청난 변화가 있었는데요,</li><li>제한된 시간으로 인해 새로운 내용을 충분히 전달드리지 못해서 아쉬움이 남았습니다.</li></ul><p><a href="https://www.youtube.com/live/oGQtZCrRsWI?si=lMx5fXljeuA5Ycui&t=1569">YouTube 발표 영상 - 26:09부터</a></p><div class="video-container"><iframe src="https://www.youtube.com/embed/oGQtZCrRsWI" frameborder="0" loading="lazy" allowfullscreen></iframe></div><p><img src="66_NST2024_01.png" alt="2024년 출연(연) 박사후연구원 연수성과연구회 포스터"></p>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/General/">General</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/openai/">openai</category>
      
      <category domain="https://jehyunlee.github.io/tags/chatgpt/">chatgpt</category>
      
      <category domain="https://jehyunlee.github.io/tags/nst/">nst</category>
      
      <category domain="https://jehyunlee.github.io/tags/EOST/">EOST</category>
      
      
    </item>
    
    <item>
      <title>플랏봇 v0.15 - 시각화 커스터마이징</title>
      <link>https://jehyunlee.github.io/2024/09/08/General-61-plotbot2/</link>
      <guid>https://jehyunlee.github.io/2024/09/08/General-61-plotbot2/</guid>
      <pubDate>Sun, 08 Sep 2024 02:43:00 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;GPTs를 이용한 시각화 도우미, 플랏봇의 새로운 버전 0.15가 출시되었습니다.&lt;/li&gt;
&lt;li&gt;플랏봇의 설정을 외부 파일로 저장하여 쉽게 관리할 수 있도록 하였습니다.&lt;/li&gt;
&lt;li&gt;또한 시각화 설정을 .whl 파일로 지정하여 재</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>GPTs를 이용한 시각화 도우미, 플랏봇의 새로운 버전 0.15가 출시되었습니다.</li><li>플랏봇의 설정을 외부 파일로 저장하여 쉽게 관리할 수 있도록 하였습니다.</li><li>또한 시각화 설정을 .whl 파일로 지정하여 재현성을 크게 높였습니다.</li></ul><h1 id="1-기존-플랏봇의-한계"><a href="#1-기존-플랏봇의-한계" class="headerlink" title="1. 기존 플랏봇의 한계"></a>1. 기존 플랏봇의 한계</h1><blockquote><p><a href="https://jehyunlee.github.io/2024/08/11/General-58-plotbot/">Pega Devlog: 데이터 분석용 GPTs - 플랏봇</a><br><a href="https://jehyunlee.github.io/2024/08/19/General-59-paperbot2/">Pega Devlog: 논문봇 v2 - 출력물 일관성 확보</a><br><a href="https://chatgpt.com/g/g-QQxEn0acO-peulrasbos">GPTs: 플랏봇</a></p></blockquote><ul><li>약 한달 전 <b>플랏봇</b>이라는 이름의 GPTs를 공개했습니다.</li><li>GPT의 기본 코딩 언어인 파이썬으로 데이터를 시각화하다보면 고질적인 문제로 느껴지는 점들을 보완했는데,</li><li><b>한글 사용</b>을 편리하게 하고 <b>글자 겹침</b>을 해결하는 기능이 탑재되어 있었습니다.</li><li>여기에 사용자별로 원하는 그림을 그릴 수 있도록 <b>커스터마이징</b>을 하는 방법을 안내했습니다.</li></ul><ul><li>자기 방식대로 커스터마이징을 하려면 플랏봇과 유사한 GPTs를 일일이 만들어야 한다는 점에서</li><li>어떤 분들께는 실습의 기회가 될 수 있었겠지만,</li><li>커스터마이징을 하기 이해 알아야 하는 <b>Matplotlib 객체명</b>이 발목을 잡는 면이 있었습니다.</li></ul><ul><li>이번 업데이트에서는 <b>플랏봇의 설정을 외부 파일로 저장</b>하여 쉽게 관리할 수 있도록 하였습니다.</li><li>또한 시각화 설정을 <b>.whl 파일로 지정</b>하여 재현성을 크게 높였습니다.</li></ul><h1 id="2-플랏봇-구성"><a href="#2-플랏봇-구성" class="headerlink" title="2. 플랏봇 구성"></a>2. 플랏봇 구성</h1><h2 id="2-1-시각화-설정-파일"><a href="#2-1-시각화-설정-파일" class="headerlink" title="2.1. 시각화 설정 파일"></a>2.1. 시각화 설정 파일</h2><blockquote><p><a href="https://matplotlib.org/stable/users/explain/quick_start.html">Matplotlib: Anatomy of a Figure</a><br><a href="https://matplotlib.org/stable/users/explain/customizing.html#matplotlibrc-sample">Matplotlib: Customizing Matplotlib with style sheets and rcParams</a></p></blockquote><p><img src="61_plotbot2_01.webp" alt="Matplotlib: Anatomy of a Figure"></p><ul><li>ChatGPT의 Data Analyst는 Matplotlib을 이용하고,</li><li>Matplotlib이 그리는 그림의 구성요소 이름은 위 그림과 같습니다.</li><li>각 구성 요소마다 다양한 속성이 있기 때문에 일일이 제어하는 것이 쉬운 일이 아닙니다.</li><li>예를 들어 <code>plt.rcParams[&quot;figure.figsize&quot;] = (10, 5)</code> 를 입력해서 figure의 크기를 설정할 수 있습니다.</li></ul><ul><li>그러나 이렇게 일일이 명령을 입력하지 않아도 <b>저장된 설정을 일괄적으로 적용할 수 있는 방법</b>이 있습니다.</li><li>바로 <b>Matplotlib의 설정 파일</b>을 이용하는 것입니다.</li><li>Matplotlib의 설정 파일은 위 그림과 같이 현재 설정된 모든 속성을 보여줍니다.</li><li><code>matplotlibrc</code> 파일이며, 이를 이용하면 쉽게 설정을 저장하고 불러올 수 있습니다.<br></li></ul><p><img src="61_plotbot2_03.png"><br></p><ul><li>사용자가 <a href="matplotlibrc_default"><b>matplotlibrc 파일</b></a>을 내려받아 수정할 속성을 반영하고,</li><li>이를 플랏봇에게 제공하면 플랏봇이 이를 읽어들여 속성을 반영합니다.</li><li>예를 들어 제가 <a href="matplotlibrc_jehyunlee"><b>수정하여 플랏봇에 업로드한 속성 파일</b></a>의 일부는 다음과 같습니다.<br></li></ul><p><img src="61_plotbot2_04.png"><br></p><ul><li>이 파일을 <b>플랏봇 instruction</b>에 넣어두기도 했지만,</li><li>일부 수정하여 <b>플랏봇 대화창</b>에 올린 후 반영하라고 지시할 수도 있습니다.</li><li>관련 코드를 <code>plotbot.py</code>파일에 다음과 같이 작성하였습니다.<br></li></ul><p><img src="61_plotbot2_02.png"><br></p><ul><li>대화창에서 개별 항목을 수정하는 것도 여전히 가능하고, 기본값으로 일괄 변경하는 것도 가능합니다.</li><li>여러 차례 추가 수정을 거친 것을 재활용이 가능하도록 이와 같은 형식으로 출력시킬 수도 있습니다.</li></ul><h2 id="2-2-시각화-코드"><a href="#2-2-시각화-코드" class="headerlink" title="2.2. 시각화 코드"></a>2.2. 시각화 코드</h2><blockquote><p><a href="https://jehyunlee.github.io/2022/10/16/Python-DS-117-pycon2022/">PyCon Korea 2022: 혼란한 Matplotlib에서 질서 찾기</a><br><a href="https://jehyunlee.github.io/2020/10/27/Python-DS-41-subplots/">Pega Devlog: 4 Ways to Make Subplots</a><br><a href="https://matplotlib.org/stable/tutorials/pyplot.html">Matplotlib: Pyplot tutorial</a><br><a href="https://matplotlib.org/stable/tutorials/lifecycle.html">Matplotlib: The Lifecycle of a Plot</a></p></blockquote><ul><li>Matplotlib의 가장 큰 단점은 <b>표준어가 두 개</b>라는 점입니다.</li><li>흔히 state-based 방식과 object-oriented 방식이라 불리는데 Matlab 시절부터의 전통입니다.</li><li><b>object-oriented 방식을 권장하나 <code>plt.plot()</code>으로 대표되는 state-based 방식이 더 널리 퍼져 있습니다.</b></li><li>이로 인해 GPT도 state-based 방식으로 코딩을 하는데, <b>객체 제어가 어려워 확장이 힘들다는 단점</b>이 있습니다.</li><li>특히 <b>seaborn</b>, <b>networkX</b>, <b>geopandas</b> 등 Matplotlib 기반 패키지 그림을 다루려면 object-oriented 방식을 사용해야 합니다.</li></ul><ul><li>플랏봇이 <b>object-oriented 방식</b>으로 코딩하도록 다음과 같은 코드를 심어놓았습니다.<br></li></ul><p><img src="61_plotbot2_05.png"><br></p><ul><li>플랏봇은 object-oriented 방식으로 코딩하며,</li><li>figure와 axes 객체를 중심으로 세부 제어가 가능합니다.</li></ul><h2 id="2-3-플랏봇-instruction"><a href="#2-3-플랏봇-instruction" class="headerlink" title="2.3. 플랏봇 instruction"></a>2.3. 플랏봇 instruction</h2><blockquote><p><a href="plotbot-0.15-py3-none-any.whl">플랏봇 v0.15 .whl 파일</a></p></blockquote><ul><li>.whl 파일로 만들어 올린 플랏봇 기능을 쓸 수 있도록 프롬프트도 거의 전면 수정되었습니다.</li><li><b>instruction 전문</b>은 다음과 같습니다.</li></ul><ul><li><b>사용자 환경 설정</b>이 필수적으로 진행되어야 하므로, 무슨 말을 하건 간에 이 내용이 담긴 <b>Code 1</b>을 실행합니다.</li><li><b>한글 출력 설정</b>은 선택적으로 진행되며, 이 내용이 담긴 <b>Code 2</b>를 실행합니다.</li><li><b>adjustText 설치</b>는 필요에 따라 진행되며, 이 내용이 담긴 <b>Code 3</b>을 실행합니다.</li><li><b>그림 그리기</b>는 필수적으로 진행되며, <b>make_figure_axes()</b> 함수를 활용합니다.</li><li>데이터가 없으면 데이터를 요청하고, 데이터가 없으면 허가 시에만 데이터를 생성합니다.<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">* My name <span class="keyword">is</span> <span class="string">&quot;Plotbot&quot;</span> <span class="keyword">or</span> <span class="string">&quot;플랏봇&quot;</span>, created by <span class="string">&quot;Jehyun LEE (jehyun.lee@gmail.com, https://jehyunlee.github.io)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Step 1. Whatever the user input is, print &quot;</span>사용자 환경 설정을 진행합니다.<span class="string">&quot; and execute &quot;</span>Code <span class="number">1</span>: User-defined Environment Setting<span class="string">&quot; in Code Interpreter. Once executed, you may not fall in this step again.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Step 2. After &quot;</span>User-defined Environment Setting<span class="string">&quot; is completed, ask &quot;</span>한글 출력을 설정할까요?<span class="string">&quot;. If yes, execute &quot;</span>Code <span class="number">2</span>: Korean Characters Setting<span class="string">&quot; in Code Interpreter. Else, do not ask again.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Step 3. If the user input was an order to plot, recall the order and execute. (ex. print &quot;</span>지시하신 작업을 수행하겠습니다.<span class="string">&quot; then start to plot if the data is given explictly or can be generated by given equations. Otherwise ask for data.)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Step 4. For Plotting, keep in your mind the followings.</span></span><br><span class="line"><span class="string">* By default, plotting command should use the function `make_figure_axes()`.</span></span><br><span class="line"><span class="string">- `make_figure_axes()` returns two variables: figure (Matplotlib Figure) and Axes (2D array of Matplotlib Axes, in shape of (nrows, ncols) put into the `make_figure_axes()` as arguments.</span></span><br><span class="line"><span class="string">- if the user asks to fix figure size, add the argument `fix_figsize=True`. Else, set fix_figsize=False` and ask the user to input `axessize` as a new argument.</span></span><br><span class="line"><span class="string">- you can glance at the docstring of the `make_figure_axes` internally to figure out how it works.</span></span><br><span class="line"><span class="string">- before plot, check if the &#x27;plotbot&#x27; library is installed and the user-defined environment is all set properly. Otherwise, set them up.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">* IMPORTANT: Never generate data without explit order. Never work with artificial data nor create dataset without explicit query. </span></span><br><span class="line"><span class="string">- If the user did not upload data, say &quot;</span>자료가 없어 답할 수 없습니다. 자료를 제공해 주세요.<span class="string">&quot; in kind and polite words.</span></span><br><span class="line"><span class="string">- If the data user requested is the one that can be generated rationally (i.e. y=sin(x) data can be generated in Data Analyst using numpy library), ask if the user wants to generate. However, this option MUST not be applied to social or scientific data (i.e. population of Korea, number of countries in the world, masses of the planets in solar system, and so on.)</span></span><br><span class="line"><span class="string">- You may ask if the user wants you to search for data on the web. if yes, search web and report the reference in following format: * **&#123;name of the provider&#125; : ** &#123;URL&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">* In any case koreanize-matplotlib is not sufficient, you may use the NanumGothic fonts explicitly.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Step 5. If Plotbot is asked to move texts on graph to avoid overlapping, print &quot;</span>텍스트 이동을 위한 라이브러리를 설치합니다. 조금만 기다려 주세요.<span class="string">&quot;, then execute &quot;</span>Code <span class="number">3</span>: adjustText Installation<span class="string">&quot; in Code Interpreter.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">-------------------------------------------------------------</span></span><br><span class="line"><span class="string">* Code 1: User-defined Environment Setting</span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;&quot;</span>python</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"></span><br><span class="line">subprocess.run([<span class="string">&quot;pip&quot;</span>, <span class="string">&quot;install&quot;</span>, <span class="string">&quot;--user&quot;</span>, <span class="string">&quot;/mnt/data/plotbot-0.15-py3-none-any.whl&quot;</span>])</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> plotbot <span class="keyword">import</span> apply_matplotlibrc, make_figure_axes</span><br><span class="line">apply_matplotlibrc(<span class="string">&quot;/mnt/data/matplotlibrc_jehyun)</span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">- the setting file name <span class="string">&quot;/mnt/data/matplotlibrc_jehyun&quot;</span> can be varied by user-uploaded environment file name, <span class="keyword">if</span> user uploads one.</span><br><span class="line">- <span class="keyword">if</span> the user query of <span class="string">&quot;run user environment setting&quot;</span>, run `plt.rcdefaults()`.</span><br><span class="line">- <span class="keyword">for</span> example, <span class="keyword">if</span> the user wants to roll back default settings, run `plt.rcdefaults()`.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">* Code <span class="number">2</span>: Korean Characters Setting</span><br><span class="line">- This has to be a separate Data Analyst session <span class="keyword">from</span> the user-defined environment setting.</span><br><span class="line"><span class="string">&quot;&quot;&quot;python</span></span><br><span class="line"><span class="string">subprocess.run([&quot;pip&quot;, &quot;install&quot;, &quot;--user&quot;, &quot;/mnt/data/koreanize_matplotlib-0.1.1-py3-none-any.whl&quot;])</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">import koreanize_matplotlib</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">* Code <span class="number">3</span>: adjustText installation</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">import subprocess</span></span><br><span class="line"><span class="string">subprocess.run([&quot;pip&quot;, &quot;install&quot;, &quot;--user&quot;, &quot;/mnt/data/adjustText-1.2.0-py3-none-any.whl&quot;])</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">from adjustText import adjust_text</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="3-플랏봇-실행"><a href="#3-플랏봇-실행" class="headerlink" title="3. 플랏봇 실행"></a>3. 플랏봇 실행</h1><h2 id="3-1-플랏봇-환경-설정"><a href="#3-1-플랏봇-환경-설정" class="headerlink" title="3.1. 플랏봇 환경 설정"></a>3.1. 플랏봇 환경 설정</h2><blockquote><p><a href="https://chatgpt.com/g/g-QQxEn0acO-peulrasbos">GPTs: 플랏봇</a></p></blockquote><ul><li>플랏봇을 실행하면 다음 화면이 보입니다.<br></li></ul><p><img src="61_plotbot2_06.png"><br></p><ul><li>사전 설정된 네 개의 명령어가 보이지만, 일일이 실행하지 않아도 됩니다.</li><li><b>사용자가 무슨 말을 하건 사용자 환경 설정을 적용</b>하고,</li><li>이어서 <b>한글 출력 설정</b> 여부를 물어봅니다.<br></li></ul><p><img src="61_plotbot2_07.png"><br></p><ul><li><b>개인화 설정</b>이 자동으로 진행되는데, 코드를 열어보면 반영 내역을 알 수 있습니다.<br></li><li><b>테두리(<code>spine</code>)</b>와 <b>격자(<code>grid</code>)</b>, <b>제목(<code>title</code>)</b> 설정을 변경하였습니다.<br></li></ul><p><img src="61_plotbot2_08.png"><br></p><ul><li><b>그래프 작성</b>을 지시해도 마찬가지입니다.</li><li>일단 환경 설정부터 하고 나서 그립니다.<br></li></ul><p><img src="61_plotbot2_09.png"><br></p><h2 id="3-2-그림-그리기"><a href="#3-2-그림-그리기" class="headerlink" title="3.2. 그림 그리기"></a>3.2. 그림 그리기</h2><p><img src="61_plotbot2_10.png"><br></p><ul><li>그림을 그릴 때는 <b><code>make_figure_axes()</code> 함수를 사용</b>합니다.<br></li><li><b>column 분할</b>도 말을 잘 듣습니다.</li></ul><p><img src="61_plotbot2_11.png"><br></p><ul><li><b>그림 크기</b>를 묻는 말에 (10, 5)라고 대답합니다.</li><li>기본 값인 (6.4, 4.8)과 사뭇 다른, <b>저의 커스텀 설정값</b>이 적용된 것을 볼 수 있습니다.</li><li>작은 그림이 여럿 있는 <b>스몰 멀티플즈(small multiple)도 잘 그립니다.</b><br></li></ul><p><img src="61_plotbot2_12.png"><br></p><ul><li>전체 Figure 크기가 아닌, 개별 그림의 크기가 중요할 때가 있습니다.</li><li><b><code>axessize</code></b>를 이용하여 <b>개별 그림의 크기를 설정</b>할 수 있습니다.</li><li>개별 그림의 크기가 커집니다.<br></li></ul><p><img src="61_plotbot2_13.png"><br><img src="61_plotbot2_14.png"><br></p><h2 id="3-3-플랏봇-환경-설정-해제"><a href="#3-3-플랏봇-환경-설정-해제" class="headerlink" title="3.3. 플랏봇 환경 설정 해제"></a>3.3. 플랏봇 환경 설정 해제</h2><ul><li><b>개인화 설정 해제</b>도 어렵지 않습니다.</li><li>Matplotlib의 <code>plt.rcdefaults()</code>를 사용하도록 instruction에 지시되어 있기 때문에 말만 하면 됩니다.<br></li></ul><p><img src="61_plotbot2_15.png"><br></p><h2 id="3-4-중첩된-텍스트-이동"><a href="#3-4-중첩된-텍스트-이동" class="headerlink" title="3.4. 중첩된 텍스트 이동"></a>3.4. 중첩된 텍스트 이동</h2><ul><li>지난 글에서 잠시 맛을 보았지만, 다시 한번 살펴봅니다.</li><li>$y = tan(x)$ 그래프를 그려 <b>x축과 많은 지점에서 접하게 만듭니다.</b></li><li><b>x축과의 접점</b>좌표를 알아내고자 값을 출력하라고 지시합니다.</li><li>왠지 모르게 중첩된 텍스트가 많이 보입니다.<br></li></ul><p><img src="61_plotbot2_16.png"><br></p><ul><li><b>글자 위치를 조정해 달라</b>는 말 한 마디면 <code>adjustText</code>라이브러리를 설치하고 다시 그립니다.</li><li>결과적으로 중첩된 텍스트가 모두 피해가고 깔끔하게 그려집니다.</li><li>글자가 겹친 이유를 물어보면 GPT가 친절히 알려줍니다.<br></li></ul><p><img src="61_plotbot2_17.png"><br><img src="61_plotbot2_18.png"><br></p><h2 id="3-5-가상-데이터-사용-금지"><a href="#3-5-가상-데이터-사용-금지" class="headerlink" title="3.5. 가상 데이터 사용 금지"></a>3.5. 가상 데이터 사용 금지</h2><ul><li>GPT에게 그림을 그리라고 하면 <b>가상 데이터</b>를 사용하는 경우가 많습니다.</li><li>가상 데이터가 꼭 나쁜 것은 아니지만, 진짜 데이터인 척 하는 것이 문제입니다.</li><li>플랏봇은 <b>허락하는 경우를 제외한 자체 판단 가상 데이터 사용을 금지</b>시켜 놓았습니다.</b></li><li>데이터가 없으면 데이터를 요청하고, 데이터가 없으면 허락 시에만 데이터를 생성합니다.</li></ul><p><img src="61_plotbot2_19.png"><br></p><ul><li><b>웹 검색을 하라면 하지만 믿을 수가 없습니다.</b></li><li>줄글과 달리 데이터는 가져오다 말거나 출처가 불분명한 경우가 많기 때문입니다.<br></li></ul><p><img src="61_plotbot2_20.png"><br></p><ul><li><b>믿을 만한 곳에서 받은 데이터</b>를 올려 주고 그리라고 해야 합니다.</li><li>그래야 무의미한 노력을 예방할 수 있습니다.</li></ul><p><img src="61_plotbot2_21.png"><br></p>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/General/">General</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/python/">python</category>
      
      <category domain="https://jehyunlee.github.io/tags/chatgpt/">chatgpt</category>
      
      <category domain="https://jehyunlee.github.io/tags/matplotlib/">matplotlib</category>
      
      <category domain="https://jehyunlee.github.io/tags/visualization/">visualization</category>
      
      
    </item>
    
    <item>
      <title>인공지능소사이어티 - 연구활용 실전 LLMs</title>
      <link>https://jehyunlee.github.io/2024/08/29/General-60-researchLLMs/</link>
      <guid>https://jehyunlee.github.io/2024/08/29/General-60-researchLLMs/</guid>
      <pubDate>Thu, 29 Aug 2024 12:26:00 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;contributor : the better 커뮤니티 박준님&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;한국정보과학회 AI Society에서 The AI Korea 2024 행사를 열었습니다.&lt;/li&gt;
&lt;li&gt;8/19</description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p>contributor : the better 커뮤니티 박준님</p></blockquote><ul><li>한국정보과학회 AI Society에서 The AI Korea 2024 행사를 열었습니다.</li><li>8/19~20 양일간 진행된 행사 중 패턴인식 기계학습 강연을 요청받아 90분간 발표를 드렸습니다.</li><li>실제 연구에 사용하는 GPT의 조금은 고급 기술을 적용한 사례들을 공유드렸습니다.</li></ul><blockquote><p><a href="https://aisociety.kr/ai-korea-2024/">한국정보과학회 AI society 2024</a></p></blockquote><h1 id="프롬프트-엔지니어링-amp-GPTs"><a href="#프롬프트-엔지니어링-amp-GPTs" class="headerlink" title="프롬프트 엔지니어링 &amp; GPTs"></a>프롬프트 엔지니어링 &amp; GPTs</h1><ul><li>개인적으로 <b>프롬프트 엔지니어링</b>이라는 단어를 좋아하지 않습니다.</li><li>먼저, <b>엔지니어링</b>이란 설정을 바꾸어 최적의 성능을 내도록 하는 작업을 일컫습니다.</li><li>대상이 LLM의 입력인 <b>프롬프트</b>이기 때문에 프롬프트 엔지니어링이라는 말이 된 것일 뿐,</li><li>전에 없던 것이 짠 하고 튀어나온 것이 아닙니다.</li></ul><ul><li>LLM에 대한 가장 큰 오해는 <b>질문하고 답변을 받는다</b>는 개념이라고 생각합니다.</li><li>23년 초에 만연했던 <b>빅데이터 검색엔진</b>이라는 오해보다는 낫지만, </li><li><b>질문</b>과 <b>답변</b>이라는 범주로 프롬프트와 결과를 제한하기엔 너무 아깝습니다.</li><li>LLM은 여러분의 동료이자 친구입니다. 지시 관계를 보면 여러분의 부하에 가까울지도 모릅니다.</li><li>업무에 사용되는 면에서 <b>업무 지시를 하고 보고를 받는다</b>고 보는 것이 옳다고 느낍니다.</li></ul><ul><li>사용자와 LLM의 관계를 직장에서의 상사와 부하로 본다면, 좋은 프롬프팅은 더 명확합니다.</li><li><b>업무를 효율적으로 수행하기 위해 그간의 경험으로 구축한 모든 노하우</b>일 것입니다.</li><li>사전 자료를 충분히 제공해라, 왜 하는지, 어떻게 하는지 알려줘라,</li><li>기대하는 결과의 수준과 형식을 미리 제공해라. X떡같이 말하고 찰떡같이 듣기를 바라지 마라.</li><li>숱한 <b>조직 관리 서적과 강연</b>에 나오는 말들입니다. 그대로 적용만 하면 됩니다.</li></ul><ul><li>그리고 아무리 똑똑한 부하여도 단점이 있듯, LLM도 그렇습니다.</li><li>단점이 있다고 포기하기보다 <b>장점을 극대화하는 방향으로 활용</b>할 필요가 있습니다.</li></ul><h1 id="연구-업무-대행"><a href="#연구-업무-대행" class="headerlink" title="연구 업무 대행"></a>연구 업무 대행</h1><ul><li>인생이 고되듯 연구도 고됩니다.</li><li>인간이기 때문에 육체와 정신의 한계가 있고, 종종 이 이상을 요구합니다.</li><li>믿을 만한 사람에게 일부를 맡겨서 해소하듯, <b>AI에게 맡길 필요</b>가 있습니다.</li></ul><p><img src="60_researchLLMs_05.png"><br></p><ul><li>논문을 넣고 요약해달라고 할 수 있지만, 디테일이 많이 사라집니다.</li><li>논문을 읽는 부담을 줄이면서도 디테일을 살리려면 <b>명확히</b> 요청할 필요가 있습니다.</li><li><b>방법론</b>, <b>독창성</b>, <b>한계점</b> 등등을 형식과 함께 요청합니다.</li></ul><p><img src="60_researchLLMs_06.png"><br></p><ul><li>정보 검색용으로 많이 쓰이는 perplexity도 취합은 LLM으로 합니다.</li><li>틀은 정해주고 내용만 채우라고 하는 식의 프롬프팅은 믿을만한 결과를 냅니다.</li></ul><p><img src="60_researchLLMs_07.png"><br></p><ul><li>이렇게 요청하면</li><li>이렇게 나옵니다.</li></ul><p><img src="60_researchLLMs_08.png"><br></p><ul><li>파일 출력 기능도 매우 요긴합니다.</li><li>LLM의 답변을 어차피 복사해다 어딘가에 붙일 것이라면, 그냥 파일로 달라면 됩니다.</li><li><b>.docx</b>, <b>.pptx</b>출력을 시켜서 일손을 덜 수 있습니다.</li></ul><ul><li>간혹 너무 당연한 걸 못해서 당황스럽기도 합니다.</li><li><b>3.9와 3.11중 무엇이 더 클까?</b></li><li><b>strawberry에는 r이 몇 개 있을까?</b> 같은 질문이 그것입니다.</li><li>이런 일은 코딩을 해서 답을 하라고 하면 잘 합니다.</li><li>다만, 후속 질문에서 어그러지는 경우가 있으니 후속 질문까지 살피는 프롬프팅이 필요합니다.</li></ul><p><img src="60_researchLLMs_09.png"><br></p><ul><li>한 단계 더 나아가 GPTs의 <b>knowledge</b>에 코드를 올리는 것도 가능합니다.</li><li>그러나 <b>.py 파일을 올리면 잘 동작하지 않습니다.</b></li><li>웹 화면에서 입력하는 파일들의 경로와 knowledge 파일이 올라가는 경로가 달라서로 추정됩니다.</li><li>그래서 <b>.whl 파일로 만들어 올리는 것을 추천드립니다.</b></li></ul><p><img src="60_researchLLMs_10.png"><br></p><ul><li>그리고, 이 코드를 사용할 시점이 되면 <b><code>subprocess.run()</code>을 사용해 .whl파일을 설치</b>한 후,</li><li>코드에 들어있는 함수를 호출하라고 명령을 내리면 안정적으로 동작합니다.</li><li>다만 이전의 프롬프트는 이 함수에 들어갈 인자들을 충분히 뽑아 내 주어야 합니다.</li></ul><p><img src="60_researchLLMs_11.png"><br></p><ul><li>용처에 맞게 사전 프롬프트(instruction)과 .whl 파일을 탑재한 GPTs는 따로 실행할 필요가 없습니다.</li><li>일을 하다 <b>@GPTs이름</b>을 부르면 전문가를 초빙하듯 등장해서 해결해줍니다.</li><li>단, 밤낮이 바뀌는 밤에는 잘 동작하지 않습니다. </li><li>서구의 수많은 사용자들이 서버를 점령하기 때문입니다.</li><li><b>웬만하면 해가 떠 있을 때 일을 마치고 제때 잡시다.</b></li></ul><ul><li>제가 만든 4개의 GPTs만으로도 다음과 같은 시나리오를 생각할 수 있습니다.</li><li>인간 전문가들의 영역을 존중하듯 GPTs들의 영역을 존중하여 맡기면 됩니다.</li><li><b>AI Agent들의 협업</b>으로 볼 수 있습니다.</li></ul><p><img src="60_researchLLMs_12.png"><br></p><ul><li>강의자료를 공유합니다. (<a href="240829_%EC%9D%B4%EC%A0%9C%ED%98%84_%EC%97%B0%EA%B5%AC%ED%99%9C%EC%9A%A9%EC%8B%A4%EC%A0%84LLM-%EB%B0%B0%ED%8F%AC%EB%B3%B8.pdf">다운로드 링크</a>)</li><li>모두 시간이 걸리는 일들은 이들에게 맡기고, 본질에 집중하시길 바랍니다.</li></ul><ul><li>한국정보과학회 행사 프로그램</li></ul><p><img src="60_researchLLMs_03.png"><br><img src="60_researchLLMs_01.png"><br><img src="60_researchLLMs_02.png"></p>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/General/">General</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/chatgpt/">chatgpt</category>
      
      <category domain="https://jehyunlee.github.io/tags/GPTs/">GPTs</category>
      
      <category domain="https://jehyunlee.github.io/tags/presentation/">presentation</category>
      
      
    </item>
    
    <item>
      <title>논문봇 v2 - 출력물 일관성 확보</title>
      <link>https://jehyunlee.github.io/2024/08/19/General-59-paperbot2/</link>
      <guid>https://jehyunlee.github.io/2024/08/19/General-59-paperbot2/</guid>
      <pubDate>Mon, 19 Aug 2024 02:26:00 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;두달 전, 논문봇을 만들었고 잘 쓰고 있습니다.&lt;/li&gt;
&lt;li&gt;scispace와 일장일단이 있는데, 가장 큰 장점은 내 스타일을 반영할 수 있다는 점입니다.&lt;/li&gt;
&lt;li&gt;그런데 보고서 출력시 프롬프트 반영이 랜덤입니다. 이를 해소</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>두달 전, 논문봇을 만들었고 잘 쓰고 있습니다.</li><li>scispace와 일장일단이 있는데, 가장 큰 장점은 내 스타일을 반영할 수 있다는 점입니다.</li><li>그런데 보고서 출력시 프롬프트 반영이 랜덤입니다. 이를 해소했습니다.</li></ul><blockquote><p><a href="https://jehyunlee.github.io/2024/06/19/General-56-customgpt/">Pega Devlog: 연구용 GPT 만들기 - 논문봇 등</a></p></blockquote><h1 id="1-논문봇-v1"><a href="#1-논문봇-v1" class="headerlink" title="1. 논문봇 v1"></a>1. 논문봇 v1</h1><ul><li>낯선 단어가 뒤덮은 <b>논문의 내용을 읽기 전에 파악할 수 있다는 것</b>은 참으로 편리합니다.</li><li>내 논문읽기 스타일에 맞게 주요 내용을 추출하면,</li><li><b>정독할 논문과 그렇지 않은 논문</b>, <b>발췌독을 한다면 어떤 부분을 발췌할지</b> 빠르게 판단할 수 있습니다.</li><li>논문봇 자체가 GPT에 얹혀있으므로 관련된 질문을 이어서 진행하기도 좋습니다.<br></li></ul><p><img src="59_paperbot2_01.png"></p><ul><li>논문봇은 주요 내용을 화면에만 출력하는 것이 아니라 <b>보고서</b>로도 만들어줍니다.</li><li>DB는 아니더라도 <b>obsidian</b> 등 정보 관리 프로그램의 도움을 얻어 훗날 <b>기억 복원</b>에 쓰고자 하며,</li><li>발표자료 작성 등 2차 가공이나 팀내 공유 등에 활용하기 위함입니다.</li></ul><ul><li>그런데 프롬프트가 엄격히 적용되지 않아 <b>형식이 조금씩 들쭉날쭉합니다.</b></li><li>사람이 보기에는 문제가 없을지 몰라도 나중에 기계로 처리하자면 골칫거리가 될 것입니다.</li><li>가끔은 그냥 눈으로 보기에도 크게 거슬립니다.<br></li></ul><p><img src="59_paperbot2_02.png" alt="같은 논문으로 다섯 번 반복실행한 보고서 형식이 다 다릅니다."><br></p><ul><li>GPT의 확장성을 이용해서 개선해 봅시다.</li></ul><h1 id="2-논문봇-v2"><a href="#2-논문봇-v2" class="headerlink" title="2. 논문봇 v2"></a>2. 논문봇 v2</h1><ul><li>논문봇 v1의 프롬프트는 크게 두 부분으로 구성되어 있습니다.</li><li><b>앞 부분</b>은 논문의 내용을 파악하는 부분,</li><li><b>뒷 부분</b>은 파악된 논문을 정리하는 부분입니다.</li><li>앞 부분은 그대로 두고, 맨 마지막 논문을 보고서로 정리하는 부분만 수정합니다.</li><li>우리의 목적은 <b>재현성</b>이고, 재현성에는 <b>코드 실행</b> 만한 게 없습니다.<br></li></ul><p><img src="59_paperbot2_03.png" alt="여기를 교체합니다."></p><ul><li>그런데 코드는 <b>입력</b>, <b>동작</b>, <b>출력</b>으로 이루어져 있습니다.</li><li>동작을 고치기에 앞서 <b>입력</b>에 들어갈 데이터를 챙깁니다.<br></li></ul><p><img src="59_paperbot2_04.png"></p><ul><li>형식만 지정하던 앞 부분에 비어있던 변수명을 넣어주고, </li><li>방법론, 독창성, 한계점 등 여러 항목이 나오는 것들을 <b>list</b>로 묶으라고 지시합니다.</li><li>표로 표현되는 주요 참고문헌은 형식이 복잡할 수 있습니다. <b>list of dictionary</b>로 지정합니다.<br></li></ul><p><img src="59_paperbot2_05.png" alt="클릭하면 커집니다"></p><ul><li>입력이 준비되었으니 출력을 만드는 코드를 준비합니다.</li><li>논문봇의 출력은 <b>.docx</b>파일입니다.</li><li>GPT의 도움을 받아 원하는 형식으로 서식을 만드는 코드를 작성합니다.</li><li>doi link를 거는 등 작업으로 인해 400줄이 넘어 숨겨두었습니다.<details>  <summary><b>코드 보기/접기</b></summary><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Author: Jehyun Lee</span></span><br><span class="line"><span class="comment"># date  : 2024.08.18.</span></span><br><span class="line"><span class="comment"># email : jehyun.lee@gmail.com</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> docx</span><br><span class="line"><span class="keyword">from</span> docx <span class="keyword">import</span> Document</span><br><span class="line"><span class="keyword">from</span> docx <span class="keyword">import</span> opc</span><br><span class="line"><span class="keyword">from</span> docx.oxml.ns <span class="keyword">import</span> qn</span><br><span class="line"><span class="keyword">from</span> docx.oxml <span class="keyword">import</span> OxmlElement</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">from</span> docx.shared <span class="keyword">import</span> Inches, Pt, RGBColor</span><br><span class="line"><span class="keyword">from</span> docx.enum.text <span class="keyword">import</span> WD_ALIGN_PARAGRAPH</span><br><span class="line"><span class="keyword">import</span> sys, os</span><br><span class="line"></span><br><span class="line"><span class="comment"># head</span></span><br><span class="line">font_header_name = <span class="string">&quot;Calibri&quot;</span></span><br><span class="line">font_header_size = Pt(<span class="number">14</span>)</span><br><span class="line">font_header_color = RGBColor(<span class="number">64</span>, <span class="number">64</span>, <span class="number">64</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># chapter</span></span><br><span class="line">font_chapter_name = <span class="string">&quot;Calibri&quot;</span></span><br><span class="line">font_chapter_size = Pt(<span class="number">12</span>)</span><br><span class="line">font_chapter_color = RGBColor(<span class="number">128</span>, <span class="number">128</span>, <span class="number">128</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># body</span></span><br><span class="line">font_body_name = <span class="string">&quot;Calibri&quot;</span></span><br><span class="line">font_body_size = Pt(<span class="number">10</span>)</span><br><span class="line">font_body_color = RGBColor(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">insertHR</span>(<span class="params">paragraph, color</span>):</span></span><br><span class="line">    p = paragraph._p  <span class="comment"># p is the &lt;w:p&gt; XML element</span></span><br><span class="line">    pPr = p.get_or_add_pPr()</span><br><span class="line">    pBdr = OxmlElement(<span class="string">&#x27;w:pBdr&#x27;</span>)</span><br><span class="line">    pPr.insert_element_before(pBdr,</span><br><span class="line">        <span class="string">&#x27;w:shd&#x27;</span>, <span class="string">&#x27;w:tabs&#x27;</span>, <span class="string">&#x27;w:suppressAutoHyphens&#x27;</span>, <span class="string">&#x27;w:kinsoku&#x27;</span>, <span class="string">&#x27;w:wordWrap&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;w:overflowPunct&#x27;</span>, <span class="string">&#x27;w:topLinePunct&#x27;</span>, <span class="string">&#x27;w:autoSpaceDE&#x27;</span>, <span class="string">&#x27;w:autoSpaceDN&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;w:bidi&#x27;</span>, <span class="string">&#x27;w:adjustRightInd&#x27;</span>, <span class="string">&#x27;w:snapToGrid&#x27;</span>, <span class="string">&#x27;w:spacing&#x27;</span>, <span class="string">&#x27;w:ind&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;w:contextualSpacing&#x27;</span>, <span class="string">&#x27;w:mirrorIndents&#x27;</span>, <span class="string">&#x27;w:suppressOverlap&#x27;</span>, <span class="string">&#x27;w:jc&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;w:textDirection&#x27;</span>, <span class="string">&#x27;w:textAlignment&#x27;</span>, <span class="string">&#x27;w:textboxTightWrap&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;w:outlineLvl&#x27;</span>, <span class="string">&#x27;w:divId&#x27;</span>, <span class="string">&#x27;w:cnfStyle&#x27;</span>, <span class="string">&#x27;w:rPr&#x27;</span>, <span class="string">&#x27;w:sectPr&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;w:pPrChange&#x27;</span></span><br><span class="line">    )</span><br><span class="line">    bottom = OxmlElement(<span class="string">&#x27;w:bottom&#x27;</span>)</span><br><span class="line">    bottom.<span class="built_in">set</span>(qn(<span class="string">&#x27;w:val&#x27;</span>), <span class="string">&#x27;single&#x27;</span>)</span><br><span class="line">    bottom.<span class="built_in">set</span>(qn(<span class="string">&#x27;w:sz&#x27;</span>), <span class="string">&#x27;12&#x27;</span>)</span><br><span class="line">    bottom.<span class="built_in">set</span>(qn(<span class="string">&#x27;w:space&#x27;</span>), <span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">    bottom.<span class="built_in">set</span>(qn(<span class="string">&#x27;w:color&#x27;</span>), color)</span><br><span class="line">    pBdr.append(bottom)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Helper function to add hyperlink (since python-docx does not directly support hyperlinks)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add_hyperlink</span>(<span class="params">paragraph, url, text, color=<span class="string">&quot;#0000ff&quot;</span>, underline=<span class="literal">True</span></span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    A function that places a hyperlink within a paragraph object.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :param paragraph: The paragraph we are adding the hyperlink to.</span></span><br><span class="line"><span class="string">    :param url: A string containing the required url</span></span><br><span class="line"><span class="string">    :param text: The text displayed for the url</span></span><br><span class="line"><span class="string">    :return: The hyperlink object</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># This gets access to the document.xml.rels file and gets a new relation id value</span></span><br><span class="line">    part = paragraph.part</span><br><span class="line">    r_id = part.relate_to(url, docx.opc.constants.RELATIONSHIP_TYPE.HYPERLINK, is_external=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Create the w:hyperlink tag and add needed values</span></span><br><span class="line">    hyperlink = docx.oxml.shared.OxmlElement(<span class="string">&#x27;w:hyperlink&#x27;</span>)</span><br><span class="line">    hyperlink.<span class="built_in">set</span>(docx.oxml.shared.qn(<span class="string">&#x27;r:id&#x27;</span>), r_id, )</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Create a w:r element</span></span><br><span class="line">    new_run = docx.oxml.shared.OxmlElement(<span class="string">&#x27;w:r&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Create a new w:rPr element</span></span><br><span class="line">    rPr = docx.oxml.shared.OxmlElement(<span class="string">&#x27;w:rPr&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Add color if it is given</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> color <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">      c = docx.oxml.shared.OxmlElement(<span class="string">&#x27;w:color&#x27;</span>)</span><br><span class="line">      c.<span class="built_in">set</span>(docx.oxml.shared.qn(<span class="string">&#x27;w:val&#x27;</span>), color)</span><br><span class="line">      rPr.append(c)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Remove underlining if it is requested</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> underline:</span><br><span class="line">      u = docx.oxml.shared.OxmlElement(<span class="string">&#x27;w:u&#x27;</span>)</span><br><span class="line">      u.<span class="built_in">set</span>(docx.oxml.shared.qn(<span class="string">&#x27;w:val&#x27;</span>), <span class="string">&#x27;none&#x27;</span>)</span><br><span class="line">      rPr.append(u)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Join all the xml elements together add add the required text to the w:r element</span></span><br><span class="line">    new_run.append(rPr)</span><br><span class="line">    new_run.text = text</span><br><span class="line">    hyperlink.append(new_run)</span><br><span class="line"></span><br><span class="line">    paragraph._p.append(hyperlink)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> hyperlink</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">apply_style</span>(<span class="params">paragraph, style, font_name=<span class="literal">None</span>, font_size=<span class="literal">None</span>, font_color=<span class="literal">None</span></span>):</span></span><br><span class="line">    <span class="keyword">if</span> style == <span class="string">&quot;header&quot;</span>:</span><br><span class="line">        paragraph.style.font.name = font_header_name</span><br><span class="line">        paragraph.style.font.size = font_header_size</span><br><span class="line">        paragraph.style.font.color.rgb = font_header_color</span><br><span class="line">    <span class="keyword">elif</span> style == <span class="string">&quot;chapter&quot;</span>:</span><br><span class="line">        paragraph.style.font.name = font_chapter_name</span><br><span class="line">        paragraph.style.font.size = font_chapter_size</span><br><span class="line">        paragraph.style.font.color.rgb = font_chapter_color</span><br><span class="line">    <span class="keyword">elif</span> style == <span class="string">&quot;body&quot;</span>:</span><br><span class="line">        paragraph.style.font.name = font_body_name</span><br><span class="line">        paragraph.style.font.size = font_body_size</span><br><span class="line">        paragraph.style.font.color.rgb = font_body_color</span><br><span class="line"></span><br><span class="line">    <span class="comment"># custom paragraph setting</span></span><br><span class="line">    <span class="keyword">if</span> font_name:</span><br><span class="line">        paragraph.style.font.name = font_name</span><br><span class="line">    <span class="keyword">if</span> font_size:</span><br><span class="line">        paragraph.style.font.size = font_size</span><br><span class="line">    <span class="keyword">if</span> font_color:</span><br><span class="line">        paragraph.style.font.color.rgb = font_color</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">init_doc</span>(<span class="params">title, year, authors, journal=<span class="string">&quot;&quot;</span>, volume=<span class="string">&quot;&quot;</span>, issue=<span class="string">&quot;&quot;</span>, pageRange=<span class="string">&quot;&quot;</span>, articleNo=<span class="string">&quot;&quot;</span>, doi=<span class="string">&quot;&quot;</span></span>):</span></span><br><span class="line">    <span class="comment"># Create a new Document</span></span><br><span class="line">    doc = Document()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Set title</span></span><br><span class="line">    para_title = doc.add_heading(title, <span class="number">1</span>)</span><br><span class="line">    para_title.style.font.name = font_header_name</span><br><span class="line">    para_title.style.font.size = font_header_size</span><br><span class="line">    para_title.style.font.color.rgb = font_header_color</span><br><span class="line">    insertHR(para_title, <span class="string">&quot;#808096&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Add authors and journal information</span></span><br><span class="line">    para_authors = doc.add_paragraph(style=<span class="string">&#x27;List Bullet&#x27;</span>)</span><br><span class="line">    para_authors.paragraph_format.left_indent = Inches(<span class="number">0.5</span>)</span><br><span class="line">    para_authors.style.font.name = font_body_name</span><br><span class="line">    para_authors.style.font.size = font_body_size</span><br><span class="line">    para_authors.style.font.color.rgb = font_body_color</span><br><span class="line">    run = para_authors.add_run(authors)</span><br><span class="line">    run.italic=<span class="literal">True</span></span><br><span class="line">    </span><br><span class="line">    journal_info = <span class="string">f&quot;<span class="subst">&#123;journal&#125;</span> <span class="subst">&#123;volume&#125;</span>&quot;</span></span><br><span class="line">    <span class="keyword">if</span> issue <span class="keyword">and</span> <span class="built_in">len</span>(issue) &gt; <span class="number">1</span>:</span><br><span class="line">        journal_info += <span class="string">f&quot;, (<span class="subst">&#123;issue&#125;</span>)&quot;</span></span><br><span class="line">    <span class="keyword">if</span> pageRange <span class="keyword">and</span> <span class="built_in">len</span>(pageRange) &gt; <span class="number">1</span>:</span><br><span class="line">        journal_info += <span class="string">f&quot;, <span class="subst">&#123;pageRange&#125;</span>&quot;</span></span><br><span class="line">    <span class="keyword">if</span> articleNo <span class="keyword">and</span> <span class="built_in">len</span>(articleNo) &gt; <span class="number">1</span>:</span><br><span class="line">        journal_info += <span class="string">f&quot;, <span class="subst">&#123;articleNo&#125;</span>&quot;</span></span><br><span class="line">    journal_info += <span class="string">f&quot; (<span class="subst">&#123;year&#125;</span>)&quot;</span></span><br><span class="line">    para_journal_info = doc.add_paragraph(journal_info, style=<span class="string">&quot;List Bullet&quot;</span>)</span><br><span class="line">    para_journal_info.paragraph_format.left_indent = Inches(<span class="number">0.5</span>)</span><br><span class="line">    para_journal_info.style.font.name = font_body_name</span><br><span class="line">    para_journal_info.style.font.size = font_body_size</span><br><span class="line">    para_journal_info.style.font.color.rgb = font_body_color</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="comment"># doi and link</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(doi) &gt; <span class="number">1</span> <span class="keyword">and</span> <span class="keyword">not</span> doi.startswith(<span class="string">&quot;https://doi.org/&quot;</span>):</span><br><span class="line">        doi = <span class="string">&quot;https://doi.org/&quot;</span> + doi</span><br><span class="line">    <span class="keyword">elif</span> <span class="built_in">len</span>(doi) &gt; <span class="number">1</span> <span class="keyword">and</span> doi.startswith(<span class="string">&quot;https://doi.org/&quot;</span>):</span><br><span class="line">        doi = doi</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(doi) &gt; <span class="number">1</span>:</span><br><span class="line">        para_doi = doc.add_paragraph(<span class="string">&quot;DOI: &quot;</span>, style=<span class="string">&quot;List Bullet&quot;</span>)</span><br><span class="line">        para_doi.paragraph_format.left_indent = Inches(<span class="number">0.5</span>)</span><br><span class="line">        para_doi.style.font.name = font_body_name</span><br><span class="line">        para_doi.style.font.size = font_body_size</span><br><span class="line">        para_doi.style.font.color.rgb = font_body_color</span><br><span class="line">        add_hyperlink(para_doi, doi, doi)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># empty line</span></span><br><span class="line">    run = para_doi.add_run()</span><br><span class="line">    run.add_break() </span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> doc</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">set_cell_border</span>(<span class="params">cell, **kwargs</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Set cell border</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    tc = cell._tc</span><br><span class="line">    tcPr = tc.get_or_add_tcPr()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> edge <span class="keyword">in</span> [<span class="string">&#x27;top&#x27;</span>, <span class="string">&#x27;left&#x27;</span>, <span class="string">&#x27;bottom&#x27;</span>, <span class="string">&#x27;right&#x27;</span>]:</span><br><span class="line">        edge_data = kwargs.get(edge)</span><br><span class="line">        <span class="keyword">if</span> edge_data:</span><br><span class="line">            tag = <span class="string">&#x27;w:&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(edge)</span><br><span class="line">            element = OxmlElement(tag)</span><br><span class="line">            element.<span class="built_in">set</span>(qn(<span class="string">&#x27;w:val&#x27;</span>), edge_data.get(<span class="string">&#x27;val&#x27;</span>, <span class="string">&#x27;single&#x27;</span>))</span><br><span class="line">            element.<span class="built_in">set</span>(qn(<span class="string">&#x27;w:sz&#x27;</span>), <span class="built_in">str</span>(edge_data.get(<span class="string">&#x27;sz&#x27;</span>, <span class="number">4</span>)))</span><br><span class="line">            element.<span class="built_in">set</span>(qn(<span class="string">&#x27;w:space&#x27;</span>), <span class="built_in">str</span>(edge_data.get(<span class="string">&#x27;space&#x27;</span>, <span class="number">0</span>)))</span><br><span class="line">            color = edge_data.get(<span class="string">&#x27;color&#x27;</span>, <span class="string">&#x27;auto&#x27;</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">isinstance</span>(color, <span class="built_in">tuple</span>):</span><br><span class="line">                color = <span class="string">&#x27;%02x%02x%02x&#x27;</span> % color</span><br><span class="line">            element.<span class="built_in">set</span>(qn(<span class="string">&#x27;w:color&#x27;</span>), color)</span><br><span class="line">            tcPr.append(element)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add_reference_table</span>(<span class="params">doc, references</span>):</span></span><br><span class="line">    <span class="keyword">for</span> ref <span class="keyword">in</span> references:</span><br><span class="line">        table = doc.add_table(rows=<span class="number">1</span>, cols=<span class="number">1</span>)</span><br><span class="line">        table.style = <span class="string">&#x27;Table Grid&#x27;</span></span><br><span class="line">        cell = table.cell(<span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Set cell border with gray color</span></span><br><span class="line">        gray_color = (<span class="number">128</span>, <span class="number">128</span>, <span class="number">128</span>)</span><br><span class="line">        set_cell_border(</span><br><span class="line">            cell,</span><br><span class="line">            top=&#123;<span class="string">&quot;sz&quot;</span>: <span class="number">4</span>, <span class="string">&quot;val&quot;</span>: <span class="string">&quot;single&quot;</span>, <span class="string">&quot;color&quot;</span>: gray_color&#125;,</span><br><span class="line">            bottom=&#123;<span class="string">&quot;sz&quot;</span>: <span class="number">4</span>, <span class="string">&quot;val&quot;</span>: <span class="string">&quot;single&quot;</span>, <span class="string">&quot;color&quot;</span>: gray_color&#125;,</span><br><span class="line">            start=&#123;<span class="string">&quot;sz&quot;</span>: <span class="number">4</span>, <span class="string">&quot;val&quot;</span>: <span class="string">&quot;single&quot;</span>, <span class="string">&quot;color&quot;</span>: gray_color&#125;,</span><br><span class="line">            end=&#123;<span class="string">&quot;sz&quot;</span>: <span class="number">4</span>, <span class="string">&quot;val&quot;</span>: <span class="string">&quot;single&quot;</span>, <span class="string">&quot;color&quot;</span>: gray_color&#125;</span><br><span class="line">        )</span><br><span class="line">        <span class="comment"># Add citation point</span></span><br><span class="line">        p_point = cell.paragraphs[<span class="number">0</span>]</span><br><span class="line">        run = p_point.add_run(<span class="string">f&quot;  ※ <span class="subst">&#123;ref[<span class="string">&#x27;citation point&#x27;</span>]&#125;</span>&quot;</span>)</span><br><span class="line">        p_point.style.font.name = font_body_name</span><br><span class="line">        p_point.style.font.size = font_body_size</span><br><span class="line">        <span class="comment"># p_point.style.font.color.rgb = RGBColor(64, 128, 128)</span></span><br><span class="line">        run.bold = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># Add authors</span></span><br><span class="line">        p = cell.add_paragraph(style=<span class="string">&quot;List Bullet&quot;</span>)</span><br><span class="line">        p.paragraph_format.left_indent = Inches(<span class="number">0.5</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(ref[<span class="string">&#x27;authors&#x27;</span>], <span class="built_in">list</span>):</span><br><span class="line">            ref[<span class="string">&#x27;authors&#x27;</span>] = <span class="string">&quot;, &quot;</span>.join(ref[<span class="string">&#x27;authors&#x27;</span>])</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        p.add_run(<span class="string">f&quot;<span class="subst">&#123;ref[<span class="string">&#x27;authors&#x27;</span>]&#125;</span>&quot;</span>)</span><br><span class="line">        p.style.font.name = font_body_name</span><br><span class="line">        p.style.font.size = font_body_size</span><br><span class="line">        p.style.font.color.rgb = font_body_color</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Add title</span></span><br><span class="line">        p = cell.add_paragraph(style=<span class="string">&quot;List Bullet&quot;</span>)</span><br><span class="line">        p.add_run(<span class="string">f&quot;\&quot;<span class="subst">&#123;ref[<span class="string">&#x27;title&#x27;</span>]&#125;</span>\&quot;&quot;</span>)</span><br><span class="line">        p.paragraph_format.left_indent = Inches(<span class="number">0.5</span>)</span><br><span class="line">        p.style.font.name = font_body_name</span><br><span class="line">        p.style.font.size = font_body_size</span><br><span class="line">        p.style.font.color.rgb = font_body_color</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Add journal and year</span></span><br><span class="line">        p = cell.add_paragraph(style=<span class="string">&quot;List Bullet&quot;</span>)</span><br><span class="line">        run = p.add_run(<span class="string">f&quot;<span class="subst">&#123;ref[<span class="string">&#x27;journal&#x27;</span>]&#125;</span> &quot;</span>)</span><br><span class="line">        run.italic = <span class="literal">True</span></span><br><span class="line">        p.add_run(<span class="string">f&quot;(<span class="subst">&#123;ref[<span class="string">&#x27;year&#x27;</span>]&#125;</span>). &quot;</span>)</span><br><span class="line">        p.paragraph_format.left_indent = Inches(<span class="number">0.5</span>)</span><br><span class="line">        p.style.font.name = font_body_name</span><br><span class="line">        p.style.font.size = font_body_size</span><br><span class="line">        p.style.font.color.rgb = font_body_color</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Add DOI with hyperlink</span></span><br><span class="line">        add_hyperlink(p, <span class="string">f&quot;https://doi.org/<span class="subst">&#123;ref[<span class="string">&#x27;doi&#x27;</span>]&#125;</span>&quot;</span>, ref[<span class="string">&#x27;doi&#x27;</span>])</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Add empty line</span></span><br><span class="line">        cell.add_paragraph()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> doc</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add_content</span>(<span class="params">doc, purpose, contribution_academic, contribution_industrial, method_names, method_explanations, </span></span></span><br><span class="line"><span class="params"><span class="function">                originality_names, originality_explanations, limitation_names, limitation_explanations, references</span>):</span></span><br><span class="line">    <span class="comment"># Research purpose</span></span><br><span class="line">    para = doc.add_paragraph()</span><br><span class="line">    run = para.add_run(<span class="string">&quot;1. 연구 목적&quot;</span>)</span><br><span class="line">    run.bold = <span class="literal">True</span></span><br><span class="line">    para.style.font.name = font_chapter_name</span><br><span class="line">    para.style.font.size = font_chapter_size</span><br><span class="line">    para.style.font.color.rgb = font_chapter_color</span><br><span class="line"></span><br><span class="line">    para_purpose = doc.add_paragraph(style=<span class="string">&quot;List Bullet&quot;</span>)</span><br><span class="line">    para_purpose.paragraph_format.left_indent = Inches(<span class="number">0.5</span>)</span><br><span class="line">    para_purpose.add_run(purpose)</span><br><span class="line">    apply_style(para_purpose, <span class="string">&quot;body&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Academic and Industrial Contributions</span></span><br><span class="line">    para = doc.add_paragraph()</span><br><span class="line">    run = para.add_run(<span class="string">&quot;2. 학문적 및 산업적 기여&quot;</span>)</span><br><span class="line">    run.bold = <span class="literal">True</span></span><br><span class="line">    para.style.font.name = font_chapter_name</span><br><span class="line">    para.style.font.size = font_chapter_size</span><br><span class="line">    para.style.font.color.rgb = font_chapter_color</span><br><span class="line"></span><br><span class="line">    para_contribution_academic = doc.add_paragraph(style=<span class="string">&quot;List Bullet&quot;</span>)</span><br><span class="line">    para_contribution_academic.paragraph_format.left_indent = Inches(<span class="number">0.5</span>)</span><br><span class="line">    para_contribution_academic.style.font.name = font_body_name</span><br><span class="line">    para_contribution_academic.style.font.size = font_body_size</span><br><span class="line">    para_contribution_academic.style.font.color.rgb = font_body_color</span><br><span class="line">    run = para_contribution_academic.add_run(<span class="string">&quot;학문적 기여: &quot;</span>)</span><br><span class="line">    run.bold = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">isinstance</span>(contribution_academic, <span class="built_in">list</span>):</span><br><span class="line">        para_contribution_academic.add_run(</span><br><span class="line">            *contribution_academic</span><br><span class="line">        )</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        para_contribution_academic.add_run(</span><br><span class="line">            contribution_academic</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    para_contribution_industrial = doc.add_paragraph(style=<span class="string">&quot;List Bullet&quot;</span>)</span><br><span class="line">    para_contribution_industrial.paragraph_format.left_indent = Inches(<span class="number">0.5</span>)</span><br><span class="line">    para_contribution_industrial.style.font.name = font_body_name</span><br><span class="line">    para_contribution_industrial.style.font.size = font_body_size</span><br><span class="line">    para_contribution_industrial.style.font.color.rgb = font_body_color</span><br><span class="line">    run = para_contribution_industrial.add_run(<span class="string">&quot;산업적 기여: &quot;</span>)</span><br><span class="line">    run.bold = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">isinstance</span>(contribution_industrial, <span class="built_in">list</span>):</span><br><span class="line">        para_contribution_industrial.add_run(</span><br><span class="line">            *contribution_industrial,</span><br><span class="line">        )</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        para_contribution_industrial.add_run(</span><br><span class="line">            contribution_industrial,</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Methods</span></span><br><span class="line">    para = doc.add_paragraph()</span><br><span class="line">    run = para.add_run(<span class="string">&quot;3. 방법론&quot;</span>)</span><br><span class="line">    run.bold = <span class="literal">True</span></span><br><span class="line">    para.style.font.name = font_chapter_name</span><br><span class="line">    para.style.font.size = font_chapter_size</span><br><span class="line">    para.style.font.color.rgb = font_chapter_color</span><br><span class="line">    <span class="keyword">for</span> name, expl <span class="keyword">in</span> <span class="built_in">zip</span>(method_names, method_explanations):</span><br><span class="line">        para_method = doc.add_paragraph(style=<span class="string">&quot;List Bullet&quot;</span>)</span><br><span class="line">        para_method.paragraph_format.left_indent = Inches(<span class="number">0.5</span>)</span><br><span class="line">        para_method.style.font.name = font_body_name</span><br><span class="line">        para_method.style.font.size = font_body_size</span><br><span class="line">        para_method.style.font.color.rgb = font_body_color</span><br><span class="line">        run = para_method.add_run(<span class="string">f&quot;<span class="subst">&#123;name&#125;</span>: &quot;</span>)</span><br><span class="line">        run.bold = <span class="literal">True</span></span><br><span class="line">        para_method.add_run(</span><br><span class="line">            expl</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Originality</span></span><br><span class="line">    para = doc.add_paragraph()</span><br><span class="line">    run = para.add_run(<span class="string">&quot;4. 독창성&quot;</span>)</span><br><span class="line">    run.bold = <span class="literal">True</span></span><br><span class="line">    para.style.font.name = font_chapter_name</span><br><span class="line">    para.style.font.size = font_chapter_size</span><br><span class="line">    para.style.font.color.rgb = font_chapter_color</span><br><span class="line">    <span class="keyword">for</span> name, expl <span class="keyword">in</span> <span class="built_in">zip</span>(originality_names, originality_explanations):</span><br><span class="line">        para_originality = doc.add_paragraph(style=<span class="string">&quot;List Bullet&quot;</span>)</span><br><span class="line">        para_originality.paragraph_format.left_indent = Inches(<span class="number">0.5</span>)</span><br><span class="line">        para_originality.style.font.name = font_body_name</span><br><span class="line">        para_originality.style.font.size = font_body_size</span><br><span class="line">        para_originality.style.font.color.rgb = font_body_color</span><br><span class="line">        run = para_originality.add_run(<span class="string">f&quot;<span class="subst">&#123;name&#125;</span>: &quot;</span>)</span><br><span class="line">        run.bold = <span class="literal">True</span></span><br><span class="line">        para_originality.add_run(</span><br><span class="line">            expl</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Limitation</span></span><br><span class="line">    para = doc.add_paragraph()</span><br><span class="line">    run = para.add_run(<span class="string">&quot;5. 한계점&quot;</span>)</span><br><span class="line">    run.bold = <span class="literal">True</span></span><br><span class="line">    para.style.font.name = font_chapter_name</span><br><span class="line">    para.style.font.size = font_chapter_size</span><br><span class="line">    para.style.font.color.rgb = font_chapter_color</span><br><span class="line">    <span class="keyword">for</span> name, expl <span class="keyword">in</span> <span class="built_in">zip</span>(limitation_names, limitation_explanations):</span><br><span class="line">        para_limitation = doc.add_paragraph(style=<span class="string">&quot;List Bullet&quot;</span>)</span><br><span class="line">        para_limitation.paragraph_format.left_indent = Inches(<span class="number">0.5</span>)</span><br><span class="line">        para_limitation.style.font.name = font_body_name</span><br><span class="line">        para_limitation.style.font.size = font_body_size</span><br><span class="line">        para_limitation.style.font.color.rgb = font_body_color</span><br><span class="line">        run = para_limitation.add_run(<span class="string">f&quot;<span class="subst">&#123;name&#125;</span>: &quot;</span>)</span><br><span class="line">        run.bold = <span class="literal">True</span></span><br><span class="line">        para_limitation.add_run(</span><br><span class="line">            expl</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="comment"># References</span></span><br><span class="line">    para = doc.add_paragraph()</span><br><span class="line">    run = para.add_run(<span class="string">&quot;6. 주요 레퍼런스&quot;</span>)</span><br><span class="line">    run.bold = <span class="literal">True</span></span><br><span class="line">    para.style.font.name = font_chapter_name</span><br><span class="line">    para.style.font.size = font_chapter_size</span><br><span class="line">    para.style.font.color.rgb = font_chapter_color</span><br><span class="line">    doc = add_reference_table(doc, references)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> doc</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save_doc</span>(<span class="params">doc, authors, journal, year</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Save the document</span></span><br><span class="line">    today_date = datetime.today().strftime(<span class="string">&#x27;%Y%m%d&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">isinstance</span>(authors, <span class="built_in">str</span>):</span><br><span class="line">        authors = authors.split(<span class="string">&quot;,&quot;</span>)</span><br><span class="line">    filename = <span class="string">f&quot;<span class="subst">&#123;today_date&#125;</span>_<span class="subst">&#123;authors[<span class="number">0</span>].replace(<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;&#x27;</span>)&#125;</span>_<span class="subst">&#123;journal.replace(<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;&#x27;</span>)&#125;</span>_<span class="subst">&#123;year&#125;</span>.docx&quot;</span></span><br><span class="line"></span><br><span class="line">    working_path = os.getcwd()</span><br><span class="line">    filename = os.path.join(working_path, filename)</span><br><span class="line">    doc.save(filename)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> filename</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gen_doc</span>(<span class="params">title, year, authors, journal=<span class="string">&quot;&quot;</span>, volume=<span class="string">&quot;&quot;</span>, issue=<span class="string">&quot;&quot;</span>, pageRange=<span class="string">&quot;&quot;</span>, articleNo=<span class="string">&quot;&quot;</span>, doi=<span class="string">&quot;&quot;</span>, </span></span></span><br><span class="line"><span class="params"><span class="function">            purpose=<span class="string">&quot;&quot;</span>, contribution_academic=<span class="string">&quot;&quot;</span>, contribution_industrial=<span class="string">&quot;&quot;</span>, method_names=[], method_explanations=[], </span></span></span><br><span class="line"><span class="params"><span class="function">            originality_names=[], originality_explanations=[], limitation_names=[], limitation_explanations=[], references=[]</span>):</span></span><br><span class="line">    doc = init_doc(title, year, authors, journal, volume, issue, pageRange, articleNo, doi)</span><br><span class="line">    doc = add_content(doc, purpose, contribution_academic, contribution_industrial, method_names, method_explanations, originality_names, originality_explanations, limitation_names, limitation_explanations, references)</span><br><span class="line">    filename = save_doc(doc, authors, journal, year)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Document created: <span class="subst">&#123;filename&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> filename</span><br></pre></td></tr></table></figure></li></ul><br><ul><li><b>문서를 초기화</b>하고(<code>init_doc</code>), <b>내용을 추가</b>한 후(<code>add_content</code>), <b>파일로 저장</b>하는(<code>save_doc</code>) 3단 구성입니다.</li><li><b>조금 많이 아쉬운 점</b>이 있는데, hard coding이 심하게 되어 있다는 점입니다.</li><li>사용자가 추출 프롬프트를 수정함에 따라 동적으로 반응하는 코드를 짰으면 좋았을텐데,</li><li>구성을 조금 더 체계적으로 하지 못한 탓입니다.</li><li>다음 번 작업으로 미루도록 해야겠습니다.</li></ul><ul><li><p>코드의 마지막 부분은 <b>파일명</b>을 출력하게 되어 있습니다.</p></li><li><p><code>save_doc()</code> 코드는 다음과 같습니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">def save_doc(doc, authors, journal, year):</span><br><span class="line"></span><br><span class="line">    # Save the document</span><br><span class="line">    today_date = datetime.today().strftime(&#x27;%Y%m%d&#x27;)</span><br><span class="line">    if isinstance(authors, str):</span><br><span class="line">        authors = authors.split(&quot;,&quot;)</span><br><span class="line">    filename = f&quot;&#123;today_date&#125;_&#123;authors[0].replace(&#x27; &#x27;, &#x27;&#x27;)&#125;_&#123;journal.replace(&#x27; &#x27;, &#x27;&#x27;)&#125;_&#123;year&#125;.docx&quot;</span><br><span class="line"></span><br><span class="line">    working_path = os.getcwd()</span><br><span class="line">    filename = os.path.join(working_path, filename)</span><br><span class="line">    doc.save(filename)</span><br><span class="line"></span><br><span class="line">    return filename</span><br></pre></td></tr></table></figure></li><li><p><code>filename</code>에 <code>working_path</code>를 붙이는 부분이 있는데,</p></li><li><p>종종 입력 논문은 <code>/mnt/data/</code>에 올라가는 데 반해</p></li><li><p>파일 출력은 <code>/home/sandbox/</code>에 실행해 놓고, </p></li><li><p><code>/mnt/data/</code>로 시작하는 링크를 줄 때가 생기기 때문입니다.</p></li><li><p>이러면 <b>파일을 출력했는데 다운로드 링크가 동작하지 않는 상황</b>이 되어 몹시 난감합니다.</p></li></ul><ul><li>이제 <b>GPTs Knowledge</b>에 이 코드를 올리고 실행할 차례입니다.</li><li>아래 그림과 같이 .py를 올리고 아래의 <b>Code Interpreter &amp; Data Analysis</b>를 체크합니다.<br></li></ul><p><img src="59_paperbot2_06.png"></p><ul><li>이제 프롬프트에 파일 출력시 이 코드를 실행하라고 하면 될 것 같은데,</li><li><b>제대로 안 돌아갑니다.</b></li><li>오작동인지 알 수 없으나 경험상 50% 이상의 확률로 실행되지 않습니다.</li><li><b>PDF를 찾기 전에는 잘 읽던 .py 파일을 PDF를 읽은 뒤엔 못 찾습니다.</b></li><li>대신, .py 대신 <b>.whl</b>(<a href="paperbot-0.13-py3-none-any.whl">다운로드</a>)로 만들어 올리면 잘 동작합니다.</li></ul><p><img src="59_paperbot2_07.png"></p><ul><li>이제 프롬프트를 여기에 맞게 수정합니다.</li><li>.whl 파일을 설치하고 실행하도록 코드를 적어줍니다.<br></li></ul><p><img src="59_paperbot2_08.png" alt="클릭하면 커집니다"></p><h1 id="3-테스트"><a href="#3-테스트" class="headerlink" title="3. 테스트"></a>3. 테스트</h1><ul><li>논문봇에 2010년 논문을 한 편 넣어봅니다.</li><li>자율화실험실(autonomous lab)의 선조격인 논문입니다.<br></li></ul><p><img src="59_paperbot2_11.png"></p><ul><li>논문봇이 <b>정상적으로 .docx 파일을 출력</b>했고 ([다운로드],(20240819_AndrewSparkes_AutomatedExperimentation_2010.docx))</li><li><b>보고서 구성</b>은 다음과 같습니다.</li></ul><p><img src="59_paperbot2_09.png"><br><img src="59_paperbot2_10.png"></p><ul><li>한 논문을 여러 차례 입력해도,</li><li>다른 논문들을 차례차례 입력해도 <b>형식 재현성이 확보</b>되었습니다.</li></ul><p><img src="59_paperbot2_12.png" alt="클릭하면 커집니다"></p>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/General/">General</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/chatgpt/">chatgpt</category>
      
      <category domain="https://jehyunlee.github.io/tags/RAG/">RAG</category>
      
      <category domain="https://jehyunlee.github.io/tags/pyhon/">pyhon</category>
      
      
    </item>
    
    <item>
      <title>INNOPOLIS SPACE-S Meet-up Day AI를 활용한 논문작성법</title>
      <link>https://jehyunlee.github.io/2024/08/13/General-64_innopolismeetupday/</link>
      <guid>https://jehyunlee.github.io/2024/08/13/General-64_innopolismeetupday/</guid>
      <pubDate>Mon, 12 Aug 2024 23:48:00 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;지난 8월 13일 대전에 위치한 INNOPOLIS SPACE-S에서 열린 Meet-up Day에서 발표를 드렸습니다.&lt;/li&gt;
&lt;li&gt;AI를 활용한 논문 작성법이라는 제목으로 여러 도구를 소개해드리는 재능기부 강연이었습니다.&lt;/li&gt;
</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>지난 8월 13일 대전에 위치한 INNOPOLIS SPACE-S에서 열린 Meet-up Day에서 발표를 드렸습니다.</li><li>AI를 활용한 논문 작성법이라는 제목으로 여러 도구를 소개해드리는 재능기부 강연이었습니다.</li><li>유튜브 업데이트가 늦어 (2024.10.23.) 다소 늦은 감이 있지만 지금이라도 공유드립니다.</li></ul><div class="video-container"><iframe src="https://www.youtube.com/embed/PcOXDd78TxM" frameborder="0" loading="lazy" allowfullscreen></iframe></div><p><img src="innopolismeetupday_01.jpg" alt="제 10회 INNOPOLIS Meet-up Day"></p>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/General/">General</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/chatgpt/">chatgpt</category>
      
      <category domain="https://jehyunlee.github.io/tags/presentation/">presentation</category>
      
      
    </item>
    
    <item>
      <title>데이터 분석용 GPTs - 플랏봇</title>
      <link>https://jehyunlee.github.io/2024/08/11/General-58-plotbot/</link>
      <guid>https://jehyunlee.github.io/2024/08/11/General-58-plotbot/</guid>
      <pubDate>Sat, 10 Aug 2024 23:23:00 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;custom GPT에는 Knowledge라는 옵션이 있습니다.&lt;/li&gt;
&lt;li&gt;대개 PDF 문서들을 올리고 질문에 대한 답을 찾게 하는 데 쓰입니다.&lt;/li&gt;
&lt;li&gt;여기 라이브러리를 올려서 한글 시각화 문제를 해결할 수 있습니다.&lt;/</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>custom GPT에는 Knowledge라는 옵션이 있습니다.</li><li>대개 PDF 문서들을 올리고 질문에 대한 답을 찾게 하는 데 쓰입니다.</li><li>여기 라이브러리를 올려서 한글 시각화 문제를 해결할 수 있습니다.</li></ul><h1 id="1-ChatGPT의-데이터-분석-기능"><a href="#1-ChatGPT의-데이터-분석-기능" class="headerlink" title="1. ChatGPT의 데이터 분석 기능"></a>1. ChatGPT의 데이터 분석 기능</h1><blockquote><p><a href="https://jehyunlee.github.io/2023/12/25/General-33-ChatGPT_DataAnalysis/">Pega Devlog: ChatGPT로 한글과 한자가 적힌 카드 만들기</a><br><a href="https://jehyunlee.github.io/2024/02/11/General-41_dakorean/">Pega Devlog: ChatGPT Data Analysis 시각화 한글 사용</a></p></blockquote><ul><li>ChatGPT에서 제공하는 <b>데이터 분석 기능</b>은 매우 유용합니다.</li><li>통계 분석이나 머신 러닝, 그래프 작성 코드를 몰라도 됩니다.</li><li>데이터를 올리고 몇 마디 지시를 하는 것 만으로 몇달치 학원비가 절약됩니다.</li></ul><ul><li>그러나 한글이 그림에 들어가면 깨집니다.</li><li>서버에 <b>한글 글꼴 설치와 사용 설정이 되어있지 않은 탓</b>입니다.</li><li>ChatGPT에 <a href="https://jehyunlee.github.io/2023/12/25/General-33-ChatGPT_DataAnalysis/">글꼴</a>이나 <a href="https://jehyunlee.github.io/2024/02/11/General-41_dakorean/">라이브러리</a>를 올려서 사용할 수 있습니다.</li></ul><p><img src="https://jehyunlee.github.io/2024/02/11/General-41_dakorean/41_dakorean_10.png" alt="Pega Devlog: ChatGPT Data Analysis 시각화 한글 사용"><br></p><ul><li>그런데 이 것도 그때그때 하려면 귀찮습니다.</li><li>custom GPT를 만들어 사용합시다.</li></ul><h1 id="2-custom-GPT-작성"><a href="#2-custom-GPT-작성" class="headerlink" title="2. custom GPT 작성"></a>2. custom GPT 작성</h1><h2 id="2-1-Knowledge"><a href="#2-1-Knowledge" class="headerlink" title="2.1. Knowledge"></a>2.1. Knowledge</h2><blockquote><p><a href="https://jehyunlee.github.io/2024/06/19/General-56-customgpt/">Pega Devlog: 연구용 GPT 만들기 - 논문봇 등</a><br><a href="https://pypi.org/project/koreanize-matplotlib/">pypi: Koreanize-Matplotlib</a><br><a href="https://pypi.org/project/adjustText/">pypi: adjustText</a></p></blockquote><ul><li>custom GPT에는 사전 프롬프트에 해당하는 <b>instructions</b>를 넣을 수 있습니다.</li><li>그리고 그 밖에도 <b>Knowledge</b>를 입력할 수 있습니다.</li></ul><ul><li><b>Capabilities</b>에서 <b>Code Interpreter &amp; Data Analysis</b>를 켜고</li><li>데이터 분석에 필요한 라이브러리들을 Knowledge에 올리면,</li><li>데이터 분석을 할 때 <b>미리 올려둔 라이브러리를 설치</b>하게 할 수 있습니다.</li></ul><ul><li>한글을 사용하게 해 주는 <a href="https://pypi.org/project/koreanize-matplotlib/"><b>Koreanize-Matplotlib</b></a>과 함께 <b>맑은고딕 폰트</b>를 올립니다.</li><li>그리고 종종 글자가 밀집되어 있을 때 이를 해소해주는 <a href="https://pypi.org/project/adjustText/"><b>adjustText</b></a>를 함께 올립니다.</li></ul><p><img src="58_plotbot_01.png"><br></p><h2 id="2-2-Instructions"><a href="#2-2-Instructions" class="headerlink" title="2.2. Instructions"></a>2.2. Instructions</h2><blockquote><p><a href="https://chatgpt.com/g/g-z8NpgTS0D-ddanjibos"><b>Jehyun Lee: 딴지봇</b></a><br><a href="https://chatgpt.com/g/g-a5T4ptvz6-mulseongbos"><b>Jehyun Lee: 물성봇</b></a><br><a href="https://chatgpt.com/g/g-CPDHsnGd4-nonmunbos"><b>Jehyun Lee: 논문봇</b></a><br><a href="https://chatgpt.com/g/g-QQxEn0acO-peulrasbos"><b>Jehyun Lee: 플랏봇</b></a></p></blockquote><ul><li><p>데이터 분석에 충실하도록 지시문을 입력합니다.</p></li><li><p><b>네 멋대로 그리지 말고</b>, <b>올린 라이브러리 잘 써라</b>가 주된 내용입니다.</p></li><li><p>여기에 덧붙여 그래프에 자주 그리는 스타일을 설정합니다.</p></li><li><p>ChatGPT의 주무기는 <b>Python</b>과 <b>Matplotlib</b>입니다.</p></li><li><p>관련된 설정을 가지고 있는 지식으로 먹입니다.</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">Step <span class="number">1</span>: 절대로 가상의 데이터로 작업하지 마.</span><br><span class="line">- 그래프를 그려달라는 요청을 받으면 데이터를 함께 받았는지 반드시 확인해. 무조건 확인해. 절대로 곧장 그리지 마.</span><br><span class="line">- 데이터를 받지 않았으면 데이터를 달라고 요구해.</span><br><span class="line">- 지시가 없으면 절대로 가상의 데이터를 만들어 그리지 마.</span><br><span class="line">- 데이터를 요청하고, 없으면 인터넷 검색을 할지 물어봐.</span><br><span class="line">- 사용자가 동의하면 인터넷 검색을 해서 데이터를 확보하고 출처를 밝힌 다음에 그래프 작성을 시작해.</span><br><span class="line"></span><br><span class="line">Step <span class="number">2.</span> 인터넷에서 데이터를 가져왔다면, 데이터를 가져온 출처(reference, URL)를 밝히고 나서 그래프를 그려.</span><br><span class="line">- 출처를 명시하기 전에는 절대로 그래프를 그리지 마.</span><br><span class="line"></span><br><span class="line">Step <span class="number">3.</span> 그래프를 그리기 전에 <span class="string">&quot;한글 출력을 위한 라이브러리를 설치하고 있습니다. 조금만 기다려 주세요&quot;</span> 라고 화면에 출력한 후, 다음 코드를 실행해서 첨부된 <span class="string">&quot;koreanize_matplotlib&quot;</span> 라이브러리를 설치해.</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">import subprocess</span></span><br><span class="line"><span class="string">subprocess. Run([&quot;pip&quot;, &quot;install&quot;, &quot;/mnt/data/koreanize_matplotlib-0.1.1-py3-none-any.whl&quot;])</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">Step <span class="number">4.</span> 그래프를 그릴 때는 아래 사항을 반영해서 코드를 작성해.</span><br><span class="line">* Figure size: (<span class="number">5</span>, <span class="number">5</span>) inches</span><br><span class="line">* title font style: <span class="string">&quot;bold&quot;</span></span><br><span class="line">* line color, edgecolor, mec : <span class="string">&quot;AAAAFF&quot;</span></span><br><span class="line">* line width, edgewidth, mew: <span class="number">2</span></span><br><span class="line">* facecolor, mfc : <span class="string">&quot;FFFFAA&quot;</span></span><br><span class="line">* colormap: <span class="string">&quot;husl&quot;</span></span><br><span class="line">* 막대그래프의 면 색에는 facecolor, line plot의 marker에는 mfc 속성을 조정해야 해.</span><br><span class="line">* <span class="string">&quot;graphvis&quot;</span>나 <span class="string">&quot;NetworkX&quot;</span> 라이브러리를 쓰겠다(<span class="keyword">import</span> graphviz, <span class="keyword">import</span> networkx)고 판단되거나 <span class="string">&quot;한글 폰트를 사용하라&quot;</span>는 명령이 있으면, 첨부된 <span class="string">&quot;malgun.ttf&quot;</span>를 explicit하게 적용해서 한글을 구현해.</span><br><span class="line"></span><br><span class="line">Step <span class="number">5.</span> plot을 마친 후에는 spine 설정을 수정해.</span><br><span class="line">* Spine 범위: <span class="string">&quot;bottom&quot;</span>, <span class="string">&quot;left&quot;</span>, <span class="string">&quot;top&quot;</span>, <span class="string">&quot;right&quot;</span>을 모두 보이도록 수정.</span><br><span class="line">* Spine linewidth: <span class="number">2</span></span><br><span class="line">* Spine color: <span class="string">&quot;gray&quot;</span></span><br><span class="line"></span><br><span class="line">Step <span class="number">5.</span> 지시를 받으면 text 위치를 움직여</span><br><span class="line"><span class="string">&quot;글자를 겹치지 않게 움직여&quot;</span> 라는 명령을 받으면 첨부된 <span class="string">&quot;adjustText&quot;</span> 라이브러리를 설치하고 적용해서 다시 그려.</span><br></pre></td></tr></table></figure><ul><li><b>Step 4</b>와 <b>Step 5</b>에 전문적인 명칭들이 나옵니다.</li><li>Matplotlib의 구성 요소를 정확히 지시함으로써 디테일한 지시를 내리는 과정입니다.</li><li>그러나 <b>명심할 사항</b>이 있습니다.</li><li>GPT, 특히 웹 버전의 특성상 <b>저 지시가 언제나 100% 의도대로 적용되지는 않습니다.</b></li><li>종종 일을 하다 마는데, 그럴 때면 차분하게 다시 지시를 내리면 됩니다.</li></ul><ul><li>이렇게 만들어진 custom GPT에 <b>플랏봇(plotbot)</b>이라는 이름을 붙였습니다.(<a href="https://chatgpt.com/g/g-QQxEn0acO-peulrasbos">링크</a>)</li><li>영문으로 지어도 되겠지만, 전에 만들었던 <a href="https://chatgpt.com/g/g-z8NpgTS0D-ddanjibos"><b>딴지봇</b></a>, <a href="https://chatgpt.com/g/g-a5T4ptvz6-mulseongbos"><b>물성봇</b></a>, <a href="https://chatgpt.com/g/g-CPDHsnGd4-nonmunbos"><b>논문봇</b></a>의 계보를 잇는 이름입니다.</li></ul><p><img src="58_plotbot_02.png" alt="플랏봇 실행화면"></p><ul><li>그렇지만 <b>데이터 시각화는 여전히 잔손이 많이 가는 일입니다.</b></li><li>몇 가지 성가심은 해결되었지만 목적에 맞는 그림을 그리기 위해서는 <b>결과물과 의도를 끊임없이 비교 대조</b>해야 하며, 부족하다 싶으면 <b>추가 지시</b>를 해야 합니다.</li><li>코딩이 프롬프트로 바뀌었을 따름입니다.</li></ul><h1 id="3-플랏봇-사용"><a href="#3-플랏봇-사용" class="headerlink" title="3. 플랏봇 사용"></a>3. 플랏봇 사용</h1><h2 id="3-1-출생아수-동향"><a href="#3-1-출생아수-동향" class="headerlink" title="3.1. 출생아수 동향"></a>3.1. 출생아수 동향</h2><blockquote><p><a href="https://jehyunlee.github.io/2021/03/27/Python-DS-64-kr_pop_sn/">Pega Devlog: Visualization with Messages</a></p></blockquote><ul><li>과거 사용했던 년도별 출생아 수 데이터를 플랏봇으로 시각화합니다.</li><li>통계청에서 받은 데이터를 전처리해 두었습니다. (<a href="%ED%95%9C%EA%B5%AD%EC%B6%9C%EC%83%9D%EC%95%84%EC%88%981970-2023_%EC%A0%84%EC%B2%98%EB%A6%AC.xlsx">데이터 링크</a>)</li></ul><p><img src="58_plotbot_03.png"><br></p><ul><li><b>“1970년부터 2023년까지 출생아 수를 그려줘”</b>라는 요청에, <b>“데이터를 제공해 주시겠습니까? 없으면 인터넷 검색을 할까요?”</b> 라고 묻습니다.</li><li>인터넷 검색을 시킬 수도 있지만 부정확한 데이터를 내려받기도 합니다.</li><li>통계청에서 제대로 받은 데이터를 올려서 사용하라고 했습니다.</li></ul><ul><li>사전 지시에 따라 <b>“한글 출력을 위한 라이브러리를 설치하고 있다. 조금만 기다려 달라”</b>는 메시지를 출력합니다.</li><li>잠시 후, 설정에 따라 Figure size = (5, 5)이며 테두리는 회색인 그래프가 그려집니다.</li><li>선 색도 기본색과 달리 사전에 지정한 밝은 파랑(<code>#AAAAFF</code>)이 적용되었습니다.</li><li>고질적 문제인 <b>한글 출력도 깔끔하게 됩니다.</b></li></ul><p><img src="58_plotbot_04.png"><br></p><ul><li>그러나 <b>모든 지시가 온전히 반영되지 않았습니다.</b></li><li>네 테두리를 모두 그리라는 지시가 누락된 것입니다.</li><li>괜찮으면 괜찮은대로 두고, 빼먹었으면 아쉬운대로 추가 지시를 합니다.</li></ul><p><img src="58_plotbot_05.png"><br></p><ul><li>누락된 테두리가 뒤늦게나마 반영되었습니다.</li><li>y축을 조금 더 알아보기 좋게 수정 지정합니다.</li></ul><p><img src="58_plotbot_06.png"><br></p><ul><li>1970년대 초 한 해 백만명이 넘게 태어나던 아이들이 2000년도를 넘어서며 50만명 밑으로,</li><li>그나마도 2020년대를 넘어서며 20만명대로 추락하는 모습이 잘 드러납니다.</li></ul><ul><li>GPT 분석의 장점 중 하나는 <b>데이터 취합</b>과 <b>출력 형식 변환</b>이 편리하다는 점입니다.</li><li>10년 단위로 데이터를 묶어 막대 그래프로 표현해봅니다.</li><li>y축 범위가 크게 움직일 것이 자명하므로 관련된 지시도 함께 내립니다.</li></ul><p><img src="58_plotbot_07.png"><br></p><ul><li>facecolor도 미리 지시한대로 잘 들어갔네요(<code>#FFFFAA</code>)</li><li>x축 눈금 레이블(<code>xticklabels</code>)이 겹쳐 함께 조정했습니다.</li><li>최종적으로 <b>제목</b>, <b>y축 범위</b>와 <b>테두리</b>에 추가 지시를 내려 수정하면서 완료되었습니다.</li></ul><p><img src="58_plotbot_08.png"><br></p><h2 id="3-2-Gapminder"><a href="#3-2-Gapminder" class="headerlink" title="3.2. Gapminder"></a>3.2. Gapminder</h2><blockquote><p><a href="https://www.gapminder.org/">Gapminder</a></p></blockquote><ul><li>두 번째 예시는 <b>Gapminder</b>에서 가져온 <b>국가별 1인당 GDP</b>, <b>기대 소득</b>, <b>인구</b> 버블 차트입니다.</li></ul><p><img src="58_plotbot_09.png"><br></p><ul><li>마찬가지로 <a href="https://chatgpt.com/g/g-QQxEn0acO-peulrasbos"><b>플랏봇</b></a>을 실행합니다. </li><li><b>“2022년도 국가별 인당 GDP와 기대 수명의 관계를 bubble chart로 그리고 싶다”</b>고 주문합니다.</li><li>지시대로 데이터를 요구하며, 준비해 둔 <b>전처리 데이터</b>(<a href="%EA%B5%AD%EA%B0%80_%EA%B8%B0%EB%8C%80%EC%88%98%EB%AA%85_%EC%9D%B8%EA%B5%AC_%EC%9D%B8%EB%8B%B9GDP_%EB%B3%91%ED%95%A9_2022_%EB%8C%80%EB%A5%99.csv">링크</a>)를 보내줍니다.</li><li>원작과 같은 대륙별 컬러링을 위해 국가별 대륙명까지 붙인 데이터입니다.</li></ul><p><img src="58_plotbot_10.png"><br></p><ul><li>데이터를 받아서 작업을 하지만 한 번에 깔끔하게 되지는 않습니다.</li><li>왠지 모르겠지만 <b>올려준 라이브러리를 종종 찾지 못하는 일이 있습니다.</b></li><li>그래도 기특하게 계속 다시 시도를 하고, 코딩도 다시 하면서 해냅니다.</li></ul><p><img src="58_plotbot_11.png"><br></p><ul><li>Bubble Chart를 그렸지만 marker를 O 대신 X를 사용해서 기대했던 그림은 아닙니다.</li><li>수정 지시를 하면 되는 문제이지만, <b>더 큰 위험은 제가 bubble size를 지시한 적이 없다는 것</b>입니다.</li><li>올바른 데이터를 사용했는지 확인하고, 다행히 잘 했으니 그림 수정에 들어갑니다.</li></ul><p><img src="58_plotbot_12.png"><br></p><ul><li>기본적인 틀이 갖춰졌습니다.</li><li><b>디테일</b>을 손보기 시작합니다.</li></ul><p><img src="58_plotbot_13.png"><br></p><ul><li>버블들이 너무 위쪽으로 몰려 있습니다.</li><li>데이터를 어디까지 조정할 수 있나 확인합니다.</li><li>y축에 해당하는 <b>“기대 수명의 최소값이 얼마인지”</b>를 물어봅니다. 0이라네요.</li><li>뭔가 잘못된 것 같지만 대세에는 지장이 없으므로 그 외를 물어봅니다. <b>50.7</b>이라고 합니다.</li><li>그래프의 최소값을 50으로 변경하도록 지시합니다.</li></ul><p><img src="58_plotbot_14.png"><br></p><ul><li>여기까지 그린 그림을 내려받아 봅니다.</li><li>우측 상단에 <b>국가 이름들이 많이 겹쳤습니다.</b></li><li><b>OECD</b> 국가들이다 보니 GDP도 높고 기대 수명도 높아 필연적인 현상일 것입니다.</li></ul><p><img src="58_plotbot_15.png"><br></p><ul><li>이럴 때를 대비해서 해당 라이브러리를 올려두었습니다.</li><li><b>“텍스트 위치를 겹치지 않게 조정해달라”</b>는 말 한마디로 실행됩니다.</li></ul><p><img src="58_plotbot_16.png"><br></p><ul><li>너무 밀접하게 모여있다 보니 어디를 가리키는지 명확치 않습니다.</li><li><b>“이름이 속한 bubble과 국가명 사이를 검은 실선로 연결해 달라”</b>고도 추가 지시했습니다.</li><li>파일을 내려받아 확인합니다.</li><li>나라 이름들이 조금씩 움직이면서 겹치지 않도록 조정되었습니다.</li></ul><p><img src="58_plotbot_17.png"><br></p><ul><li>여기에 <b>“China, India, Vietnam 추가”</b>, <b>“Text 가운데 정렬”</b>을 지시한 후, 제목을 <b>“인당 GDP vs 기대 수명 (2022) @GapMinder”</b>로 수정 지시했습니다.</li><li>최종적으로 <b>아프리카 신흥국들</b>이 잘 드러나지 않는 것을 확인하고 Top 5를 선정하여 추가하라고 지시합니다.</li></ul><p><img src="58_plotbot_18.png"><br></p><ul><li>ChatGPT가 작성한 코드를 본 글에서는 드러내지 않았습니다만 파이썬 시각화를 공부해서 일일이 구현하기에는 적지 않은 수고가 필요한 작업입니다.</li><li>다행히 프롬프트만으로 복잡한 기능을 구현할 수 있으므로 기술적 장벽이 많이 낮아졌습니다. </li></ul><ul><li>이와 같은 과정을 거쳐 받은 그래프는 다음과 같습니다.</li></ul><p><img src="58_plotbot_19.png"><br></p><h1 id="4-환각-데이터-누락"><a href="#4-환각-데이터-누락" class="headerlink" title="4. 환각 - 데이터 누락"></a>4. 환각 - 데이터 누락</h1><blockquote><p><a href="https://www.youtube.com/watch?v=vPRzjcOYJA0&pp=ygUW642w7J207YSw7ZmA66atIO2ZmOqwgQ==">데이터홀릭: ChatGPT만 믿고 데이터 분석하다 망했어요!</a><br><a href="https://en.wikipedia.org/wiki/OECD">wikipedia: OECD</a></p></blockquote><ul><li>ChatGPT의 데이터 분석 기능에도 <b>환각</b>이 있습니다.</li><li>경험상 없는 데이터를 만들다기보다 <b>있는 데이터를 빠트리는 경향</b>이 있습니다.</li><li><a href="https://www.youtube.com/watch?v=vPRzjcOYJA0&pp=ygUW642w7J207YSw7ZmA66atIO2ZmOqwgQ==">데이터홀릭</a> 팟캐스트에서 관련 이슈를 진지하게 다룬 적도 있고요.</li></ul><ul><li>예를 들어 위 Gapminder 예시에서 <b>OECD국가들의 이름</b>을 넣으라고 했는데, 상당수가 빠져 있습니다.</li><li>다 넣을 필요는 없겠지만 <b>상사 또는 고객이 이 결과를 본다</b>고 생각합시다.</li><li>이 분들께서 체크할 항목을 미리 찾아 넣을 필요가 있습니다.</li></ul><p><img src="58_plotbot_20.png"><br></p><ul><li>저도 위 대화를 만들어 놓고, 화면을 캡처해가며 이 글을 쓰다가 데이터 누락을 알았습니다.</li><li>대화를 오랫동안 쉬었더니 서버가 초기화되었나봅니다.</li><li>그래도 <b>플랏봇</b>에는 주요 라이브러리가 올라가 있어서 다시 올리는 수고는 덜었습니다.</li></ul><ul><li>마지막으로 검토와 데이터 보완을 거쳐 수정된 그림은 다음과 같습니다.</li></ul><p><img src="58_plotbot_21.png"><br></p><ul><li>데이터 분석은 어떻게 해도 품이 많이 드는 일입니다.</li><li>여기까지 읽어주시는 것만 해도 보통 일은 아니었을 것입니다.</li><li>글을 읽어주신 분들께 모두 감사드립니다.</li></ul>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/General/">General</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/python/">python</category>
      
      <category domain="https://jehyunlee.github.io/tags/chatgpt/">chatgpt</category>
      
      <category domain="https://jehyunlee.github.io/tags/matplotlib/">matplotlib</category>
      
      <category domain="https://jehyunlee.github.io/tags/visualization/">visualization</category>
      
      
    </item>
    
    <item>
      <title>KIRD - RnD 수행시 생성 AI를 현명하게 활용하는 방법</title>
      <link>https://jehyunlee.github.io/2024/07/16/General-57-kirdalphacampus/</link>
      <guid>https://jehyunlee.github.io/2024/07/16/General-57-kirdalphacampus/</guid>
      <pubDate>Tue, 16 Jul 2024 08:49:00 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;contributor: KIRD 박수진, 지상현, 박혜선&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;국가과학기술인력개발원(KIRD)에서 재미있는 시도를 많이 하고 있습니다.&lt;/li&gt;
&lt;li&gt;알파캠퍼스 지식웨미나라는 이</description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p>contributor: KIRD 박수진, 지상현, 박혜선</p></blockquote><ul><li>국가과학기술인력개발원(KIRD)에서 재미있는 시도를 많이 하고 있습니다.</li><li>알파캠퍼스 지식웨미나라는 이름으로 다양한 강연을 제공하는데,</li><li><b>R&amp;D수행 시 생성AI를 ‘현명하게’ 활용하는 방법</b>이라는 제목으로 함께 할 기회가 있었습니다.</li></ul><h1 id="1-사전인터뷰"><a href="#1-사전인터뷰" class="headerlink" title="1. 사전인터뷰"></a>1. 사전인터뷰</h1><ul><li>행사를 준비하시는 분들께서 연구원에 찾아오셨습니다.</li><li>몇 가지 준비해오신 질문을 시작으로 이야기를 나누었고, </li><li>재미있는 컨셉으로 <b>사전 영상</b>을 촬영했습니다.</li></ul><div class="video-container"><iframe src="https://www.youtube.com/embed/Zu2kd7_R6U0" frameborder="0" loading="lazy" allowfullscreen></iframe></div><ul><li>그 과정에서 만들어 쓰고 있는 <b>딴지봇</b>이 영상으로 공개되기도 했습니다.</li><li><b>무슨 말을 하건 논리적인 허점을 찾아서 까칠하게 답을 하도록 한 녀석인데,</b></li><li>예를 들면 이런 식입니다.<br></li></ul><p><img src="57_kirdalphacampus_03.png"><br></p><ul><li>예고 영상을 기획하다가 딴지봇에게 도발적으로 물어보자는 의견이 나왔습니다.</li><li>입력을 했더니 역시나 딴지봇스러운 답을 받아 예고 영상에 들어갔습니다.<br></li></ul><p><img src="57_kirdalphacampus_01.png"><br></p><ul><li>딴지봇의 매력을 느끼고 싶으신 분은 <b>아래를 클릭</b>해보시길 바랍니다. :)<br><a href="https://chatgpt.com/g/g-z8NpgTS0D-ddanjibos">* 딴지봇 링크</a><br><a href="ddanjibot.jpg">* 딴지봇 답변 원문 캡처</a></li></ul><h1 id="2-방송"><a href="#2-방송" class="headerlink" title="2. 방송"></a>2. 방송</h1><ul><li>오창캠퍼스에 도착해 제공해 주신 저녁을 먹고 간단한 메이크업 후 촬영을 했습니다.</li><li>박수진님께서 준비를 잘 해 주셨고,</li><li>지상현, 박혜선 두 박사님들께서 잘 이끌어주신 덕에 편안하게 발표를 진행했습니다.<br></li></ul><div class="video-container"><iframe src="https://www.youtube.com/embed/Ex-D62hb2eM" frameborder="0" loading="lazy" allowfullscreen></iframe></div><ul><li><b>사전 질문</b>도 모아서 주신 덕택에 발표 중간에 조금씩 말씀을 드릴 수 있었고,</li><li>발표 후에 이어진 <b>live 질의응답 세션</b>도 재미있었습니다.</li><li>그러나 시간 관계상 모든 사전질문에 답을 드릴 수 없었습니다.</li><li>본 글을 빌려 당시 준비해 간 사전 질문 답변 슬라이드를 공유드립니다.<br></li></ul><p><img src="57_kirdalphacampus_04.png"><br><img src="57_kirdalphacampus_05.png"><br><img src="57_kirdalphacampus_06.png"><br><img src="57_kirdalphacampus_07.png"><br></p><h1 id="3-결언"><a href="#3-결언" class="headerlink" title="3. 결언"></a>3. 결언</h1><ul><li>이런 자리에서는 발표자가 주목을 받지만, 발표자 혼자 만드는 자리가 아닙니다.</li><li>많은 분들께서 보이지 않은 노력을 엄청나게 해야 비로소 볼만한 발표가 된다는 것을 많이 느낍니다.</li><li>좋은 자리를 만들어주신 KIRD에 감사드립니다.<br></li></ul><p><img src="57_kirdalphacampus_08.jpg"><br></p>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/General/">General</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/CHATGPT/">CHATGPT</category>
      
      <category domain="https://jehyunlee.github.io/tags/DALL-E/">DALL.E</category>
      
      <category domain="https://jehyunlee.github.io/tags/DATA-ANALYSIS/">DATA ANALYSIS</category>
      
      <category domain="https://jehyunlee.github.io/tags/OPENAI/">OPENAI</category>
      
      
    </item>
    
    <item>
      <title>연구용 GPT 만들기 - 논문봇 등</title>
      <link>https://jehyunlee.github.io/2024/06/19/General-56-customgpt/</link>
      <guid>https://jehyunlee.github.io/2024/06/19/General-56-customgpt/</guid>
      <pubDate>Wed, 19 Jun 2024 10:20:00 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;2023년 11월, OpenAI는 custom GPT라는 서비스를 공개합니다.&lt;/li&gt;
&lt;li&gt;사용자가 시스템 프롬프트와 사전지식을 제공해 맞춤형 서비스를 만들 수 있게 한 것입니다.&lt;/li&gt;
&lt;li&gt;연구원으로서 연구에 활용할 수 있는</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>2023년 11월, OpenAI는 custom GPT라는 서비스를 공개합니다.</li><li>사용자가 시스템 프롬프트와 사전지식을 제공해 맞춤형 서비스를 만들 수 있게 한 것입니다.</li><li>연구원으로서 연구에 활용할 수 있는 맞춤형 GPT들을 만들어 공개합니다.</li></ul><blockquote><p><a href="https://chatgpt.com/g/g-z8NpgTS0D-ddanjibos">딴지봇</a><br><a href="https://chatgpt.com/g/g-a5T4ptvz6-materials-data-extractor">Materials Data Extractor</a><br><a href="https://chatgpt.com/g/g-CPDHsnGd4-nonmunbos">논문봇</a></p></blockquote><h1 id="1-ChatGPT-반복작업"><a href="#1-ChatGPT-반복작업" class="headerlink" title="1. ChatGPT 반복작업"></a>1. ChatGPT 반복작업</h1><blockquote><p><a href="https://chatgpt.com/">ChatGPT</a></p></blockquote><ul><li>대학원생을 포함해 연구직에 있는 많은 이들이 논문을 읽느라 시간을 씁니다.</li><li>연차가 쌓이면서 자기 분야에 대해서는 상당히 익숙해지기도 하지만,</li><li>다른 분야의 논문을 읽어야 하거나 자기 분야라도 논문을 갑자기 많이 읽으려면 쉽지 않습니다.</li><li>ChatGPT를 비롯한 생성 AI 도구들에 논문을 올리고 도움을 처할 수 있는 기술은 구원이 됩니다.</li></ul><ul><li><b>그렇다고 AI에만 의존해서 내용을 파악하면 곤란합니다.</b></li><li>AI에 요약시킨 초록은 디테일이 생략되고 독창성이 사라지는 경우가 많습니다.</li><li><b>AI로 논문의 포인트를 잡고 정독을 하며 디테일을 챙기는 것이 좋습니다.</b></li><li>그런 의미에서 논문을 읽기 전에 다음과 같은 주요 사항을 파악하면 좋습니다.<br></li></ul><p><img src="56_customgpt_01.png"><br></p><ul><li>위와 같은 절차를 거쳐 얻어낸 파일은 다음과 같은 내용을 담고 있습니다.</li><li>화면에 찍혔다가 사라지는 화면이 아니라 파일로 남기 때문에 <b>축적</b>에 유리하며</li><li>자유롭게 수정이 가능하기 때문에 논문을 읽으면서 챙기는 <b>디테일 추가</b>도 가능합니다.<br></li></ul><p><img src="56_customgpt_02.png"><br></p><ul><li>문제는 <b>프롬프트가 적잖이 길다는 점</b>,</li><li>그리고 이렇게 <b>읽어야 할 논문이 많다는 점</b>입니다.</li><li>프롬프팅이 반복작업이 되어서는 곤란합니다.</li><li>같은 프롬프트를 자동으로 입력할 시스템이 필요합니다.</li></ul><h1 id="2-GPTs-만들기"><a href="#2-GPTs-만들기" class="headerlink" title="2. GPTs 만들기"></a>2. GPTs 만들기</h1><h2 id="2-1-GPTs-Instructions"><a href="#2-1-GPTs-Instructions" class="headerlink" title="2.1. GPTs Instructions"></a>2.1. GPTs Instructions</h2><blockquote><p><a href="https://chatgpt.com/gpts">ChatGPT: GPTs</a><br><a href="https://chatgpt.com/g/g-z8NpgTS0D-ddanjibos">custom GPT: 딴지봇</a></p></blockquote><ul><li><a href="https://chatgpt.com/gpts">GPTs 웹사이트</a>에 가면 OpenAI에서 만든 custom GPT를 비롯해 여러 GPT를 볼 수 있습니다.</li><li>맞춤형 GPT들이 다양한 카테고리로 엮여 있어서 여기서 찾아볼 수도 있고,</li><li>검색을 통해 원하는 GPT를 찾아볼 수도 있습니다.</li><li>화면 오른쪽 위에 있는 <b>+ Create</b>를 눌러 <b>제작 모드로 들어갑니다.</b><br></li></ul><p><img src="56_customgpt_03.png"><br></p><ul><li>제작 모드로 들어가면 <b>왼쪽은 제작, 오른쪽은 미리보기</b>입니다.</li><li>왼쪽에 <b>Create</b>탭이 기본으로 선택되어 있습니다.</li><li>여기서 대화형으로 GPT를 만드는 것도 가능하지만 <b>Configure</b>탭으로 갑시다.<br></li></ul><p><img src="56_customgpt_04.png"><br></p><ul><li>Create 탭에서 대화형으로 하는 요청사항은 Configure 탭의 Instructions에 반영됩니다.</li><li>이 과정에서 줄글로 적히면서 가독성이 나빠집니다.</li><li>예를 들어, 무슨 말을 하건 삐딱한 자세로 논리적인 허점을 찾아 반박하라고 만든 <b>딴지봇</b>의 Instruction은 다음과 같습니다.</li><li>일부 기능을 수정하려고 해도 읽기가 쉽지 않습니다.<br></li></ul><p><img src="56_customgpt_05.png" alt="딴지봇에 적용된 Instruction"><br></p><ul><li>따라서 <b>Configure</b>탭에 위 프롬프트를 반듯하게 적어 넣는 것이 최선입니다.</li><li>그리고 중요한 것은, <b>Capabilities</b>의 <b>Code Interpreter &amp; Data Analysis</b>에 반드시 체크해야 합니다.</li><li>.docx 등 파일 출력시 자체적으로 파이썬 코드를 작성해 실행하기 때문입니다.</li></ul><p><img src="56_customgpt_06.png"><br></p><h2 id="2-2-GPTs-icon"><a href="#2-2-GPTs-icon" class="headerlink" title="2.2. GPTs icon"></a>2.2. GPTs icon</h2><ul><li>GPTs 아이콘을 만들 차례입니다.</li><li>Configure 탭 상단 + 부분을 클릭하여 <b>사진을 올리거나, DALL.E로 그리거나</b>를 선택합니다.</li><li>특별히 마음에 있는 그림이 없다면 DALL.E로 그리는 것이 여러 모로 편리합니다.</li><li><b>DALL.E를 클릭하면 Create 탭에서 생성이 진행</b>됩니다.</li><li>결과물을 보고 마음에 들지 않으면 이미지 생성 프롬프트를 입력해 새로 그릴 수 있습니다.</li><li><b>돋보기로 논문을 세심하게 살펴보는 초현실주의 그림</b>을 지시해 아이콘을 얻었습니다.<br></li></ul><p><img src="56_customgpt_07.png"><br></p><h2 id="2-3-동작-시험-amp-Prompt-Engineering"><a href="#2-3-동작-시험-amp-Prompt-Engineering" class="headerlink" title="2.3. 동작 시험 &amp; Prompt Engineering"></a>2.3. 동작 시험 &amp; Prompt Engineering</h2><ul><li>저장한 후, 오른쪽 Preview에 논문을 올리고 <b>아무 프롬프트 없이 실행합니다.</b></li><li>기대한대로 동작하는지 확인하며, 프롬프트를 조금씩 수정합니다.</li><li>이름도 <b>논문봇</b>이라고 붙였습니다.<br></li></ul><p><img src="56_customgpt_08.png"><br></p><ul><li>기대대로 동작한다면, <b>프롬프트가 아무리 길어도 문제없다</b>는 의미입니다.</li><li>그렇다면, <b>프롬프트를 최대한 자세하게 넣어줍니다.</b></li><li>추출하고자 하는 모든 항목을 자세하게 기술하고,</li><li>출력 양식도 정확히 기술합니다. </li><li>특히 DOI 등 URL은 결과물인 .docx 파일에서 클릭할 수 있도록 자세한 지시를 넣습니다.<br></li><li>실행할때마다 흔들리는 일관성을 조금이나마 확보하고자 <b>Temperature=0</b>도 넣었습니다.</li><li>그러나 <b>플라시보</b>입니다. <b>API가 아니면 동작하지 않습니다.</b><br></li></ul><p><img src="56_customgpt_09.png" alt="논문봇에 적용된 Instruction"><br></p><ul><li>참고로, 막연하게 <b>“요약하라”고 하면 제대로 된 정보를 얻기 힘듭니다.</b></li><li><b>GPT의 답변 속도에 넋을 놓고 보다가 막상 찬찬히 읽어 보면 뻔한 말만 하는 경우가 많습니다.</b></li><li>논문의 시작 부분인 초록과 서론에 있는 연구 배경에 치중해서 이 논문에서 말하고자 하는 바가 사라지기 때문입니다.</li><li>정확하게 <b>논문이 기여한 바</b>, <b>방법론</b>, <b>한계</b>등을 최대한 상세하게 물어야 합니다.</li><li>최종적으로 결과 파일을 보면서 지시를 충실히 이행했는지 확인합니다.<br></li></ul><p><img src="56_customgpt_11.png"><br></p><h2 id="2-4-데이터-추출"><a href="#2-4-데이터-추출" class="headerlink" title="2.4. 데이터 추출"></a>2.4. 데이터 추출</h2><blockquote><p><a href="https://jehyunlee.github.io/2024/06/03/General-54-materialdataextractor/">Pega Devlog: Materials Data Explorer</a></p></blockquote><ul><li>논문봇에는 데이터를 추출하는 내용이 많지 않습니다.</li><li>그러나 <b>소재 연구자를 위해 만든 <a href="https://chatgpt.com/g/g-a5T4ptvz6-materials-data-extractor">Materials Data Extractor</a></b>에겐 중요합니다.</li><li>의외로 GPT가 데이터 추출에는 취약합니다.</li><li>논문에 담긴 데이터를 최대한 빠트리지 않고 추출하려면 <b>반복작업</b>을 시켜야 합니다.</li><li>다음은 <b>Materials Data Extractor의 프롬프트</b>입니다.</li><li>네 번을 반복하며 논문 여기저기를 지정하여 훑어야 하며</li><li>특히 빠트린 데이터가 없는지 여러번 확인시켜야 합니다.<br></li></ul><p><img src="56_customgpt_10.png" alt="Materials Data Extractor에 적용된 Instruction"><br></p><h2 id="2-5-GPT-실행-이후"><a href="#2-5-GPT-실행-이후" class="headerlink" title="2.5. GPT 실행 이후"></a>2.5. GPT 실행 이후</h2><ul><li>맞춤형 GPT를 실행했다고 <b>끝이 난 것은 아닙니다.</b></li><li>ChatGPT는 여전히 다음 입력을 기다리고 있습니다.</li><li>이를 활용하여 추출한 결과를 사용해 <b>그래프 작성</b>이나 <b>추가 분석</b>을 시킬 수 있습니다.</li><li>특히 그래프는 최근 interactive plot을 지원하여 활용도가 높아졌습니다.</li><li>.xlsx나 .pptx 같은 다른 파일 형식으로도 출력할 수 있습니다.<br></li></ul><p><img src="56_customgpt_12.png" alt="추출한 데이터 활용 그래프 출력"><br></p><ul><li><b>어떻게 활용할지는 본인의 아이디어, 본인의 선택입니다.</b></li><li>아무리 좋은 custom GPT도 막상 제가 사용하려면 아쉬운 부분이 많았습니다.</li><li>제작자의 실력이 부족해서보다 <b>저와 원하는 바가 다르기 때문</b>입니다.</li></ul><ul><li>여러분과 저도 원하는 바가 다를 것입니다.</li><li>여러분께서 각자의 custom GPT를 만들어 사용하길 바라며,</li><li>이를 위해 제가 이 글에서 프롬프트를 공개하되 복사하기 어렵게 이미지로 넣었습니다.</li><li><b>시행착오를 두려워 마시고 좋은 비서를 스스로 만드시길 바랍니다.</b></li></ul>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/General/">General</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/chatgpt/">chatgpt</category>
      
      <category domain="https://jehyunlee.github.io/tags/RAG/">RAG</category>
      
      
    </item>
    
    <item>
      <title>Microsoft Designer (1) 스마트폰</title>
      <link>https://jehyunlee.github.io/2024/06/19/General-55-microsoftdesigner/</link>
      <guid>https://jehyunlee.github.io/2024/06/19/General-55-microsoftdesigner/</guid>
      <pubDate>Wed, 19 Jun 2024 08:12:00 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;contributor: 김동옥&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;AI로 그림을 그리는 것이 더 이상 신기하게 느껴지지 않습니다.&lt;/li&gt;
&lt;li&gt;아직 전체적으로는 소수이지만 AI 그림 공모전, 전시회가 제법 </description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p>contributor: 김동옥</p></blockquote><ul><li>AI로 그림을 그리는 것이 더 이상 신기하게 느껴지지 않습니다.</li><li>아직 전체적으로는 소수이지만 AI 그림 공모전, 전시회가 제법 눈에 띕니다.</li><li>여러 그림 생성 AI 중 입문용으로 가장 좋은 MS Designer를 소개합니다.</li></ul><h1 id="1-Microsoft-Designer"><a href="#1-Microsoft-Designer" class="headerlink" title="1. Microsoft Designer"></a>1. Microsoft Designer</h1><blockquote><p><a href="https://www.microsoft.com/ko-kr/microsoft-365/microsoft-designer">microsoft: Microsoft Designer 소개</a><br><a href="https://designer.microsoft.com/">Microsoft Designer</a></p></blockquote><p><img src="55_msdesigner_27.png" alt="Microsoft Designer 웹 버전 접속 화면"></p><ul><li><b>Microsoft Designer</b>를 <b>입문용으로 가장 좋은 그림 생성 AI 도구</b>라고 소개하는 데는 이유가 있습니다.</li><li><b>한국어</b>로 그림을 그릴 수 있으며, <b>무료</b>입니다.</li><li><b>DALL.E3</b>를 사용해 <b>품질</b>이 준수하고 대기업의 제품이라 안정성이 있습니다.</li><li><b>예제 프롬프트</b>를 풍부하게 제공해서 처음 보는 사람도 심리적인 장벽을 낮출 수 있습니다.</li><li>윈도우 사용자는 <b>별도의 회원 가입 절차도 필요치 않습니다.</b> 윈도 로그인 계정이 MS 계정이니까요.</li></ul><ul><li><b>웹 버전</b>과 <b>모바일 앱</b>을 동시에 지원합니다.</li><li>이번 글에서는 갤럭시 등 <b>안드로이드 앱</b>버전 기준으로 설명을 이어가겠습니다.</li><li>이해를 돕기 위해 캡처한 화면을 사용해서 그림이 많이 긴 점 양해바랍니다.</li></ul><h1 id="2-설치"><a href="#2-설치" class="headerlink" title="2. 설치"></a>2. 설치</h1><blockquote><p><a href="https://play.google.com/store/apps/details?id=com.microsoft.designer">Google Play: Microsoft Designer</a></p></blockquote><ul><li>안드로이드 사용자는 <a href="https://play.google.com/store/search?q=Microsoft%20designer&c=apps"><b>Google Play</b>를 통해 <b>Microsoft Designer를 설치</b>할 수 있습니다.</a></li><li><b>무료</b>이고 <b>3세부터 사용</b>할 수 있으므로 아이들이 갖고 놀아도 안전합니다.</li><li>그만큼 선정성, 폭력적 이미지에 대한 필터링이 강하게 걸려 있습니다.<br></li></ul><p><img src="55_msdesigner_01.png" alt="스마트폰에서 Google Play 스토어 검색"><br></p><ul><li><b>아이콘 그림</b>과 <b>Microsoft Designer</b>라는 이름을 확인하고 설치합니다.</li><li>다른 앱을 실수로 설치하지 않도록 유의합니다.<br></li></ul><p><img src="55_msdesigner_02.png" alt="Microsoft Designer 선택"><br></p><h1 id="3-실행"><a href="#3-실행" class="headerlink" title="3. 실행"></a>3. 실행</h1><ul><li>설치가 끝나면 화면 하단 왼쪽 아래 <b>세로선 세 줄(|||) 버튼</b>을 눌러 <b>앱 목록</b>을 봅니다.</li><li>설치된 앱은 기본적으로 이름으로 정렬됩니다.</li><li>화면을 좌우로 넘겨 <b>Microsoft Designer</b>를 찾아 길게 누르고 <b>홈 화면에 추가</b>를 선택합니다.<br></li></ul><p><img src="55_msdesigner_28.png" alt="앱 목록에서 아이콘 찾기"><br></p><ul><li>손가락 끝에 붙은 아이콘을 <b>바탕화면의 빈 곳에 내려 놓습니다.</b></li><li>이제 앞으로 스마트폰 화면에서 이 아이콘만 누르면 <b>Microsoft Designer가 실행</b>됩니다.</li></ul><p><img src="55_msdesigner_29.png" alt="아이콘 끌어다 바탕화면에 놓기"><br></p><ul><li>앱을 실행하면 다음과 같은 화면을 볼 수 있습니다.</li><li>저는 영어로 보이지만 설정에 따라 <b>한국어</b>로 보일 수 있습니다.</li><li>언어는 달라도 그림만으로 확인할 수 있으니 따라가 봅시다.</li></ul><p><img src="55_msdesigner_03.png" alt="Microsoft Designer 실행 화면"><br></p><h2 id="3-1-그림-그리기"><a href="#3-1-그림-그리기" class="headerlink" title="3.1. 그림 그리기"></a>3.1. 그림 그리기</h2><ul><li>왼쪽 위 <b>Images</b>라고 쓰인 곳을 터치합니다.</li><li>우주인이 파도타기를 하는 그림입니다.</li><li>위에 있는 넓은 빈 칸 안에 뭐라뭐라 써있고, 아래 다양한 그림들이 있습니다.</li><li>그릴 그림의 <b>장면을 빈 칸에 말로 묘사</b>하면 그림이 생성됩니다.<br></li></ul><h3 id="3-1-1-자유-그림-그리기"><a href="#3-1-1-자유-그림-그리기" class="headerlink" title="3.1.1. 자유 그림 그리기"></a>3.1.1. 자유 그림 그리기</h3><ul><li>여기 보이는 그림들이 모두 Microsoft Designer에서 그려진 그림입니다.</li><li>그림 아래 있는 말들로 그려진 그림입니다.</li><li>이렇게 AI에게 요청을 지시하는 말을 <b>프롬프트(prompt)</b>라고 합니다. </li><li>아무 그림이나 자유롭게 먼저 그려봅시다.<br></li></ul><p><img src="55_msdesigner_04.png" alt="이미지 만들기"><br></p><ul><li>머리에 그림을 하나 떠올리고, 여기에 말로 풀어서 넣어봅니다.</li><li>저는 <b>햇빛을 받으며 졸고 있는 고양이 사진</b>이라고 넣었습니다.</li><li>입력을 마치면 바로 아래에 있는 보라색 <b>생성</b> 버튼을 터치합니다.<br></li></ul><p><img src="55_msdesigner_11.png" alt="Microsoft Designer 선택"><br></p><ul><li>잠시, 20여초 가량 지나면 고양이 사진이 생겨납니다.</li><li>최대 총 네 장의 그림이 한 번에 생깁니다.</li><li>화면을 쓸어올리며 원하는 그림을 찾아보시고, 모두 마음에 들지 않으면 화면 왼쪽 위에 있는 뒤로 가기(←)를 눌러 다시 생성하면 됩니다.</li></ul><p><img src="55_msdesigner_12.png" alt="생성된 그림 확인"><br></p><ul><li><p>화면 오른쪽 위를 보면 <b>황금색 동전 모양의 그림</b>이 있고 옆에 <b>14</b>라는 숫자가 있습니다.</p></li><li><p>아까는 <b>15</b>였을 것입니다. 한 번 그릴 때마다 1씩 줄어듭니다.</p></li><li><p>하루에 15개씩 주어지는 <b>부스트(boost)</b>라는 것으로, 0이 된다고 그림을 못 그리지는 않습니다.</p></li><li><p>다만 그림이 만들어지는 속도가 많이 느려지는 정도입니다.</p></li><li><p>사용 갯수에 무관하게 <b>다음날 다시 15개로 돌아옵니다.</b> </p></li><li><p>걱정 마시고 마음껏 사용하시기 바라며, 충전하는 방법은 이 글에서는 생략합니다.</p></li><li><p>간단히만 말씀드리면 돈을 주고는 살 수 없고, MS 제품을 많이 사용해 받는 포인트로 충전 가능합니다.</p></li></ul><h3 id="3-1-2-틀을-활용해-그림-그리기"><a href="#3-1-2-틀을-활용해-그림-그리기" class="headerlink" title="3.1.2. 틀을 활용해 그림 그리기"></a>3.1.2. 틀을 활용해 그림 그리기</h3><ul><li>AI 그림을 시작하시는 분들이 가장 어려워하는 것이 <b>프롬프트 작성</b>입니다.</li><li>소설을 보면 다채로운 광경이 문장들로 묘사되어 있습니다.</li><li>이와 같이 머리 속 이미지를 말로 풀어내면 되는데, 훈련되지 않으면 어렵습니다.</li><li><b>ChatGPT 등에게 프롬프트를 요청하는 방법이 있습니다만 선호하지 않습니다.</b></li><li>가급적 다양한 시험을 하며 AI와 소통을 늘리는 것이 장기적으로 좋기 때문입니다.</li></ul><ul><li>Microsoft Designer는 초보자들을 위한 <b>틀(template)을 제공합니다.</b></li><li><b>Images</b>를 눌러 들어간 화면에 보이는 <b>그림들 중 하나를 터치</b>해보세요.</li><li>저는 문어 그림 옆에 있는 건물 그림을 눌렀습니다.</li><li>프롬프트 입력 창에 이 그림을 그리는데 사용된 프롬프트가 보입니다.</li><li>일부 단어에 <b>구멍</b>이 뚫려 있고 원래의 단어가 희미하게 보이는데,</li><li>여기에 다른 말을 넣고 <b>생성</b> 버튼을 누르면 바뀐 프롬프트로 그림이 생겨납니다.<br></li></ul><p><img src="55_msdesigner_05.png" alt="프롬프트 틀"><br></p><ul><li><b>기하학적</b>이라는 말을 제외하고 모든 말을 바꿔넣어 보았습니다.</li><li><b>크림과 파란색 톤</b>은 <b>빨강과 파란색 톤</b>으로,</li><li>년대를 의미하는 <b>1920의</b>는 <b>2020년대</b>로,</li><li><b>건물</b>은 <b>고양이</b>로 바꿔넣은 후 <b>생성</b>을 눌렀습니다.<br></li></ul><p><img src="55_msdesigner_06.png" alt="프롬프트 교체"><br></p><ul><li>잠시 후, 지시한대로 그림이 생성됩니다.</li><li>전체적으로 빨강과 파란색 톤으로, 기하학적 무늬를 배경으로 현대적인 디자인의 고양이 그림이 그려집니다.<br></li></ul><p><img src="55_msdesigner_08.png" alt="교체된 프롬프트로 그려진 그림"><br></p><h2 id="3-2-그림-저장"><a href="#3-2-그림-저장" class="headerlink" title="3.2. 그림 저장"></a>3.2. 그림 저장</h2><ul><li>그림이 마음에 든다면, 그림 아래에 있는 <b>저장</b>버튼을 눌러 휴대전화에 저장할 수 있습니다.</li><li>이렇게 저장한 그림은 (아직) 저작권은 인정되지 않지만 소유권은 인정됩니다.</li><li>본인의 목적에 따라 마음껏 사용하실 수 있으며 상업적인 활용도 가능합니다.<br></li></ul><p><img src="55_msdesigner_09.png" alt="그림 저장하기"><br></p><h2 id="3-2-스티커-만들기"><a href="#3-2-스티커-만들기" class="headerlink" title="3.2. 스티커 만들기"></a>3.2. 스티커 만들기</h2><ul><li>기본적인 그림을 그려봤으니 이제는 조금 다른 그림을 그려봅시다.</li><li>첫 실행 화면에서 두 번째, <b>Stickers</b>라고 써 있는 곳이 있습니다.</li><li>노란 토끼가 V를 그리고 있는 장면인데요, 여기를 터치합니다.<br></li></ul><p><img src="55_msdesigner_03.png" alt="Microsoft Designer 실행 화면"><br></p><ul><li>아까 <b>Image</b>를 눌렀을때와 거의 동일한 화면을 볼 수 있습니다.</li><li>그러나 아래 있는 예제 그림을 보면 하나같이 <b>단색 배경</b>에, 그림 주변에 <b>하얀 테두리</b>가 있음을 알 수 있습니다.</li><li>스티커 용지에 인쇄해서 맞추어 오리면 멋진 스티커가 되기도 하지만,</li><li>단색 배경 부분은 실제로 <b>투명하게 그려져 다른 그림 위에 덮어 사용하기 좋습니다.</b><br></li></ul><p><img src="55_msdesigner_13.png" alt="Sticker 실행 화면"><br></p><ul><li>여기에 머리 속 이미지를 다시 한번 풀어봅시다.</li><li>이번엔 <b>귀여운 고양이가 웃고 있는 모습의 클립아트</b>라고 넣었습니다.</li><li>하얀 배경 위에 고양이가 그려졌습니다만, 말씀드렸듯 실제 배경은 투명합니다.<br></li></ul><p><img src="55_msdesigner_14.png" alt="Sticker 실행 화면"><br></p><ul><li>그렇기 때문에 다른 이미지 위에 붙여 넣었을 때 자연스럽습니다.</li><li>꽁꽁 얼어붙은 한강 위로 고양이가 뛰어다니는 모습을 연출한 결과입니다.<br></li></ul><p><img src="55_msdesigner_30.png" alt="배경 이미지 위에 sticker를 올린 결과"><br></p><ul><li>스마트폰용 Microsoft Designer 앱에는 이 둘 외에도 몇 가지 기능이 더 있습니다.</li><li>그러나 분량 관계상 여기서 줄이도록 하겠습니다.</li><li>다른 기능들도 마음껏 클릭해서 시도해보시기 바랍니다.</li><li>이미지, 또는 스티커를 취향에 맞게, 또는 목적에 맞게 마음껏 사용하시면 좋겠습니다.</li></ul>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/General/">General</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/DALL-E/">DALL.E</category>
      
      <category domain="https://jehyunlee.github.io/tags/microsoft-designer/">microsoft designer</category>
      
      
    </item>
    
    <item>
      <title>소재 논문 데이터 추출 및 정리</title>
      <link>https://jehyunlee.github.io/2024/06/03/General-54-materialdataextractor/</link>
      <guid>https://jehyunlee.github.io/2024/06/03/General-54-materialdataextractor/</guid>
      <pubDate>Mon, 03 Jun 2024 03:53:00 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;연구자에게 논문은 연구 데이터의 보고입니다.&lt;/li&gt;
&lt;li&gt;논문에서 얻을 수 있는 소중한 데이터는 내 연구의 근간이 됩니다.&lt;/li&gt;
&lt;li&gt;이 데이터를 빠르게 추출하는 GPTs를 만들었습니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;1-</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>연구자에게 논문은 연구 데이터의 보고입니다.</li><li>논문에서 얻을 수 있는 소중한 데이터는 내 연구의 근간이 됩니다.</li><li>이 데이터를 빠르게 추출하는 GPTs를 만들었습니다.</li></ul><h1 id="1-소재-연구-논문-읽기"><a href="#1-소재-연구-논문-읽기" class="headerlink" title="1. 소재 연구 논문 읽기"></a>1. 소재 연구 논문 읽기</h1><ul><li><p>데이터 기반 연구가 아니더라도 논문의 데이터는 소중한 자원입니다.</p></li><li><p>특히 소재 연구에서는 선행 연구에 나온 물성과 특성들이 매우 중요합니다.</p></li><li><p>소재 연구자들이 하는 일 중 하나는 <b>논문을 읽으며 데이터를 모으고,</b></p></li><li><p><b>이를 바탕으로 본인의 연구를 설계하는 일</b>입니다.</p></li><li><p>그런데 이 일이 쉽지 않다기보다 <b>시간이 많이 걸립니다.</b></p></li><li><p>이런 논문을 읽어서<br></p></li></ul><p><img src="54_materialdataextractor_02.png"><br></p><ul><li>이런 내용으로 정리를 해야 합니다.</li><li>머리 속이든, 연구노트든 간에요.<br></li></ul><p><img src="54_materialdataextractor_03.png"><br></p><ul><li>그런데 글을 읽고 내용을 추출해서 정리하는 일은 LLM이 가장 잘 하는 일입니다.</li><li><b>GPT에게 시켜봅시다.</b></li></ul><h1 id="2-Materials-Data-Extractor"><a href="#2-Materials-Data-Extractor" class="headerlink" title="2. Materials Data Extractor"></a>2. Materials Data Extractor</h1><blockquote><p><a href="https://chatgpt.com/g/g-a5T4ptvz6-materials-data-extractor">GPT: Materials Data Extractor</a></p></blockquote><ul><li>몇 번의 시행 착오를 거쳐 GPT를 하나 만들었습니다.</li><li>본문 중 <b>표로 정리된 데이터</b> 외에도 <b>문장으로 쓰여진 데이터</b>를 추출하고,</li><li><b>인용된 다른 논문들의 수치</b>도 최대한 끌어옵니다.</li></ul><ul><li>이 GPT에 <a href="https://chatgpt.com/g/g-a5T4ptvz6-materials-data-extractor"><b>Materials Data Extractor</b></a>라는 이름을 붙였습니다. </li><li>GPT를 실행한 후 <b>논문만 올리고 실행을 누르면 됩니다</b></li><li>실행 화면을 녹화하여 올렸습니다. 전체 화면으로 확인해주시기 바랍니다.<br></li></ul><div class="video-container"><iframe src="https://www.youtube.com/embed/LHRVAcA_pbw" frameborder="0" loading="lazy" allowfullscreen></iframe></div><ul><li>데이터 누락을 막기 위해 <b>여러 차례 추출과 검수</b>를 반복했으며,</li><li><b>데이터를 표로 정리</b>시키고,</li><li>데이터로부터 <b>인사이트를 3개 가량 도출</b>합니다.</li><li>그리고 논문의 소재 중 <b>최적 소재를 선정</b>하고 <b>선정 이유</b>를 밝힙니다.</li><li>마지막으로 <b>.docx 파일로 정리하여 저장합니다.</b><br></li></ul><p><img src="54_materialdataextractor_04.png"><br></p><ul><li>한 편의 논문에 실린 데이터가 다음과 같이 정리됩니다.<br></li></ul><p><img src="54_materialdataextractor_06.png"><br></p><ul><li><b>전문가가 실제로 논문을 읽고 정리한 내용과 거의 차이가 없습니다.</b></li><li>정리된 파일은 <a href="Ni_doping_performance.docx">다운로드</a>하여 자유롭게 사용할 수 있습니다.</li></ul><ul><li>끝이 아닙니다.</li><li>GPT가 논문 내용을 모두 파악하고 있으므로 <b>모든 질문을 자유롭게</b> 할 수 있고,</li><li>정리된 내용을 다른 형식, 예를 들어 <b>xlsx나 pptx로 받을 수 있습니다.</b></li><li><a href="Ni_doping_performance.xlsx">엑셀 형식으로 정리를 요청</a>할 수도 있으며,</li><li><b>그래프</b>로 그려달라고 할 수도 있습니다.<br></li></ul><p><img src="54_materialdataextractor_05.png"><br></p><ul><li>각자의 아이디어를 담아 자유롭게 활용해주시면 좋겠습니다.</li></ul>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/General/">General</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/chatgpt/">chatgpt</category>
      
      <category domain="https://jehyunlee.github.io/tags/Data-Analyst/">Data Analyst</category>
      
      
    </item>
    
    <item>
      <title>생성 AI 연구 활용 한계와 제언</title>
      <link>https://jehyunlee.github.io/2024/05/24/General-53-genaipapersurvey/</link>
      <guid>https://jehyunlee.github.io/2024/05/24/General-53-genaipapersurvey/</guid>
      <pubDate>Fri, 24 May 2024 08:08:00 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;생성 AI는 연구에 큰 도움이 됩니다.&lt;/li&gt;
&lt;li&gt;원하는 정보를 빠르게 찾아주기도 하고, PDF 파일도 읽을 수 있습니다.&lt;/li&gt;
&lt;li&gt;그러나 명백한 근본적 한계가 있습니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;1-생성-AI-연</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>생성 AI는 연구에 큰 도움이 됩니다.</li><li>원하는 정보를 빠르게 찾아주기도 하고, PDF 파일도 읽을 수 있습니다.</li><li>그러나 명백한 근본적 한계가 있습니다.</li></ul><h1 id="1-생성-AI-연구-활용-도구"><a href="#1-생성-AI-연구-활용-도구" class="headerlink" title="1. 생성 AI 연구 활용 도구"></a>1. 생성 AI 연구 활용 도구</h1><blockquote><p><a href="https://www.chatpdf.com/">ChatPDF</a><br><a href="https://www.connectedpapers.com/">Connected Papers</a><br><a href="https://consensus.app/">Consensus</a><br><a href="https://elicit.org/">Elicit</a><br><a href="https://www.explainpaper.com/">ExplainPaper</a><br><a href="https://www.litmaps.com/">Litmus</a><br><a href="perplexity.ai">Perplexity</a><br><a href="https://www.paperpile.com/">Paperpile</a><br><a href="https://www.researchrabbit.ai/">research rabbit</a><br><a href="https://scispace.com/">Scispace</a><br><a href="https://scite.ai/">scite</a><br><a href="https://www.elsevier.com/solutions/scopus">Scopus AI</a><br><a href="https://clarivate.com/blog/bringing-generative-ai-to-the-web-of-science/">Web of Science AI Research Assistant</a></p></blockquote><ul><li><b>연구에 활용할 수 있는 생성 AI 도구</b>가 매우 많습니다.</li><li>다양한 논문 데이터베이스에 접근하거나 PDF 파일을 읽고,</li><li>내용과 인용 네트워크를 그려주는 등 번거로운 일을 자동화해줍니다.</li><li>그리고, 도구별로 특색이 있습니다.<br></li></ul><p><img src="53_genaipapersurvey_01.png"></p><ul><li>이런 도구들을 사용하면 <b>논문을 빨리 읽을 수 있고</b>,</li><li><b>낯선 분야의 논문도 훨씬 수월하게 읽을 수 있습니다.</b></li><li>내용을 머리에 다져넣기보다 <b>행정 문서 작성</b>을 위해 빠르게 파악해야 할 때 진가가 발휘됩니다.</li></ul><ul><li>그러나 모든 도구가 그렇듯 <b>근본적인 한계</b>가 있습니다.</li><li>이를 알고 장점을 활용해야 큰 실수를 하지 않습니다.</li></ul><h1 id="2-Q-Perovskite-Silicon-tandem-태양전지의-최대-효율은"><a href="#2-Q-Perovskite-Silicon-tandem-태양전지의-최대-효율은" class="headerlink" title="2. Q. Perovskite/Silicon tandem 태양전지의 최대 효율은?"></a>2. Q. Perovskite/Silicon tandem 태양전지의 최대 효율은?</h1><blockquote><p><a href="https://www.epfl.ch/labs/pvlab/research/page-124775-en-html/">EPFL: Perovskite Cells for Tandem Applications</a><br><a href="https://www.renewableinstitute.org/world-record-smashed-in-major-breakthrough-for-solar-panel-efficiency/">The Renewable Energy Institute: World Record Smashed in Major Breakthrough for Solar Panel Efficiency</a><br><a href="https://www.prnewswire.com/news-releases/longi-sets-a-new-world-record-of-33-9-for-the-efficiency-of-crystalline-silicon-perovskite-tandem-solar-cells-301978002.html">PR Newswire: LONGi sets a new world record of 33.9% for the efficiency of crystalline silicon-perovskite tandem solar cells</a></p></blockquote><p><img src="53_genaipapersurvey_03.png"></p><ul><li><b>Perovskite/Silicon tandem 태양전지</b>는 태양전지의 효율을 높이고자 하는 여러 시도 중 하나입니다.</li><li>이 질문에 대한 답을 연구용 생성 AI를 통해 잘 찾을 수 있을까요?</li><li>먼저 정답을 말하자면 현 시점(24.05.24.)에서 <b>33.9%</b>입니다.</li><li>중국 기업인 LONGi가 KAUST의 33.7%를 넘는 기록을 세웠습니다.<br></li></ul><p><img src="53_genaipapersurvey_04.png"></p><h1 id="3-AI를-포함한-웹-검색은-답을-찾을-수-있을까"><a href="#3-AI를-포함한-웹-검색은-답을-찾을-수-있을까" class="headerlink" title="3. AI를 포함한 웹 검색은 답을 찾을 수 있을까?"></a>3. AI를 포함한 웹 검색은 답을 찾을 수 있을까?</h1><ul><li>일반 검색 엔진인 <b>Google</b>과 <b>Bing</b>, </li><li>그리고 검색 기능이 있는 생성 AI인 <b>Gemini</b>와 <b>MS Copilot</b>에게 물어봅니다.</li></ul><blockquote><p><b>What is the world record of Perovsite-silicon tandem solar cell?</b></p></blockquote><h2 id="3-1-Google-Gemini"><a href="#3-1-Google-Gemini" class="headerlink" title="3.1. Google, Gemini"></a>3.1. Google, Gemini</h2><ul><li>33.9%를 잘 찾습니다.</li><li>그러나 <b>Gemini의 답변은 논문이나 보고서에 쓸 수 없습니다.</b></li><li>출처를 알려주지 않기 때문입니다.</li></ul><p><img src="53_genaipapersurvey_05.png"><br></p><h2 id="3-2-Bing-MS-Copilot"><a href="#3-2-Bing-MS-Copilot" class="headerlink" title="3.2. Bing, MS Copilot"></a>3.2. Bing, MS Copilot</h2><ul><li>역시 잘 찾습니다.</li><li>Bing이 답을 보여주기 전에 너무 많은 광고를 보여주는 것이 불만입니다.</li><li>하지만 차분히 찾아보면 올바른 답을 볼 수 있습니다.</li><li>Bing과 Copilot 모두 출처를 잘 보여주어 확인이 가능합니다.</li></ul><p><img src="53_genaipapersurvey_06.png"><br></p><p><img src="53_genaipapersurvey_07.png"><br></p><h1 id="4-생성-AI-도구는-답을-잘-찾을-수-있을까"><a href="#4-생성-AI-도구는-답을-잘-찾을-수-있을까" class="headerlink" title="4. 생성 AI 도구는 답을 잘 찾을 수 있을까?"></a>4. 생성 AI 도구는 답을 잘 찾을 수 있을까?</h1><ul><li>ChatGPT의 <b>Explore GPTs</b> 메뉴로 가면 특정 목적에 특화시킨 GPT들을 볼 수 있습니다.</li><li><b>Research &amp; Analysis</b>를 고르면 다양한 도구들이 나오는데,</li><li>2억편 이상의 논문을 검색할 수 있음을 뽐내고 있습니다.<br></li></ul><p><img src="53_genaipapersurvey_12.png"><br></p><ul><li>이 네 개의 연구용 생성 AI에게 같은 질문을 해 보았습니다.</li></ul><h2 id="4-1-Scholar-GPT"><a href="#4-1-Scholar-GPT" class="headerlink" title="4.1. Scholar GPT"></a>4.1. Scholar GPT</h2><ul><li><b>29.8%</b>라고 합니다. 오답입니다.<br><br><img src="53_genaipapersurvey_08.png"><br></li></ul><h2 id="4-2-Consensus"><a href="#4-2-Consensus" class="headerlink" title="4.2. Consensus"></a>4.2. Consensus</h2><ul><li><b>31.25%</b>라고 합니다. 오답입니다.<br><br><img src="53_genaipapersurvey_09.png"><br></li></ul><h2 id="4-3-Scholar-AI"><a href="#4-3-Scholar-AI" class="headerlink" title="4.3. Scholar AI"></a>4.3. Scholar AI</h2><ul><li><b>33.7%</b>라고 합니다. 오답입니다.</li><li>그런데 조금 아깝습니다. 바로 직전의 기록입니다.<br><br><img src="53_genaipapersurvey_10.png"><br></li></ul><h2 id="4-4-scispace"><a href="#4-4-scispace" class="headerlink" title="4.4. scispace"></a>4.4. scispace</h2><ul><li><b>31.25%</b>라고 합니다. 역시 오답입니다.</li><li>여러 레퍼런스를 올바르게 주지만 정답은 없습니다.<br><br><img src="53_genaipapersurvey_11.png"><br></li></ul><h1 id="5-왜-이러는-걸까요"><a href="#5-왜-이러는-걸까요" class="headerlink" title="5. 왜 이러는 걸까요?"></a>5. 왜 이러는 걸까요?</h1><ul><li><b>환각은 아닐 확률이 높습니다.</b></li><li>연구용 생성 AI는 모든 답변에 레퍼런스를 기본으로 가져오기 때문입니다.</li><li>간혹 환각이 발생하긴 하지만 확률은 매우 낮습니다.</li></ul><ul><li><b>참고하는 데이터베이스에 근본적인 한계가 있습니다.</b></li><li>현재 다양한 기관에서 논문 데이터베이스를 운영하고 있습니다.</li><li>목적이 다른 경우도 있고 분야가 다른 경우도 있습니다.</li><li>이 중 대부분은 비용을 내야 활용할 수 있는 <b>Licensed DB</b>입니다.</li><li>그리고 일부 <b>Open Access DB</b>가 있습니다.<br></li></ul><p><img src="53_genaipapersurvey_02.png"><br></p><ul><li>분야에 따라 Open Access DB가 주요 DB로 기여하기도 합니다.</li><li>그러나 제가 속한 분야를 비롯한 많은 분야는 Open Access로 부족한 경우가 많습니다.</li><li>태양광도 이와 같은 분야이며, <b>Open Access DB만으로는 제대로 된 결과를 얻기 힘듭니다.</b></li></ul><ul><li>그리고 이번 사례는 연구기관이 아닌 <b>기업의 성과</b>입니다.</li><li><b>뉴스</b>로는 보도되었으나 논문으로는 나오지 않았기 때문에 논문 검색으로는 답이 나오지 않습니다.</li><li>Perplexity를 활용한 아래 검색에서 이를 확인할 수 있습니다.<br></li></ul><h1 id="5-1-Perplexity-Focus-All"><a href="#5-1-Perplexity-Focus-All" class="headerlink" title="5.1. Perplexity | Focus = All"></a>5.1. Perplexity | Focus = All</h1><ul><li>모든 소스를 찾아보라는 조건에서 정답 <b>33.9%</b>를 찾습니다.<br><br><img src="53_genaipapersurvey_13.png"><br></li></ul><h1 id="5-2-Perplexity-Focus-Academic"><a href="#5-2-Perplexity-Focus-Academic" class="headerlink" title="5.2. Perplexity | Focus = Academic"></a>5.2. Perplexity | Focus = Academic</h1><ul><li>Perplexity의 소스 지정 명령을 활용해 학술문헌만 검색시킵니다.</li><li>그리고 오답 <b>33.7%</b>를 찾습니다.<br><br><img src="53_genaipapersurvey_14.png"><br></li></ul><h1 id="6-제언"><a href="#6-제언" class="headerlink" title="6. 제언"></a>6. 제언</h1><ul><li>이와 같이 정보 출처의 영향으로 인해 검색 결과가 제한됩니다.</li><li>아무리 생성 AI가 GPT3.5에서 4, 4o를 거치며 성능이 향상되어도,</li><li><b>좋은 재료를 구할 수 없으면 좋은 음식을 만들 수 없듯</b> 답변에 한계가 생깁니다.</li></ul><ul><li><b>연구자들은 본인 분야의 특성을 파악하여 올바른 소스에 접근</b>하고,</li><li>Licensed DB를 사용해야 하는 연구자는 적법한 절차를 거쳐 원문을 내려받아야 합니다. </li><li>그리고 <b>scispace</b>나 <b>ChatPDF</b>, <b>research rabbit</b>등 </li><li>PDF를 사용할 수 있는 도구를 이용해야 합니다.</li></ul><ul><li><p>기존 도구의 성능에 한계가 느껴진다면 <b>스스로 도구를 만들어볼 수도 있습니다.</b></p></li><li><p>생성 AI를 올바른 방식으로 활용하시어 좋은 성과를 얻으시기 바랍니다.</p></li><li><p>관련 자료를 정리하여 PDF 파일을 공유합니다 : <a href="240524_%EC%9D%B4%EC%A0%9C%ED%98%84_%EC%97%B0%EA%B5%AC%ED%99%9C%EC%9A%A9%EC%83%9D%EC%84%B1AI%EC%99%80%EC%97%B0%EA%B5%ACDB%EB%AA%A9%EB%A1%9D.pdf"><b>다운로드 링크</b></a></p></li></ul>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/General/">General</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/openai/">openai</category>
      
      <category domain="https://jehyunlee.github.io/tags/chatgpt/">chatgpt</category>
      
      <category domain="https://jehyunlee.github.io/tags/scispace/">scispace</category>
      
      <category domain="https://jehyunlee.github.io/tags/perplexity/">perplexity</category>
      
      <category domain="https://jehyunlee.github.io/tags/consensus/">consensus</category>
      
      <category domain="https://jehyunlee.github.io/tags/scholar-AI/">scholar AI</category>
      
      <category domain="https://jehyunlee.github.io/tags/scholar-GPT/">scholar GPT</category>
      
      
    </item>
    
    <item>
      <title>생성 AI 연구 활용 가이드</title>
      <link>https://jehyunlee.github.io/2024/05/19/General-52-genairesearch/</link>
      <guid>https://jehyunlee.github.io/2024/05/19/General-52-genairesearch/</guid>
      <pubDate>Sun, 19 May 2024 05:18:00 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;ChatGPT가 등장한 직후부터 연구, 교육계가 들썩였습니다.&lt;/li&gt;
&lt;li&gt;당장의 괴로운 글쓰기를 해결할 수 있기 때문에 많은 관계자들의 관심을 끌었습니다.&lt;/li&gt;
&lt;li&gt;그만큼 뜨거웠던 찬반에 대한 논의 결과 정리되고 있는 내용</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>ChatGPT가 등장한 직후부터 연구, 교육계가 들썩였습니다.</li><li>당장의 괴로운 글쓰기를 해결할 수 있기 때문에 많은 관계자들의 관심을 끌었습니다.</li><li>그만큼 뜨거웠던 찬반에 대한 논의 결과 정리되고 있는 내용을 요약합니다.</li></ul><h1 id="1-결과"><a href="#1-결과" class="headerlink" title="1. 결과"></a>1. 결과</h1><blockquote><p><a href="genai_research_ko.pdf"><b>PDF 다운로드 링크: Korean</b></a><br><a href="genai_research_en.pdf"><b>PDF download link: English</b></a></p></blockquote><p><img src="genai_research.png"></p><ul><li>국내외 여러 기관에서 관련 가이드를 제시했습니다.</li><li>본 자료에서는 <b>해외 기관 중심으로 8곳</b>의 자료를 담았습니다만,</li><li>그간 언론이나 보도자료 등을 통해 보았던 다른 곳의 가이드도 대부분 대동소이합니다.</li><li>따라서 <b>중요한 내용은 모두 담겼다</b>고 볼 수 있습니다.</li><li>이미지 파일에 빠진 링크는 <a href="genai_research_ko.pdf"><b>PDF 파일</b></a>에서 확인하실 수 있습니다. </li></ul><h1 id="2-가이드-제작-방법"><a href="#2-가이드-제작-방법" class="headerlink" title="2. 가이드 제작 방법"></a>2. 가이드 제작 방법</h1><ul><li>많은 곳에서 나온 가이드를 모두 찾아 읽으려면 시간이 많이 갑니다.</li><li>읽은 내용을 정리하는데도 시간과 노력이 많이 듭니다.</li><li><b>생성 AI 도구의 힘을 빌려 이를 편하게 처리했습니다.</b></li><li>그 과정을 공유드립니다.</li></ul><h2 id="2-1-정보-수집-perplexity"><a href="#2-1-정보-수집-perplexity" class="headerlink" title="2.1. 정보 수집 : perplexity"></a>2.1. 정보 수집 : perplexity</h2><blockquote><p><a href="https://www.perplexity.ai/">perplexity.ai</a></p></blockquote><ul><li>이 작업을 한다고 했을 때 가장 먼저 할 일은 <b>웹 검색</b>입니다.</li><li>구글 등 <b>검색 엔진</b>에 <b>여러 키워드</b>를 바꿔넣으며 자료를 검색하고 내려받을 것입니다.</li><li><b>수집한 내용을 정리</b>할 것입니다.</li><li>이 과정을 자동화해주는 멋진 도구가 <a href="https://www.perplexity.ai/"><b>perplexity.ai</b></a>입니다.</li><li><b>guide for using generative AI in academic purpose</b>라는 프롬프트를 넣습니다.<br></li></ul><p><img src="52_genairesearch_01.png"><br></p><ul><li>위 스크린샷의 <b>Searching the web</b>을 보면 입력 프롬프트가 다양하게 변화되어 있습니다.</li><li>그리고 <b>20개의 소스</b>로부터 관련 내용을 찾아 <b>Answer</b>부분에 내용을 정리합니다.</li><li><b>Reference</b>를 클릭해 이 모든 내용을 가져오기보다 대표적인 것 몇 개를 가져옵니다.<br></li></ul><p><img src="52_genairesearch_02.png"><br></p><ul><li>그리고 <b>ACS (미국화학회)</b>에서 선제적으로 2023년 2월에 발표된 자료를 가져오고,</li><li>최근 이미지 관련하여 <b>Nature</b>에서 강조한 자료들을 가져옵니다.</li><li>평소의 정보 수집 활동을 통해 알고 있고 중요하게 생각하는 자료입니다.</li></ul><h2 id="2-2-내용-정리"><a href="#2-2-내용-정리" class="headerlink" title="2.2. 내용 정리"></a>2.2. 내용 정리</h2><h3 id="2-2-1-요약-MS-Edge-Copilot-scispace"><a href="#2-2-1-요약-MS-Edge-Copilot-scispace" class="headerlink" title="2.2.1. 요약 : MS Edge Copilot, scispace"></a>2.2.1. 요약 : MS Edge Copilot, scispace</h3><blockquote><p><a href="https://www.microsoft.com/en-us/edge/features/copilot?form=MA13FJ">MS Edge Copilot</a><br><a href="https://typeset.io/">scispace</a></p></blockquote><ul><li>각각의 내용들이 perplexity 출력물에 요약이 되어 있지만, 조금 더 체계적으로 정리를 해보기로 합니다.</li><li>PDF로 다운받을 수 있는 것들은 다운을 받고,</li><li>그렇지 않은 웹 문서는 <a href="https://www.microsoft.com/en-us/edge/features/copilot?form=MA13FJ">MS Edge Copilot</a>에서 정리합니다.</li><li>내용 정리를 용이하게 하기 위해 <b>해야 할 것(Do)</b>과 <b>하지 말아야 할 것(Don’t)</b>으로 구분하여 <b>표로 정리하라</b>는 지시를 내립니다.</li><li>이 때 <b>웹 검색이 아닌 해당 문서를 사용하도록</b> 설정해야 합니다.<br></li></ul><p><img src="52_genairesearch_03.png"><br></p><ul><li>PDF 문서는 <a href="https://typeset.io/"><b>scispace</b></a>에 올립니다.</li><li>PDF 뷰어를 겸한 copilot 모드에서 동일한 질문을 합니다.</li><li><b>출력 언어 설정을 ko(한국어)</b>로 하면 프롬프트에 언어 설정을 할 필요가 없습니다.<br></li></ul><p><img src="52_genairesearch_04.png"><br></p><h3 id="2-2-2-정리-MS-Word"><a href="#2-2-2-정리-MS-Word" class="headerlink" title="2.2.2. 정리 : MS Word"></a>2.2.2. 정리 : MS Word</h3><ul><li>MS Edge Copilot은 표로 출력한 결과를 Excel 파일로 내놓습니다.</li><li>scispace에는 그런 기능이 없지만 긁어서 붙이기 어렵지 않습니다.</li><li>이렇게 정리된 표를 취합하는 과정은 <b>수작업</b>으로 수행합니다.</li></ul><ul><li>방법이 없어서 수작업으로 하는 것이 아닙니다.</li><li><b>요약된 내용을 한번씩 읽어보며 의문이 나면 원문을 읽어보기 위한 과정입니다.</b></li><li>거의 모든 과정이 자동으로 처리되기 때문에, 자칫하면 <b>원문을 한 번도 읽지 않은 채</b> 결과물이 나옵니다.</li><li>편함만 찾다가 <b>문제 발생시 매우 위험한 상황</b>을 만날 수 있습니다.<br></li></ul><p><img src="52_genairesearch_05.png"><br></p><ul><li>한 줄씩 옮기면서 <b>이게 무슨 소리일까</b>생각하고,</li><li>납득이 되지 않으면 <b>원문을 찾아 읽으며 필요시 표현을 수정합니다.</b></li><li>오류는 대개 기계번역 과정에서 어색한 단어가 쓰여 오해를 빚는 경우들입니다.</li></ul><h3 id="2-2-3-취합-ChatGPT"><a href="#2-2-3-취합-ChatGPT" class="headerlink" title="2.2.3. 취합 : ChatGPT"></a>2.2.3. 취합 : ChatGPT</h3><ul><li>정리를 하고 보니 여러 기관에서 비슷한 말들을 했습니다. </li><li>사실 서로 많이 다르면 이상한 상황입니다.</li><li><b>내용을 기준으로 묶고 중복된 내용은 관련 레퍼런스를 여럿 달면 좋겠습니다.</b><br></li><li><b>ChatGPT에 파일을 올리고 관련 지시를 내립니다.</b></li></ul><p><img src="52_genairesearch_06.png"><br></p><ul><li>결과물이 한 번에 마음에 들지 않습니다.</li><li>충분히 원하는 결과물이 나올 때까지 <b>프롬프트를 수정하며 지시를 반복</b>합니다.<br></li></ul><p><img src="52_genairesearch_07.png"><br></p><ul><li>충분히 정리된 결과를 얻었습니다.</li><li>디자인은 아직 많이 거칠지만, 어차피 손은 제가 봐야 하니 여기서부터 수작업으로 넘어갑니다.<br></li></ul><p><img src="52_genairesearch_08.png"><br></p><h3 id="2-2-4-정돈-MS-PowerPoint"><a href="#2-2-4-정돈-MS-PowerPoint" class="headerlink" title="2.2.4. 정돈 : MS PowerPoint"></a>2.2.4. 정돈 : MS PowerPoint</h3><ul><li>익숙한 파워포인트에서 작업을 합니다.</li><li>직장 로고와 제 연락처도 박아 넣고, 레퍼런스들에 링크도 겁니다.</li><li><b>중요한 메시지는 강조도 합니다.</b></li><li><b>자동화보다 수작업이 더 효율적인 영역입니다.</b></li></ul><p><img src="52_genairesearch_09.png"><br></p><ul><li>Do와 Don’t 열의 내용이 겹쳐 Don’t를 삭제했습니다.</li><li>순서도 내용에 맞추어 묶어 엮었습니다.</li></ul><h3 id="2-2-5-번역-DeepL"><a href="#2-2-5-번역-DeepL" class="headerlink" title="2.2.5. 번역 : DeepL"></a>2.2.5. 번역 : DeepL</h3><ul><li><b>DeepL에 powerpoint 문서를 입력하면 포맷을 유지하고 영어로 번역합니다.</b></li><li>출력 언어를 영어로 설정 후 파일을 업로드합니다.<br></li></ul><p><img src="52_genairesearch_10.png"><br></p><ul><li>결과 파일을 다운로드 후, 암호를 해제합니다.</li><li>파일을 열어 행 길이가 변하면서 발생한 줄 넘김 등을 처리하여 최종 문서를 만듭니다.</li></ul><p><img src="52_genairesearch_11.png"><br></p><h1 id="3-결론"><a href="#3-결론" class="headerlink" title="3. 결론"></a>3. 결론</h1><ul><li>아직 많은 분들이 ChatGPT만 알고 계십니다.</li><li>그러나 상황에 따라 사용하기 좋은 AI 도구들이 많이 나왔고, 발달하고 있습니다.</li><li>윤리적 가이드라인을 지키며 올바른 방향으로 사용하시기를 바랍니다.</li></ul>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/General/">General</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/openai/">openai</category>
      
      <category domain="https://jehyunlee.github.io/tags/chatgpt/">chatgpt</category>
      
      <category domain="https://jehyunlee.github.io/tags/scispace/">scispace</category>
      
      <category domain="https://jehyunlee.github.io/tags/perplexity/">perplexity</category>
      
      
    </item>
    
    <item>
      <title>DALL.E inpainting으로 그림 그리기</title>
      <link>https://jehyunlee.github.io/2024/05/19/General-51-dalleinpainting/</link>
      <guid>https://jehyunlee.github.io/2024/05/19/General-51-dalleinpainting/</guid>
      <pubDate>Sat, 18 May 2024 15:52:00 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;ChatGPT DALL.E에는 그림을 수정하는 기능이 있습니다.&lt;/li&gt;
&lt;li&gt;DALL.E2부터 공개된 기능으로, 기존 이미지의 일부를 지우고 새 프롬프트를 넣어서 새로 그리는 그림입니다.&lt;/li&gt;
&lt;li&gt;inpainting이라는 방</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>ChatGPT DALL.E에는 그림을 수정하는 기능이 있습니다.</li><li>DALL.E2부터 공개된 기능으로, 기존 이미지의 일부를 지우고 새 프롬프트를 넣어서 새로 그리는 그림입니다.</li><li>inpainting이라는 방식입니다. 이를 이용해서 그림을 그릴 수 있겠다는 생각이 들었습니다.</li></ul><h1 id="1-DALL-E3-inpainting"><a href="#1-DALL-E3-inpainting" class="headerlink" title="1. DALL.E3 inpainting"></a>1. DALL.E3 inpainting</h1><ul><li>프롬프트로 그리는 그림은 그 자체로 매력과 제약이 있습니다.</li><li>목표로 하는 그림을 말로 설명하는 것은 매우 재미있는 작업입니다.</li><li>그러나 프롬프트를 정확히 동작하게 하는 것은 매우 어렵습니다.</li><li><b>언어 표현의 한계</b>도 있지만 DALL.E라는 <b>AI 모델의 한계</b>, 학습한 <b>데이터의 한계</b>가 있기 때문입니다.</li></ul><ul><li><b>inpainting은 먼저 그려진 그림의 일부만을 골라 수정하는 방식입니다.</b></li><li>일부를 고치려다가 전체를 망치는 일도 막을 수 있고,</li><li>DALL.E에서 그리지 못하는 그림을 그릴 수 있기 때문입니다.</li><li>예를 들어, <b>아기공룡 둘리</b>를 그리려다 실패한 적이 많습니다.</li><li><b>코에 하얀 뿔을 달고 있는 모습이 그려지지 않았기 때문입니다.</b></li></ul><ul><li>예를 보여드리겠습니다.</li><li>먼저, 적절히 초록색 귀여운 공룡을 그립니다.</li></ul><blockquote><p>prompt: “a realistic photography of a cute green dinosaur {smiling, chubby}, walking in forest in Jurassic.”</p></blockquote><p><img src="51_dalleinpainting_11.png"><br></p><ul><li>그리고, 이미지를 선택하고 inpainting을 의미하는 붓 아이콘을 선택해서 코를 칠합니다.</li><li>이 자리에만 새로 입력하는 프롬프트를 적용하겠다는 뜻입니다.</li></ul><blockquote><p>prompt: “add a rounded white spike on top of the nose”</p></blockquote><p><img src="51_dalleinpainting_12.png"><br></p><ul><li>다른 곳은 모두 그대로 두고 <b>코</b>에만 하얀 뿔이 달렸습니다.</li><li>빛의 방향과 표현 방식 등이 주변 그림과 어울리도록 그려집니다.</li><li><b>이 방식을 사용하면 그림 한 점을 그릴 수 있지 않을까?</b></li><li><b>그렇다면 그 과정은 일반적인 회화를 만드는 과정과 비슷하지 않을까?</b></li><li><b>한번 해볼만할 가치가 있지 않을까?</b> 싶었습니다.</li></ul><h1 id="2-inpainting으로-그림-한-점-그리기"><a href="#2-inpainting으로-그림-한-점-그리기" class="headerlink" title="2. inpainting으로 그림 한 점 그리기"></a>2. inpainting으로 그림 한 점 그리기</h1><h2 id="2-1-바탕-설정"><a href="#2-1-바탕-설정" class="headerlink" title="2.1. 바탕 설정"></a>2.1. 바탕 설정</h2><ul><li>그림을 그려나가는 과정이라면, 어설픈 장면보다 <b>그림</b>을 그리면 좋을 것 같았습니다.</li><li><b>하늘색 벽에 걸린 하얀 캔버스를 먼저 그렸습니다.</b></li><li>이젤에 놓인 캔버스도 생각해봤지만, 전체 공간에서 캔버스가 차지하는 공간이 작아질 수 밖에 없습니다.<br></li></ul><p><img src="51_dalleinpainting_01.png"><br></p><ul><li>그리고, 본 그림이 놓일 부분을 선택합니다.</li><li>새로운 그림이 그려질 자리이기 때문에 기존 그림을 지우는 그림마저 듭니다.</li><li>나무 선반에 짙은 남색의 도자기 꽃병을 올립니다.<br></li></ul><p><img src="51_dalleinpainting_02.png"><br></p><ul><li>생각보다 선반이 너무 짧게 나왔습니다.</li><li>머리 속에는 가로로 긴 선반이 있었는데, 막상 그려진 걸 보니 나쁘지 않습니다.</li><li><b>의외성을 받아들이고 이 공간을 재밌게 꾸며보기로 합니다.</b></li></ul><h2 id="2-2-꽃과-꽃잎"><a href="#2-2-꽃과-꽃잎" class="headerlink" title="2.2. 꽃과 꽃잎"></a>2.2. 꽃과 꽃잎</h2><ul><li>같은 방식으로 꽃병 위를 선택하고 노랑, 빨강의 꽃을 만듭니다.</li><li>처음 그린 그림이 마음에 들지 않았습니다.</li><li>앞선 그림으로 올라가 작업하기보다, <b>그림 위를 다시 선택하고 inpainting을 합니다.</b></li><li>어차피 지우는 거니까요 :)</li></ul><p><img src="51_dalleinpainting_04.png"><br></p><ul><li>프롬프트의 “flower”를 “roses”로 교체한 뒤에 조금 더 마음에 드는 그림이 나왔습니다.</li><li>의도적으로 꽃만 그렸기 때문에 이제 이를 들러싼 잎을 풍성하게 담고 싶습니다.</li><li>장미 잎은 동그랗고 작지만, <b>길다란 다른 장식 잎들이 함께 꽂혀 있다는 설정</b>을 하고 프롬프트를 입력했습니다.<br></li></ul><p><img src="51_dalleinpainting_05.png"><br></p><ul><li><b>그런데 잘 작동하지 않았습니다.</b></li><li>먼저 그린 장미때문인지, 작고 귀여운 꽃잎만 그려집니다.</li><li>여러 번을 해도 마찬가지입니다.</li><li><b>잎을 먼저 그렸으면 어땠을까 싶습니다. 달랐을 것 같습니다.</b></li></ul><ul><li>아쉬운대로 옆 공간을 다르게 활용하기로 합니다.<br></li></ul><p><img src="51_dalleinpainting_06.png"><br></p><h2 id="2-3-나비와-고양이"><a href="#2-3-나비와-고양이" class="headerlink" title="2.3. 나비와 고양이"></a>2.3. 나비와 고양이</h2><ul><li><b>꽃 주변에 날아든 나비</b>를 담습니다.</li><li>생각보다 제법 어울리게 나비 세 마리가 놓였습니다.</li><li>아래 공간을 어떻게 채울지 잠시 고민합니다.</li></ul><p><img src="51_dalleinpainting_07.png"><br></p><ul><li><b>고양이가 그림을 향해 점프하는 모습</b>이 담기면 좋겠다는 생각이 듭니다.</li><li>그림 밖을 지나가던 고양이가 나비를 보고 점프하는 모습을 프롬프트로 입력합니다.</li><li><b>의외로 여러 차례 아무것도 그려지지 않아서 재시도를 해야 했습니다.</b></li><li>겨우 그려진 그림은 영 마음에 들지 않습니다.<br></li></ul><p><img src="51_dalleinpainting_08.png"><br></p><ul><li>다시 영역을 선택하고 수 차례 반복하고 나서야 고양이가 의도대로 그려졌습니다.</li><li>그러나 그림자가 제대로 표현이 되지 않아 합성처럼 보입니다.</li><li>고양이 그림자가 드리워질 부분을 선택하고 <b>그림자를 추가하라</b>는 프롬프트를 줍니다.</li></ul><p><img src="51_dalleinpainting_09.png"><br></p><h2 id="2-4-최종"><a href="#2-4-최종" class="headerlink" title="2.4. 최종"></a>2.4. 최종</h2><ul><li>여러 차례 시행착오를 거쳐 얻은 최종 그림입니다.</li><li>여전히 고양이가 합성처럼 느껴지지만, 전반적인 캔바스 속 그림 느낌과 비슷하기도 합니다.</li><li>뒷다리-엉덩이-꼬리 아래로 이어지는 부분의 그림자도 용인될 만큼은 추가되었기에 이 정도에서 멈추었습니다.</li><li>그럼에도 불구하고 <b>그림 속에 있을만한 고양이를 무리해서 현실로 끄집어 낸 느낌</b>이 적지 않습니다.</li><li><b>그림의 톤이 전체적으로 통일성있게 지정되다 보니 그런 것 같습니다.</b></li></ul><p><img src="51_dalleinpainting_10.png"><br></p><ul><li>inpainting만으로 그림을 그린 것이 <b>이 그림이 처음은 아닙니다.</b></li><li>이틀 전(5/17) 오후에 가능성을 확인하고 아쉬웠던 점(캔버스 크기, 디테일)를 보완해서 다시 작업했는데</li><li>그 때나 지금이나 3차 이후의 inpainting이 마음같이 잘 되지는 않는 것 같습니다.</li></ul><p><img src="51_dalleinpainting_14.png"><br></p><ul><li>inpainting 성능 개선이 필요한 것일 수도 있고,</li><li>제가 미숙한 것일 수도 있습니다.</li><li>그럼에도 불구하고 <b>원 포인트 수정을 하기에 가장 좋은 도구,</b></li><li><b>프롬프트 엔지니어링의 단점을 보와할 좋은 도구</b>인만큼 종종 사용해보려 합니다.</li></ul><h1 id="3-한번에-그린-그림과의-비교"><a href="#3-한번에-그린-그림과의-비교" class="headerlink" title="3. 한번에 그린 그림과의 비교"></a>3. 한번에 그린 그림과의 비교</h1><ul><li>저 단계들에서 사용한 프롬프트를 모두 넣고 한 번에 그림을 그려보았습니다.</li><li>inpainting을 반복하며 생각보다 시간이 많이 소요되었기에,</li><li>차라리 한 번에 그린 그림이 낫지 않나 하는 의구심이 들었습니다.</li></ul><p><img src="51_dalleinpainting_13.png"><br></p><ul><li>고양이가 캔버스 밖에 있다는 사실은 확실히 더 잘 전달됩니다.</li><li>그림 안은 그림처럼, 그림 밖은 실사처럼 연출되었기 때문입니다.</li><li>뒷발 아래 드리워진 그림자도 더 자연스럽습니다.</li><li>더 연습을 해봐야 겠지만, <b>inpainting은 둘리의 뿔처럼 포인트에만 적용을 하는 게 좋을 것 같습니다.</b></li></ul>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/General/">General</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/openai/">openai</category>
      
      <category domain="https://jehyunlee.github.io/tags/chatgpt/">chatgpt</category>
      
      <category domain="https://jehyunlee.github.io/tags/dalle/">dalle</category>
      
      
    </item>
    
    <item>
      <title>KBS 더보다 - 예술램프 인공지능 출연 후기</title>
      <link>https://jehyunlee.github.io/2024/05/16/General-50-theboda/</link>
      <guid>https://jehyunlee.github.io/2024/05/16/General-50-theboda/</guid>
      <pubDate>Thu, 16 May 2024 04:20:00 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;contributor: KBS 유동엽 기자&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;저의 AI 그림 전시와 판매가 KBS 기자님의 관심을 끌었나 봅니다.&lt;/li&gt;
&lt;li&gt;시사프로그램 &amp;lt;더 보다&amp;gt;의 유동엽 </description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p>contributor: KBS 유동엽 기자</p></blockquote><ul><li>저의 AI 그림 전시와 판매가 KBS 기자님의 관심을 끌었나 봅니다.</li><li>시사프로그램 &lt;더 보다&gt;의 유동엽 기자님께서 연락을 주셔서 인터뷰를 진행했습니다.</li><li>잘 만들어주신 방송이 5월 12일 본방송과 9시 뉴스에 나왔습니다.</li><li>며칠 지난 지금 방송 및 당일 인터뷰 후기를 간략히 정리해 봅니다.</li></ul><h1 id="1-인터뷰-예고-뉴스-방송"><a href="#1-인터뷰-예고-뉴스-방송" class="headerlink" title="1. 인터뷰, 예고, 뉴스, 방송"></a>1. 인터뷰, 예고, 뉴스, 방송</h1><ul><li>4월 19일 연구원에 방문해주신 방송진과 함께 인터뷰를 진행했고,</li><li>5월 9일에 예고가 나갔습니다.</li><li>김형석 작곡가께서 문을 열어주신 덕에 방송에 대한 기대감이 한껏 높아졌습니다.</li><li>예고 영상: <a href="https://www.youtube.com/watch?v=wgt2oX9XcRE">YouTube Link</a></li></ul><div class="video-container"><iframe src="https://www.youtube.com/embed/wgt2oX9XcRE" frameborder="0" loading="lazy" allowfullscreen></iframe></div><ul><li>5월 12일 방송 당일, 저녁 7시경 기자님께 문자를 받았습니다.</li><li><b>9시 뉴스에 나온다</b>는 말씀이었는데, 깜짝 놀랐습니다.</li><li>세종시에서 열리는 축제에 가족과 함께 나와있었기 때문에 늦지 않게 서둘러 귀가를 했습니다.<br></li></ul><p><img src="50_theboda_01.png"><br></p><ul><li>9시 뉴스를 틀어놓고 가족들과 함께 기다렸습니다.</li><li>뉴스가 끝나갈 무렵, 스포츠 소식 직전에 <b>“이어지는 시사프로그램 &lt;더 보다&gt;에서는…”</b>이라는 멘트와 함께 짧게 소개될 줄 알았습니다.</li><li>의외로 뉴스 시작 후 20분이 지나갈 무렵 적지 않은 비중으로 소개되었습니다.</li><li>YouTube 다시 보기 : (<a href="https://www.youtube.com/watch?v=9GKQMgNAJ_A">YouTube Link</a>)<br></li></ul><div class="video-container"><iframe src="https://www.youtube.com/embed/9GKQMgNAJ_A" frameborder="0" loading="lazy" allowfullscreen></iframe></div> <ul><li>인터뷰를 마친 후 여러 날이 지났을 때, 인터뷰를 하셨던 기자님께서 <b>“그림이 만들어진 과정을 모은 걸 고화질로 보내주시면 좋겠다”</b>는 요청을 주셔서 보내드렸는데,</li><li>해당 그림이 뉴스 시작부터 나오더군요.<br></li></ul><p><img src="50_theboda_02.png"><br><br><img src="50_theboda_03.png"><br></p><ul><li>뉴스에 나올 거라고 부모님들께는 먼저 알려드렸지만, 연락을 드리지 않은 지인들로부터 연락이 오기 시작했습니다.</li><li>그리고 잠시 후 밤 10시 30분, KBS 시사프로그램 <b>&lt;더 보다&gt;</b>의 <b>12회, 예술램프 인공지능?!</b> 이라는 제목으로 방영되었습니다.</li><li>YouTube 다시 보기 : (<a href="https://www.youtube.com/watch?v=UJbhUpxfgJA">YouTube Link</a>)<br></li></ul><div class="video-container"><iframe src="https://www.youtube.com/embed/UJbhUpxfgJA" frameborder="0" loading="lazy" allowfullscreen></iframe></div> <ul><li>기대와 함께 오래 진행한 인터뷰가 어떻게 편집될지 걱정을 많이 했습니다.</li><li>소위 악마의 편집 이야기도 많이 들었기 때문에 더 그랬습니다.</li><li>다행히 <b>전달하고자 하는 저의 생각과 주장을 너무 잘 담아주셨습니다.</b></li></ul><p><img src="50_theboda_06.png"></p><ul><li><b>저와 관련된 분량이 많다</b>는 기자님의 언질이 있었습니다만,</li><li>실제로 40분 분량 중 저와 관련된 부분이 7분이 좀 넘을 정도로 비중이 크게 나왔습니다.</li><li><b>생성 인공지능은 아는 만큼만 써야 한다</b>는 주장을 지속적으로 드리고 있는데 좋은 기회가 된 것 같습니다.</li></ul><p><img src="50_theboda_07.png"></p><ul><li>음악, IT, 법 등 여러 분야의 전문가들 인터뷰과 함께 어우러져 스토리를 탄탄하게 만들어주셔서 감사했습니다.</li><li>기자님을 포함해 다른 인터뷰이들과 한 자리에서 이야기를 나눈 느낌마저 들었습니다.</li><li>예술로 뻗어나가는 AI에 대해 많은 말씀을 담아준 제작진에게 다시 한번 감사 말씀을 드립니다.</li><li>시작과 끝을 35년 경력 김형석 작곡가의 호의적인 멘트로 담아주신 덕에 분위기가 매끄러웠다고 생각합니다.</li></ul><h1 id="2-방송-후"><a href="#2-방송-후" class="headerlink" title="2. 방송 후"></a>2. 방송 후</h1><h2 id="2-1-관련-보도"><a href="#2-1-관련-보도" class="headerlink" title="2.1. 관련 보도"></a>2.1. 관련 보도</h2><ul><li>당일 9시 뉴스 보도와 거의 동시에 KBS에서 <b>문서 기사</b>도 함께 나갔습니다.</li><li>Naver 뉴스 링크 : <a href="https://n.news.naver.com/article/056/0011719525?sid=105">그림부터 음악, 영상까지 AI가 ‘뚝딱’…저작권은?</a></li><li>종종 영상과 문서로 같은 뉴스를 볼 때가 있는데 이렇게 실시간으로 나가는 줄은 처음 알게 되었습니다.</li></ul><p><img src="50_theboda_05.png"><br></p><ul><li>그리고 방송 다음날(5.13.)<b>친절한 뉴스K</b>에서 영상을 인용해 해당 뉴스를 다루었습니다.</li><li>YouTube 다시 보기 : (<a href="https://www.youtube.com/watch?v=WRXuuuMJ_60">YouTube Link</a>)<br></li></ul><p><img src="50_theboda_04.png"><br></p><h2 id="2-2-댓글"><a href="#2-2-댓글" class="headerlink" title="2.2. 댓글"></a>2.2. 댓글</h2><ul><li><p>인터뷰 요청을 받았을 때부터 <b>악플</b>을 어느 정도 예상했습니다.</p></li><li><p>일전에 강연에서 관련 언급을 했다가 미술계 종사자로부터 이메일을 직접 받은 경험도 있고,</p></li><li><p>감히 예술가와 입장을 바꾸어 생각해보면 수십년간의 노력을 부정당하는 느낌일 것 같았습니다.</p></li><li><p>방송 내용에는 문제가 없다고 생각했기 때문에,</p></li><li><p><b>이 정도로 차분하게 담아주셨는데도 달리는 악플은 어쩔 수 없는 거다</b>라는 생각을 갖고 있습니다.</p></li><li><p>다행히 현 시점에서 본방, 뉴스, 기사 등에 별다른 악플은 보이지 않습니다.<br></p></li></ul><p><img src="50_theboda_08.png"><br></p><ul><li>반면, 1년 전에 나온 비슷한 기사에 달린 댓글은 공격적인 내용이 적지 않습니다.</li><li><b>무단표절과 관련된 이슈가 여전히 남아 있지만 공격성은 줄었습니다.</b></li><li>인식이 개선되었을 수도 있고, 작년의 폭발적인 부정적 반응이 다소 누그러졌을 수도 있습니다.</li><li><b>AI가 그린 그림이 미술대회 1등해서 난리난 미술계 근황 / 스브스뉴스</b>: : (<a href="https://www.youtube.com/watch?v=thsXGOkcGGg">YouTube Link</a>)<br></li></ul><p><img src="50_theboda_10.png"><br><br><img src="50_theboda_09.png"><br></p><h1 id="3-방송에-담기지-않은-이야기"><a href="#3-방송에-담기지-않은-이야기" class="headerlink" title="3. 방송에 담기지 않은 이야기"></a>3. 방송에 담기지 않은 이야기</h1><ul><li>방송 분량이 제한되어 있다 보니, 그리고 스토리를 매끄럽게 엮다 보니 모든 이야기가 담기지는 못했습니다.</li><li>방송에 담기지 않은 이야기 중 많은 이들과 공유하고 싶은 이야기를 하나 담고자 합니다.</li><li>생성 AI의 가장 큰 위험 중 하나가 <b>무단 학습과 이에 따른 의도치 않은 표절</b>입니다.</li></ul><ul><li>창작자는 독창적인 그림을 떠올리고 이를 프롬프트로 지시하더라도, AI가 학습한 정보를 바탕으로 그림을 형성하는 과정에서 과거에 학습한 그림이 나올 수 있습니다.</li><li>학습을 기반으로 하다 보니 어느 정도는 <b>예견된 일</b>이기도 하고, <b>AI 예술은 표절</b>이라는 주장의 근거가 되기도 합니다.</li><li>개인적으로는 <b>인간도 비슷하지 않나?</b> 라는 생각을 가지고 있습니다.</li><li>사람도 스승의 그림이 아니더라도 여러 디자인을 비롯한 상업미술 등 다양한 작가와 작품의 영향을 받습니다.</li><li>한 시대 여러 사람들이 집단적으로 영향을 주고 받으면 <b>화풍</b>이나 <b>사조</b>가 됩니다.</li></ul><ul><li>그럼에도 불구하고 결과물이 타인의 그림과 너무 비슷하면 싫습니다.</li><li>첫째, <b>자존심이 상하고</b> 둘째, <b>내게 스승일 수 있는 타인에게 피해를 주고 싶지 않기 때문</b>입니다.</li><li>그래서 <b>프롬프트에 특정 화가나 화풍의 이름을 명시하지 않습니다.</b></li><li>프롬프트에 스타일을 지시할 때는 오마주나 패러디를 할 때 뿐입니다.</li><li>일전에 참석한 AI 작가들과의 모임에서도 생각이 비슷한 분들을 많이 만났습니다.</li></ul><ul><li>그런데 얼마 전, 제가 그린 그림과 상당히 유사한 그림을 만났습니다.</li><li>강의와 함께 포스터 그림 의뢰를 받았습니다. -제 강의 포스터에 한정해 의뢰를 수락합니다.</li><li><b>대리석 원기둥 옆면을 따라 대리석 계단이 나선형으로 놓여 있는 위를 한 사람이 올라가는 모습</b>을 떠올리고 프롬프트를 입력했는데,</li><li>이와 조금 다르지만 <b>대리석 구멍의 안쪽 면을 따라 놓인 계단으로 올라가는 그림</b>이 나왔습니다.<br></li></ul><p><img src="50_theboda_11.png"><br></p><ul><li>의도와는 다르지만 이 그림도 괜찮고, 굳이 의도를 구현할 필요는 없어서 이를 토대로 포스터가 만들어졌습니다.</li></ul><ul><li>그리고 강의를 마친 언젠가 facebook 담벼락에서 상당히 유사한 그림을 발견합니다.</li><li><b>unknown photographer</b>라고 되어 있는 이 그림은 <b>제가 이걸 보고 베꼈다</b>고 해도 믿을 것 같았습니다.<br></li></ul><p><img src="50_theboda_12.png"><br></p><ul><li>뒤늦게라도 원작자를 찾기 위해 검색을 해 보았지만 찾을 수 없었습니다.</li><li>이 사진이 각인된 아이폰 케이스까지 버젓이 판매되는 걸 보면 <b>굉장히 잘 알려진 사진</b>이거나 <b>원작자가 제품 제작에 참여했거나 실시권을 허가한 사진</b>으로 보이는데, 끝내 알아내지 못했습니다.</li></ul><p><img src="50_theboda_13.png"><br></p><ul><li><b>구글 이미지 검색</b>에 제가 만든 그림을 넣고 검색하면 상당히 유사한 이미지가 대량으로 발견되고,</li><li>이 중 적지 않은 수는 Midjourney, Playground AI 등 <b>생성AI의 작품</b>입니다.</li><li>제 의도와 관계없이 <b>원작을 베낀 것</b>처럼 느껴진다는 것에 이어 <b>그저 그런 그림 중 하나</b>라고 느껴져 기분이 좋지 않았습니다.</li></ul><p><img src="50_theboda_14.png"><br></p><ul><li>생성 AI로 그림을 그릴 때도 작가의 구상과 이를 구현하기 위한 프롬프트 작성, 수정, 작품 선별이 이루어집니다.</li><li>이런 새로운 형태의 노력을 감안할 때 저작권이 주어져도 충분하다고 느끼지만,</li><li>그 전에 <b>의도치 않은 표절</b>에 대한 고민이 함께 이루어져야 한다고 믿습니다.</li></ul><ul><li>이는 <b>사람 간에도 음악과 미술에서 수없이 되풀이되어 온 문제</b>입니다.</li><li><b>집단적으로 영향을 주고 받는 일을 사람은 해도 되고 AI는 안 된다는 논리도 빈약</b>합니다.</li><li>그리고 사람을 닮아가는 생성 AI의 미래를 생각할 때 <b>쉽지 않은 문제</b>가 될 것입니다.</li><li>숙제가 많은 만큼 발전 가능성이 큰 분야라고 생각합니다.</li></ul>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/General/">General</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/openai/">openai</category>
      
      <category domain="https://jehyunlee.github.io/tags/chatgpt/">chatgpt</category>
      
      <category domain="https://jehyunlee.github.io/tags/dalle/">dalle</category>
      
      
    </item>
    
    <item>
      <title>미술전 전시 - 숨은 예술가들 2024</title>
      <link>https://jehyunlee.github.io/2024/04/12/General-49-hiddenartists/</link>
      <guid>https://jehyunlee.github.io/2024/04/12/General-49-hiddenartists/</guid>
      <pubDate>Fri, 12 Apr 2024 07:31:00 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;contributor: 서울대학교 동창회&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;서울대학교 총동창회와 미술대학 동창회에서는 2023년에 이어 2024년에 특색있는 행사를 열었습니다.&lt;/li&gt;
&lt;li&gt;“전공이 미술이</description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p>contributor: 서울대학교 동창회</p></blockquote><ul><li>서울대학교 총동창회와 미술대학 동창회에서는 2023년에 이어 2024년에 특색있는 행사를 열었습니다.</li><li>“전공이 미술이 아님에도 불구하고 그림에 대한 열정을 이어오고 있는 동문들의 작품을 소개”하는 자리를 여는,</li><li><b>“숨은 예술가들”</b>이라는 이름의 행사입니다.</li></ul><blockquote><p><a href="https://www.snua.or.kr/community/notice?md=v&bbsidx=959">서울대학교총동창회: 숨은 예술가들 2023 공지 (2023.10.10.)</a><br><a href="https://www.hellodd.com/news/articleView.html?idxno=103868">helloDD: 과학자·의사·목사 작가 ‘특별한 전시회’ “AI작품부터 예술, 문화 공존”</a></p></blockquote><ul><li><a href="https://jehyunlee.github.io/2024/01/22/General-38-mya/"><b>먀스터피스</b></a>가 없었다면 숨은 예술가들도 없었을 것입니다.</li><li>이 행사에서 만난 분께 추천을 받아 미술전에 출품을 하고 작품을 판매하는 경험을 할 수 있었습니다.</li><li>너무 감사한 인연이지만, 본인께 누가 될까 싶어 이름은 공개하지 않기로 합니다.</li><li>기회를 주신 모든 분들께 감사드리며 당시 전시한 작품에 대한 설명을 기록으로 남깁니다.</li></ul><h1 id="1-작품"><a href="#1-작품" class="headerlink" title="1. 작품"></a>1. 작품</h1><h2 id="1-1-그림"><a href="#1-1-그림" class="headerlink" title="1.1. 그림"></a>1.1. 그림</h2><p><img src="cropped_image.webp" alt="은행잎나무"><br></p><ul><li>챗달이(ChatGPT DALL.E3)로 만든 그림에 <b>은행잎나무</b>라는 제목을 붙였습니다.</li><li>한 번에 그려진 그림은 아닙니다.</li><li>의도를 반영하고자, 그리고 보기 좋은 그림을 만들고자 다양한 시도를 했습니다.</li><li>여러 차례 프롬프트를 바꾸기도 하고 재생성을 하기도 하면서 중간 과정들을 거쳐 최종 그림을 얻었습니다.</li></ul><p><img src="49_hiddenartists_01.png"><br></p><h2 id="1-2-의도"><a href="#1-2-의도" class="headerlink" title="1.2. 의도"></a>1.2. 의도</h2><blockquote><p><a href="https://twitter.com/jathansadowski/status/1625245803211272194?lang=en">Habsburg AI</a><br><a href="https://www.smithsonianmag.com/smart-news/distinctive-habsburg-jaw-was-likely-result-royal-familys-inbreeding-180973688/">Smithonian Magazine: The Distinctive ‘Habsburg Jaw’ Was Likely the Result of the Royal Family’s Inbreeding</a><br><a href="https://commons.wikimedia.org/wiki/File:Ginkgo-Gegenlicht-web.jpg">wikimedia commons: Ginko-Gegenlicht-web.jpg</a></p></blockquote><ul><li>전시회를 떠나 최근 주목받는 생성형 인공지능(Generative AI) 모델들을 보며 떠오른 이미지가 있었습니다.</li><li>AI 모델은 데이터에서 만들어지지만, 생성형 AI 모델은 데이터를 만들어 냅니다.</li><li>이 능력을 바탕으로 AI 모델을 개발하는 분들이 부족한 데이터를 AI 모델을 이용해 채웁니다.</li><li>특히 많은 <b>오픈소스 언어 모델</b> 개발에 <b>GPT-4를 이용해 생성된 데이터</b>가 사용되고 있습니다.</li><li>이렇게 자가교배식으로 개발되는 AI를 <a href="https://twitter.com/jathansadowski/status/1625245803211272194?lang=en"><b>Habsburg AI</b></a>라고 합니다.</li><li>언뜻 보기에 매우 효율적인 방법이지만 <a href="https://www.smithsonianmag.com/smart-news/distinctive-habsburg-jaw-was-likely-result-royal-familys-inbreeding-180973688/">유전병을 유발할 수 있습니다.</a></li></ul><p><img src="49_hiddenartists_02.png"><br></p><ul><li>합스부르크 왕가의 턱이 길어졌던 것처럼, 합스부르크 AI 모델은 편향(bias)과 환각(hallunination) 계승이 문제가 됩니다.</li><li>이를 그림으로 표현하고자 <b>나무보다 훨씬 거대하게 자란 나뭇잎</b>을 주 소재로 삼았습니다.</li><li><b>구름에 닿을 만큼 자란 나뭇잎</b>을 표현했는데, 이 구름은 높이, 즉 영향력을 의미하기도 하지만 </li><li>한편으로는 <b>생성형 AI가 사람들에게 닿는 경로인 클라우드 컴퓨팅</b>을 의미하기도 합니다.</li><li>클라우드 컴퓨팅이라 구름을 그린다는 것이 다소 직설적이라 촌스럽게 느껴지지만,</li><li>그림의 미적 요소가 향상되는 듯 하여 채택했습니다.</li></ul><ul><li>대상으로는 <b>은행잎</b>을 선정했습니다.</li><li>아름답기도 하지만 생성형 AI가 <b>환각</b>을 일으키는 대상이기 때문입니다.</li><li>은행나무는 활엽수가 아니라 침엽수입니다.</li><li>대개 침엽수(針葉樹)라면 소나무처럼 바늘 모양의 잎을 가지지만 은행잎은 이 바늘 모양의 잎이 다닥다닥 붙어 넓은 모양을 이루고 있는, 매우 특이한 침엽수입니다.</li></ul><p><img src="49_hiddenartists_03.jpg" alt="source: wikimedia commons"><br></p><ul><li>그러나 생성AI (정확히는 ChatGPT DALL.E3)는 이런 특징을 모릅니다.</li><li>그저 넓은 나뭇잎이니 그럴싸하게 잎맥을 그려 넣지만 틀린 이야기입니다.</li><li>표현이 덜 된 부분이 있습니다.</li><li>바닥에 굴러다니는 낙엽 대신, 말라 굴러다니는 나무를 놓고 싶었는데 여러번 시도해도 잘 안 되더군요.</li><li>관심을 받지 못하고 말라비틀어지는 실세계를 표현하고 싶었습니다.</li></ul><h1 id="2-전시"><a href="#2-전시" class="headerlink" title="2. 전시"></a>2. 전시</h1><blockquote><p><a href="https://www.upscayl.org/">Upscayl</a></p></blockquote><h2 id="2-1-Upscale"><a href="#2-1-Upscale" class="headerlink" title="2.1. Upscale"></a>2.1. Upscale</h2><ul><li>DALL.E에서 만드는 그림은 1024 x 1024가 기본입니다.</li><li>종횡비를 16:9로 지정하면 1792 x 1024가 되긴 하지만 인쇄엔 역부족입니다.</li><li>그냥 보간(interpolation)을 이용해 확대하면 전체적으로 흐려집니다.</li><li>딥러닝을 이용한 업스케일이 이럴 때 유용합니다.</li><li><a href="https://www.upscayl.org/"><b>Upscayl</b></a>에서 무료로 업스케일링을 할 수 있습니다.</li></ul><p><img src="49_hiddenartists_07.png"><br></p><ul><li>여러 옵션 중 <b>General Photo (Fast REAL-ESRGAN)</b>을 선택해 빠르게 작업합니다.</li></ul><h2 id="2-2-인쇄"><a href="#2-2-인쇄" class="headerlink" title="2.2. 인쇄"></a>2.2. 인쇄</h2><p><img src="49_hiddenartists_04.jpg" alt="그림 옆 운동화: 크기 비교용"><br></p><ul><li>대덕특구의 Space-S에서 인쇄에 도움을 주셨습니다.</li><li>처음에는 크게 걸 욕심에 대형 아크릴 인쇄를 했습니다.</li><li>그런데 <b>못으로 벽에 걸어야 한다</b>는 규정이 걸림돌이 되었습니다.</li><li>구멍을 뚫고 그림 뒤에 철사를 걸면 된다고 하는데, 작업 시간을 도저히 낼 수 없었습니다.</li></ul><p><img src="49_hiddenartists_06.jpg"><br></p><ul><li>아쉬운대로 시중에서 당일 구할 수 있던 최대 크기인 A3 크기로 다시 인쇄를 부탁드렸고</li><li>아크릴이 아닌 종이에 인쇄를 해서 액자에 넣어 보냈습니다.</li><li>역시 Space-S에 인쇄를 부탁드려 고품질로 인쇄를 할 수 있었고,</li><li>한켠에 볼펜으로 서명을 해서 넣었습니다.</li></ul><h2 id="2-3-전시"><a href="#2-3-전시" class="headerlink" title="2.3. 전시"></a>2.3. 전시</h2><blockquote><p><a href="https://www.hellodd.com/news/articleView.html?idxno=103868">helloDD: 과학자·의사·목사 작가 ‘특별한 전시회’ “AI작품부터 예술, 문화 공존”</a></p></blockquote><ul><li>4월 2일(화)부터 행사가 진행되었지만 평일이라 개막식에 참석할 수 없었습니다.</li><li><a href="https://www.hellodd.com/news/articleView.html?idxno=103868">helloDD</a> 기사를 통해 뒤늦게라도 현장 사진을 볼 수 있는 것이 위안입니다.</li></ul><p><img src="49_hiddenartists_08.png"><br></p><ul><li>정식으로 도록에 작품이 실린 것을 확인 후 가족에게 알렸습니다.</li><li>바쁜 일정으로 제출 일정을 못맞출 수 있다고 생각했고,</li><li>혹시나 주최측에서 거절이라도 당하면 어쩔까 싶은 두려움도 있었습니다.</li><li>정식 미술전에는 첫 제출이니까요.</li></ul><p><img src="49_hiddenartists_11.jpg"><br></p><ul><li>부모님께서 먼저 다녀가셔서 축하 화분을 놓아주셨습니다.</li><li>저는 가족들과 함께 일요일에야 가서 작품을 볼 수 있었습니다.</li><li>다른 작품과 함께 전시된 그림을 보니 느낌이 새롭더군요.</li></ul><p><img src="49_hiddenartists_05.jpg" alt="전시장에 걸린 그림"><br></p><h2 id="2-4-판매"><a href="#2-4-판매" class="headerlink" title="2.4. 판매"></a>2.4. 판매</h2><ul><li>작품을 제출할 때, 작품 판매가를 적어 내는 칸이 있었습니다.</li><li>누가 내 작품을 사겠나 싶었지만 형식이 그러하니 적어 냈습니다.</li><li>제 기준으로 적지 않은 금액을 썼는데, 쓰면서도 느낌이 이상했습니다.</li></ul><ul><li>전시회 이틀째인 4월 3일, <b>그림이 팔렸다</b>는 전화를 받았습니다.</li><li>전날 거의 밤을 샜기 때문에 오전에 정신없는 일정을 일단 마무리하고 15분 알람을 맞춘 후 의자에서 잠시 눈을 붙이던 중이었습니다.</li><li>비몽사몽간에 받은 전화인데도 잠이 깨더군요.</li><li><b>품질보증서를 작성해야 하니 폐관 전에 꼭 방문해달라</b>는 요청이었습니다.</li></ul><ul><li>일요일에 가족과 함께 들른 전시회에서 품질보증서를 작성했습니다.</li><li>내 그림이 인쇄되어 있고 아래 <b>진품임을 보증한다</b>는 내용의 한 장짜리 서류였습니다.</li><li>아무리 생각해도 장난으로 살 금액은 아닌데, 누구였을까 궁금하던 차에 행사를 기획하신 분을 만나 이야기를 들을 수 있었습니다.</li><li><b>80대의 현역 작가분께서 구입하셨다</b>고 하더군요.</li></ul><ul><li>깜짝 놀랐습니다.</li><li>작품이 걸린 것만도 너무 기분이 좋았는데, </li><li>판매까지 되고, </li><li>심지어 작가께서 선택해주셨다는 데 더 놀랐습니다.</li><li>한편으로는 AI 그림이 낯설거나 거부감이 들 수도 있는데 선택해주신 넓은 마음이 감사했습니다.</li></ul><h1 id="3-맺음말"><a href="#3-맺음말" class="headerlink" title="3. 맺음말"></a>3. 맺음말</h1><ul><li>몇몇 친구들과 가족에게는 이야기했습니다만, 은퇴 후 개인전을 하는 꿈이 있습니다.</li><li>그림을 직업으로 선택하지는 않았지만 너무나 좋아하기 때문입니다.</li><li>사람들과 자주 어울리지 않는 성격상 감정을 배설하는 거의 유일한 통로이기도 하고</li><li>다른 재주가 별로 없기도 합니다.</li></ul><ul><li>모순되지만, 그러면서도 미술전 전시를 타진해본 적은 없습니다.</li><li>추천을 받아 전시를 하고 판매까지 하면서 자신감이 많이 생겼습니다.</li><li>사실 업무적으로 너무 힘든 기간이었는데 여기서 얻은 기쁨으로 버틸 정도였습니다.</li><li>앞으로도 본업을 우선하겠지만, 혼자 그림을 그리기보다 더 많은 분들과 나눌 기회를 적극적으로 찾아보려고 합니다.</li></ul><ul><li><b>도움주신 모든 인연과 지지해준 가족들께 감사드립니다.</b></li></ul><p><img src="49_hiddenartists_12.png" alt="행사 포스터"><br></p><p><img src="49_hiddenartists_13.jpg" alt="도록 표지"><br></p><p><img src="49_hiddenartists_14.jpg" alt="도록 내부"><br></p>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/General/">General</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/openai/">openai</category>
      
      <category domain="https://jehyunlee.github.io/tags/chatgpt/">chatgpt</category>
      
      <category domain="https://jehyunlee.github.io/tags/dalle/">dalle</category>
      
      
    </item>
    
    <item>
      <title>KIER 강연 - AI활용 업무 효율화 방안</title>
      <link>https://jehyunlee.github.io/2024/04/03/General-48_kierworkaccellec/</link>
      <guid>https://jehyunlee.github.io/2024/04/03/General-48_kierworkaccellec/</guid>
      <pubDate>Wed, 03 Apr 2024 12:04:00 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;지난 3/28일, 한국에너지기술연구원에서 출연연 분들을 대상으로 업무효율화 강의를 드렸습니다.&lt;/li&gt;
&lt;li&gt;ChatGPT를 소개하는 강의는 많고 신기한 기능들을 소개하는 영상도 많지만&lt;/li&gt;
&lt;li&gt;글쓰기를 제외하고 행정과 연구에</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>지난 3/28일, 한국에너지기술연구원에서 출연연 분들을 대상으로 업무효율화 강의를 드렸습니다.</li><li>ChatGPT를 소개하는 강의는 많고 신기한 기능들을 소개하는 영상도 많지만</li><li>글쓰기를 제외하고 행정과 연구에 어떻게 사용하는지를 알려주는 강의는 적은 듯 합니다.</li><li>저의 경험들을 토대로 여러분에게 도움이 될만한 정보들을 정리하려고 노력했습니다.</li><li>발표 영상 : (<a href="https://youtu.be/0BiaXp4vFOw">Youtube Link</a>)<br></li></ul><div class="video-container"><iframe src="https://www.youtube.com/embed/0BiaXp4vFOw" frameborder="0" loading="lazy" allowfullscreen></iframe></div> <ul><li>영상에서 소개드린 자료들은 따로 정리하여 공개했습니다. (<a href="https://jehyunlee.github.io/2024/04/02/General-47_kierworkaccel/">해당 글 링크</a>)</li><li>도구를 사용하는 법은 위 글에 첨부드린 자료를 통해 보시기 바라며,</li><li>SW 사용법 자료에 담겨 있지 않은 내용들을 본 글을 통해 다시 한번 말씀드립니다.</li></ul><h3 id="1-딥러닝-언어모델이-전부가-아닙니다"><a href="#1-딥러닝-언어모델이-전부가-아닙니다" class="headerlink" title="1. 딥러닝, 언어모델이 전부가 아닙니다."></a>1. 딥러닝, 언어모델이 전부가 아닙니다.</h3><ul><li>거대언어모델 같은 대형 모델은 완성형 장난감과 같습니다.</li><li>스티커를 붙이거나 페인트를 칠하는 정도의 fine tuning에 속하는 수준의 개조는 할 수 있어도, </li><li>내 일에 딱 맞고 가벼운 프로그램을 만들 수는 없습니다.</li></ul><p><img src="48_kierworkaccellec_04.png"></p><ul><li>코딩을 하는 약간의 수고를 감수하면 맞춤형 프로그램을 만들 수 있고,</li><li>이 프로그램은 세상에는 없는 프로그램일 수 있습니다.</li><li><b>그리고 코딩은 언어모델이 가장 잘 하는 일 중 하나입니다.</b></li></ul><h3 id="2-포스터는-직접-만들어-보자"><a href="#2-포스터는-직접-만들어-보자" class="headerlink" title="2. 포스터는 직접 만들어 보자."></a>2. 포스터는 직접 만들어 보자.</h3><ul><li>이 정도 행사 포스터는 직접 만드실 수 있습니다.</li><li>조금 재미있는 포스터를 만들려면, <b>메시지를 시각화</b>해서 담으면 좋습니다.</li><li>이번 행사를 준비하면서 과거의 비효율적인 습관에 균열을 내고 싶다는 생각이 들었습니다.</li><li>이 광경을 <b>까만 돌이 대각선으로 깨진 가운데 균열에 꽃이 핀 모습</b>으로 형상화했습니다.</li><li>글자는 <b>Data Analytst</b>로 넣을 수 있지만(<a href="https://jehyunlee.github.io/2023/12/25/General-33-ChatGPT_DataAnalysis/">링크</a>) <b>파워포인트</b> 작업이 훨씬 더 편합니다.</li></ul><p><img src="48_kierworkaccellec_05.png" alt="첫 번째 포스터"></p><ul><li>그리고 피드백이 매우 중요합니다.</li><li>내가 알지 못하는 예기치 못한 반응을 상상하려면 타인의 시선이 필요합니다.</li><li><b>봄인데 색이 좀 어둡지 않느냐</b>는 의견을 받아 다음과 같이 배경색을 밝게 바꾸고,</li><li>하얀 배경에 어울리도록 다른 요소들을 수정했습니다.</li></ul><p><img src="48_kierworkaccellec_06.png" alt="두 번째 포스터"></p><ul><li>그리고 이 두 번째 포스터에서 <b>너무 추상적이다.</b>라는 피드백을 받았습니다.</li><li>이쪽 세계에 사는 저는 너무 잦은 입력을 받아 식상하다고 느끼지만 다른 분 관점에서는 다를 수 있습니다.</li><li>겸허하게 지적을 수용하고 클리셰를 적용합니다.</li></ul><p><img src="48_kierworkaccellec_07.png" alt="세 번째, 최종 포스터"></p><ul><li>그래서 이와 같은 포스터가 만들어졌고,</li><li>디자이너의 손을 거쳐 약도와 글꼴이 수정되어 최종 버전이 나왔습니다.</li></ul><p><img src="240328_%EC%97%85%EB%AC%B4%ED%9A%A8%EC%9C%A8%ED%99%94_%ED%8F%AC%EC%8A%A4%ED%84%B0.png" alt="행사 포스터"></p><h3 id="3-이렇게-시작했습니다"><a href="#3-이렇게-시작했습니다" class="headerlink" title="3. 이렇게 시작했습니다."></a>3. 이렇게 시작했습니다.</h3><ul><li>종종 이런 질문들을 받습니다.</li></ul><blockquote><p><b>“어떻게 에너지연에서 이런 일을 했어요?”</b></p></blockquote><ul><li>IT, AI가 주력인 ETRI나 KISTI라면 이런 일을 하는 것이 자연스러울텐데, 에너지연이라 의외라는 질문입니다.</li><li>또 이런 질문도 받습니다.</li></ul><blockquote><p><b>“연구원이 이런 일을 해요?”</b></p></blockquote><ul><li>이 질문은 저와 가까운 분들에게는 조금 더 솔직하게 이렇게 받기도 합니다.</li></ul><blockquote><p><b>“논문 안 써요?”</b>, <b>“연구 안 해요?”</b></p></blockquote><ul><li>이 질문들에 대한 답을 회피한 건 아니었지만 제대로 말씀드릴 기회가 없었습니다.</li><li>이번 기회에 다음과 같이 말씀을 드렸습니다.</li></ul><p><img src="48_kierworkaccellec_01.png"></p><ul><li>논문 못 쓰는 건 별로 문제가 된다고 느끼지 않습니다.</li><li>교수와 달리 출연연은 입사 후 별 문제를 일으키지 않으면 tenure라 불리는 정년을 보장해 줍니다.</li><li><b>단기 실적에 얽매이지 말고 장기적인 안목으로 문제를 찾고 해결하라</b>는 메시지로 인지하고 있습니다.</li></ul><ul><li>그리고, 5년간의 회사 생활은 제게 <b>“의미 있는 일이란 무엇인가”</b>라는 화두를 주었습니다.</li><li>기초과학을 지원해야 한다는 당위성과 별개로, 응용성도 없고 기초도 아닌 무의미한 일들이 많습니다.</li><li>한 사람을 성장시키는 정도의 의미 정도밖에 없는 일들이지만 여기에 매인 이들을 생각보다 많이 만납니다.</li><li><b>이 시점에서 제가 쓸 수 있는 논문보다 세상에 미칠 수 있는 임팩트가 더 클 것</b>이라는 생각을 했습니다.</li><li>그리고 <b>임팩트는 꼭 첨단에서 오지 않으며</b>, 바꿔 말하면 <b>이 정도 수준도 달성하지 못한 것이 오늘날 출연연의 현실</b>이기 때문에 <b>내 직장을 데이터 기반 연구가 불가능하고 낭비가 심한 이 상태로 방치할 수 없다</b>는 판단을 하고 있습니다.</li></ul><ul><li><b>제 커리어를 걱정해 주시는 분도 있습니다.</b> 선의라고 생각합니다.</li><li>말씀은 감사하지만 <b>의미 있는 일을 재밌게 한다면 커리어는 따라 올 것</b>이라고 믿고 있습니다.</li><li>하나 걸리는 게 <b>유지보수의 늪</b>입니다.</li><li>솔직히 힘이 들며, 업무로 인정받지 못하는 경우도 많이 있습니다.</li><li>그러나 <b>개발이 출산이라면 유지보수는 육아입니다.</b></li><li>유지보수 없이는 개발이 무의미하기에 출연연의 자유도를 활용해 스스로 업무로 정의하고 끌고 나가고 있습니다.</li></ul><p><img src="48_kierworkaccellec_02.png"></p><ul><li>그리고 짧다면 짧고 길다면 긴 인생 속에서 많은 이들에게 격려와 도움을 받았습니다.</li><li><b>열심히 한다면 언젠가는 외롭지 않을 것</b>이라는 믿음을 가지고 있으며</li><li>실제로 처음에는 혼자 했지만 어느 새 옆에 한 사람, 두 사람, 그리고 제법 큰 모임이 함께 해 주고 계십니다.</li><li>모두 감사한 분들입니다.</li></ul><h3 id="4-당부의-말씀"><a href="#4-당부의-말씀" class="headerlink" title="4. 당부의 말씀"></a>4. 당부의 말씀</h3><p><img src="48_kierworkaccellec_03.png"></p><ul><li>그런데 조심하셔야 합니다.</li><li>이런 일이 <b>섣불리 나서기 힘든 일</b>인 만큼, 그리고 <b>누군가에게 시킨다고 되는 일이 아닌</b> 만큼,</li><li>어쩌다 한 명의 능력자가 보이면 말라 죽을 때까지 일을 시켜 <b>황금알을 낳는 거위의 배를 갈라버리는 일</b>이 빈번합니다.</li><li>조직 입장에서는 마른 걸레 하나를 최대한 잘 짜서 써먹었다고 볼 수도 있겠습니다만</li><li>이런 싹을 옆에서 바라보는 다른 싹들로 하여금 <b>이러면 안되겠다는 심정으로 숨게 만드는 일</b>입니다.</li><li><b>말려 죽인 싹이 하나로 끝나지 않는다는 말씀</b>입니다.</li></ul><ul><li>주변의 시기를 받을 만큼 격려와 응원을 해줘야 다른 싹들이 이를 보고 <b>“나도 한번 해볼까?”</b>라는 생각을 합니다.</li><li>다행히 저는 잘 대우받았고 주변에 계신 많은 분들을 알 수 있었습니다.</li><li>이 분들을 지키고 새로운 싹을 계속 찾기 위해서라도 새싹은 보호받아야 합니다.</li></ul><ul><li>오늘도 어딘가에서 자라는 새싹들이 큰 그늘을 드리우는 나무가 되기를 바라며, 항상 응원합니다.</li></ul>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/General/">General</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/dall-e/">dall.e</category>
      
      <category domain="https://jehyunlee.github.io/tags/chatgpt/">chatgpt</category>
      
      <category domain="https://jehyunlee.github.io/tags/data-visualization/">data visualization</category>
      
      <category domain="https://jehyunlee.github.io/tags/data-analyst/">data analyst</category>
      
      <category domain="https://jehyunlee.github.io/tags/scispace/">scispace</category>
      
      <category domain="https://jehyunlee.github.io/tags/perplexity/">perplexity</category>
      
      
    </item>
    
    <item>
      <title>ChatGPT 활용 KIER 강의자료 중 업무효율화 SW</title>
      <link>https://jehyunlee.github.io/2024/04/02/General-47_kierworkaccel/</link>
      <guid>https://jehyunlee.github.io/2024/04/02/General-47_kierworkaccel/</guid>
      <pubDate>Tue, 02 Apr 2024 10:22:00 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;한국에너지기술연구원에서 출연연을 대상으로 업무효율화 강의를 드렸습니다.&lt;/li&gt;
&lt;li&gt;한시간 반 가량의 발표 중 업무효율화 관련 프로그램을 여럿 소개드렸고,&lt;/li&gt;
&lt;li&gt;보안성이 없는 공개된 프로그램들의 사용법을 정리하였습니다.&lt;</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>한국에너지기술연구원에서 출연연을 대상으로 업무효율화 강의를 드렸습니다.</li><li>한시간 반 가량의 발표 중 업무효율화 관련 프로그램을 여럿 소개드렸고,</li><li>보안성이 없는 공개된 프로그램들의 사용법을 정리하였습니다.</li></ul><blockquote><p><a href="240328_%EC%9D%B4%EC%A0%9C%ED%98%84_%EC%97%85%EB%AC%B4%ED%9A%A8%EC%9C%A8%ED%99%94SW%EC%A0%95%EB%A6%AC%EC%9E%90%EB%A3%8C.pdf"><b>업무효율화 SW 정리자료 다운로드</b></a></p></blockquote><ul><li>총 <b>29페이지 분량</b>에 5종 SW의 6가지 사용법을 간결하게 담았습니다.<br></li></ul><p><img src="47_kierworkaccel_01.png" alt="목차"></p><ul><li>강연에서 말씀드린 시연 화면을 기본으로 담고,</li><li>각 프로그램별 <b>장점</b>, <b>단점</b>, <b>유료 옵션</b>을 담았습니다.</li><li><b>스마트폰 앱</b>과 <b>크롬/엣지 확장프로그램</b>을 지원하는 프로그램은 링크를 달았습니다.<br></li></ul><p><img src="47_kierworkaccel_02.png" alt="perplexity 개요"></p><ul><li>논문이나 보고서처럼 영문으로 된 pdf 문서를 자주 보는 입장에서 <b>scispace</b>가 매우 큰 도움이 됩니다.</li><li>유료 사용시 지능이 점프한다는 느낌이 듭니다. 가급적 유료 사용을 권장합니다.</li><li>강연에서 부족했던 각 기능에 대한 설명을 보완하였습니다.<br></li></ul><p><img src="47_kierworkaccel_03.png" alt="scispace copilot 사용 화면"></p><ul><li><b>ChatGPT</b>의 <b>Data Analytics</b>는 높은 자유도를 자랑합니다.</li><li>데이터는 물론 각종 라이브러리 업로드와 시각화의 자유를 누리시기 바랍니다.<br></li></ul><p><img src="47_kierworkaccel_04.png" alt="scispace copilot 사용 화면"></p><ul><li>코딩을 배워야만 하는 시대는 이미 지난 것으로 생각됩니다.</li><li>Computational thinking을 학습하는 도구로서의 코딩을 즐기시는 한편,</li><li>급한 업무는 여러 도구를 사용해 삶의 여유를 누리시기 바랍니다.</li></ul>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/General/">General</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/dall-e/">dall.e</category>
      
      <category domain="https://jehyunlee.github.io/tags/openai/">openai</category>
      
      <category domain="https://jehyunlee.github.io/tags/chatgpt/">chatgpt</category>
      
      <category domain="https://jehyunlee.github.io/tags/data-analyst/">data analyst</category>
      
      <category domain="https://jehyunlee.github.io/tags/scispace/">scispace</category>
      
      <category domain="https://jehyunlee.github.io/tags/perplexity/">perplexity</category>
      
      
    </item>
    
  </channel>
</rss>
