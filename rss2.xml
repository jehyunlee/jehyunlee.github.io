<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Pega Devlog</title>
    <link>https://jehyunlee.github.io/</link>
    
    <atom:link href="https://jehyunlee.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>Pega&#39;s Development log for myself and others</description>
    <pubDate>Sun, 19 May 2024 07:02:14 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>생성 AI 연구 활용 가이드</title>
      <link>https://jehyunlee.github.io/2024/05/19/General-52-genairesearch/</link>
      <guid>https://jehyunlee.github.io/2024/05/19/General-52-genairesearch/</guid>
      <pubDate>Sun, 19 May 2024 05:18:00 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;ChatGPT가 등장한 직후부터 연구, 교육계가 들썩였습니다.&lt;/li&gt;
&lt;li&gt;당장의 괴로운 글쓰기를 해결할 수 있기 때문에 많은 관계자들의 관심을 끌었습니다.&lt;/li&gt;
&lt;li&gt;그만큼 뜨거웠던 찬반에 대한 논의 결과 정리되고 있는 내용</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>ChatGPT가 등장한 직후부터 연구, 교육계가 들썩였습니다.</li><li>당장의 괴로운 글쓰기를 해결할 수 있기 때문에 많은 관계자들의 관심을 끌었습니다.</li><li>그만큼 뜨거웠던 찬반에 대한 논의 결과 정리되고 있는 내용을 요약합니다.</li></ul><h1 id="1-결과"><a href="#1-결과" class="headerlink" title="1. 결과"></a>1. 결과</h1><blockquote><p><a href="genai_research_ko.pdf"><b>PDF 다운로드 링크: Korean</b></a><br><a href="genai_research_en.pdf"><b>PDF download link: English</b></a></p></blockquote><p><img src="genai_research.png"></p><ul><li>국내외 여러 기관에서 관련 가이드를 제시했습니다.</li><li>본 자료에서는 <b>해외 기관 중심으로 8곳</b>의 자료를 담았습니다만,</li><li>그간 언론이나 보도자료 등을 통해 보았던 다른 곳의 가이드도 대부분 대동소이합니다.</li><li>따라서 <b>중요한 내용은 모두 담겼다</b>고 볼 수 있습니다.</li><li>이미지 파일에 빠진 링크는 <a href="genai_research_ko.pdf"><b>PDF 파일</b></a>에서 확인하실 수 있습니다. </li></ul><h1 id="2-가이드-제작-방법"><a href="#2-가이드-제작-방법" class="headerlink" title="2. 가이드 제작 방법"></a>2. 가이드 제작 방법</h1><ul><li>많은 곳에서 나온 가이드를 모두 찾아 읽으려면 시간이 많이 갑니다.</li><li>읽은 내용을 정리하는데도 시간과 노력이 많이 듭니다.</li><li><b>생성 AI 도구의 힘을 빌려 이를 편하게 처리했습니다.</b></li><li>그 과정을 공유드립니다.</li></ul><h2 id="2-1-정보-수집-perplexity"><a href="#2-1-정보-수집-perplexity" class="headerlink" title="2.1. 정보 수집 : perplexity"></a>2.1. 정보 수집 : perplexity</h2><blockquote><p><a href="https://www.perplexity.ai/">perplexity.ai</a></p></blockquote><ul><li>이 작업을 한다고 했을 때 가장 먼저 할 일은 <b>웹 검색</b>입니다.</li><li>구글 등 <b>검색 엔진</b>에 <b>여러 키워드</b>를 바꿔넣으며 자료를 검색하고 내려받을 것입니다.</li><li><b>수집한 내용을 정리</b>할 것입니다.</li><li>이 과정을 자동화해주는 멋진 도구가 <a href="https://www.perplexity.ai/"><b>perplexity.ai</b></a>입니다.</li><li><b>guide for using generative AI in academic purpose</b>라는 프롬프트를 넣습니다.<br></li></ul><p><img src="52_genairesearch_01.png"><br></p><ul><li>위 스크린샷의 <b>Searching the web</b>을 보면 입력 프롬프트가 다양하게 변화되어 있습니다.</li><li>그리고 <b>20개의 소스</b>로부터 관련 내용을 찾아 <b>Answer</b>부분에 내용을 정리합니다.</li><li><b>Reference</b>를 클릭해 이 모든 내용을 가져오기보다 대표적인 것 몇 개를 가져옵니다.<br></li></ul><p><img src="52_genairesearch_02.png"><br></p><ul><li>그리고 <b>ACS (미국화학회)</b>에서 선제적으로 2023년 2월에 발표된 자료를 가져오고,</li><li>최근 이미지 관련하여 <b>Nature</b>에서 강조한 자료들을 가져옵니다.</li><li>평소의 정보 수집 활동을 통해 알고 있고 중요하게 생각하는 자료입니다.</li></ul><h2 id="2-2-내용-정리"><a href="#2-2-내용-정리" class="headerlink" title="2.2. 내용 정리"></a>2.2. 내용 정리</h2><h3 id="2-2-1-요약-MS-Edge-Copilot-scispace"><a href="#2-2-1-요약-MS-Edge-Copilot-scispace" class="headerlink" title="2.2.1. 요약 : MS Edge Copilot, scispace"></a>2.2.1. 요약 : MS Edge Copilot, scispace</h3><blockquote><p><a href="https://www.microsoft.com/en-us/edge/features/copilot?form=MA13FJ">MS Edge Copilot</a><br><a href="https://typeset.io/">scispace</a></p></blockquote><ul><li>각각의 내용들이 perplexity 출력물에 요약이 되어 있지만, 조금 더 체계적으로 정리를 해보기로 합니다.</li><li>PDF로 다운받을 수 있는 것들은 다운을 받고,</li><li>그렇지 않은 웹 문서는 <a href="https://www.microsoft.com/en-us/edge/features/copilot?form=MA13FJ">MS Edge Copilot</a>에서 정리합니다.</li><li>내용 정리를 용이하게 하기 위해 <b>해야 할 것(Do)</b>과 <b>하지 말아야 할 것(Don’t)</b>으로 구분하여 <b>표로 정리하라</b>는 지시를 내립니다.</li><li>이 때 <b>웹 검색이 아닌 해당 문서를 사용하도록</b> 설정해야 합니다.<br></li></ul><p><img src="52_genairesearch_03.png"><br></p><ul><li>PDF 문서는 <a href="https://typeset.io/"><b>scispace</b></a>에 올립니다.</li><li>PDF 뷰어를 겸한 copilot 모드에서 동일한 질문을 합니다.</li><li><b>출력 언어 설정을 ko(한국어)</b>로 하면 프롬프트에 언어 설정을 할 필요가 없습니다.<br></li></ul><p><img src="52_genairesearch_04.png"><br></p><h3 id="2-2-2-정리-MS-Word"><a href="#2-2-2-정리-MS-Word" class="headerlink" title="2.2.2. 정리 : MS Word"></a>2.2.2. 정리 : MS Word</h3><ul><li>MS Edge Copilot은 표로 출력한 결과를 Excel 파일로 내놓습니다.</li><li>scispace에는 그런 기능이 없지만 긁어서 붙이기 어렵지 않습니다.</li><li>이렇게 정리된 표를 취합하는 과정은 <b>수작업</b>으로 수행합니다.</li></ul><ul><li>방법이 없어서 수작업으로 하는 것이 아닙니다.</li><li><b>요약된 내용을 한번씩 읽어보며 의문이 나면 원문을 읽어보기 위한 과정입니다.</b></li><li>거의 모든 과정이 자동으로 처리되기 때문에, 자칫하면 <b>원문을 한 번도 읽지 않은 채</b> 결과물이 나옵니다.</li><li>편함만 찾다가 <b>문제 발생시 매우 위험한 상황</b>을 만날 수 있습니다.<br></li></ul><p><img src="52_genairesearch_05.png"><br></p><ul><li>한 줄씩 옮기면서 <b>이게 무슨 소리일까</b>생각하고,</li><li>납득이 되지 않으면 <b>원문을 찾아 읽으며 필요시 표현을 수정합니다.</b></li><li>오류는 대개 기계번역 과정에서 어색한 단어가 쓰여 오해를 빚는 경우들입니다.</li></ul><h3 id="2-2-3-취합-ChatGPT"><a href="#2-2-3-취합-ChatGPT" class="headerlink" title="2.2.3. 취합 : ChatGPT"></a>2.2.3. 취합 : ChatGPT</h3><ul><li>정리를 하고 보니 여러 기관에서 비슷한 말들을 했습니다. </li><li>사실 서로 많이 다르면 이상한 상황입니다.</li><li><b>내용을 기준으로 묶고 중복된 내용은 관련 레퍼런스를 여럿 달면 좋겠습니다.</b><br></li><li><b>ChatGPT에 파일을 올리고 관련 지시를 내립니다.</b></li></ul><p><img src="52_genairesearch_06.png"><br></p><ul><li>결과물이 한 번에 마음에 들지 않습니다.</li><li>충분히 원하는 결과물이 나올 때까지 <b>프롬프트를 수정하며 지시를 반복</b>합니다.<br></li></ul><p><img src="52_genairesearch_07.png"><br></p><ul><li>충분히 정리된 결과를 얻었습니다.</li><li>디자인은 아직 많이 거칠지만, 어차피 손은 제가 봐야 하니 여기서부터 수작업으로 넘어갑니다.<br></li></ul><p><img src="52_genairesearch_08.png"><br></p><h3 id="2-2-4-정돈-MS-PowerPoint"><a href="#2-2-4-정돈-MS-PowerPoint" class="headerlink" title="2.2.4. 정돈 : MS PowerPoint"></a>2.2.4. 정돈 : MS PowerPoint</h3><ul><li>익숙한 파워포인트에서 작업을 합니다.</li><li>직장 로고와 제 연락처도 박아 넣고, 레퍼런스들에 링크도 겁니다.</li><li><b>중요한 메시지는 강조도 합니다.</b></li><li><b>자동화보다 수작업이 더 효율적인 영역입니다.</b></li></ul><p><img src="52_genairesearch_09.png"><br></p><ul><li>Do와 Don’t 열의 내용이 겹쳐 Don’t를 삭제했습니다.</li><li>순서도 내용에 맞추어 묶어 엮었습니다.</li></ul><h3 id="2-2-5-번역-DeepL"><a href="#2-2-5-번역-DeepL" class="headerlink" title="2.2.5. 번역 : DeepL"></a>2.2.5. 번역 : DeepL</h3><ul><li><b>DeepL에 powerpoint 문서를 입력하면 포맷을 유지하고 영어로 번역합니다.</b></li><li>출력 언어를 영어로 설정 후 파일을 업로드합니다.<br></li></ul><p><img src="52_genairesearch_10.png"><br></p><ul><li>결과 파일을 다운로드 후, 암호를 해제합니다.</li><li>파일을 열어 행 길이가 변하면서 발생한 줄 넘김 등을 처리하여 최종 문서를 만듭니다.</li></ul><p><img src="52_genairesearch_11.png"><br></p><h1 id="3-결론"><a href="#3-결론" class="headerlink" title="3. 결론"></a>3. 결론</h1><ul><li>아직 많은 분들이 ChatGPT만 알고 계십니다.</li><li>그러나 상황에 따라 사용하기 좋은 AI 도구들이 많이 나왔고, 발달하고 있습니다.</li><li>윤리적 가이드라인을 지키며 올바른 방향으로 사용하시기를 바랍니다.</li></ul>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/General/">General</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/openai/">openai</category>
      
      <category domain="https://jehyunlee.github.io/tags/chatgpt/">chatgpt</category>
      
      <category domain="https://jehyunlee.github.io/tags/perplexity/">perplexity</category>
      
      <category domain="https://jehyunlee.github.io/tags/scispace/">scispace</category>
      
      
    </item>
    
    <item>
      <title>DALL.E inpainting으로 그림 그리기</title>
      <link>https://jehyunlee.github.io/2024/05/19/General-51-dalleinpainting/</link>
      <guid>https://jehyunlee.github.io/2024/05/19/General-51-dalleinpainting/</guid>
      <pubDate>Sat, 18 May 2024 15:52:00 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;ChatGPT DALL.E에는 그림을 수정하는 기능이 있습니다.&lt;/li&gt;
&lt;li&gt;DALL.E2부터 공개된 기능으로, 기존 이미지의 일부를 지우고 새 프롬프트를 넣어서 새로 그리는 그림입니다.&lt;/li&gt;
&lt;li&gt;inpainting이라는 방</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>ChatGPT DALL.E에는 그림을 수정하는 기능이 있습니다.</li><li>DALL.E2부터 공개된 기능으로, 기존 이미지의 일부를 지우고 새 프롬프트를 넣어서 새로 그리는 그림입니다.</li><li>inpainting이라는 방식입니다. 이를 이용해서 그림을 그릴 수 있겠다는 생각이 들었습니다.</li></ul><h1 id="1-DALL-E3-inpainting"><a href="#1-DALL-E3-inpainting" class="headerlink" title="1. DALL.E3 inpainting"></a>1. DALL.E3 inpainting</h1><ul><li>프롬프트로 그리는 그림은 그 자체로 매력과 제약이 있습니다.</li><li>목표로 하는 그림을 말로 설명하는 것은 매우 재미있는 작업입니다.</li><li>그러나 프롬프트를 정확히 동작하게 하는 것은 매우 어렵습니다.</li><li><b>언어 표현의 한계</b>도 있지만 DALL.E라는 <b>AI 모델의 한계</b>, 학습한 <b>데이터의 한계</b>가 있기 때문입니다.</li></ul><ul><li><b>inpainting은 먼저 그려진 그림의 일부만을 골라 수정하는 방식입니다.</b></li><li>일부를 고치려다가 전체를 망치는 일도 막을 수 있고,</li><li>DALL.E에서 그리지 못하는 그림을 그릴 수 있기 때문입니다.</li><li>예를 들어, <b>아기공룡 둘리</b>를 그리려다 실패한 적이 많습니다.</li><li><b>코에 하얀 뿔을 달고 있는 모습이 그려지지 않았기 때문입니다.</b></li></ul><ul><li>예를 보여드리겠습니다.</li><li>먼저, 적절히 초록색 귀여운 공룡을 그립니다.</li></ul><blockquote><p>prompt: “a realistic photography of a cute green dinosaur {smiling, chubby}, walking in forest in Jurassic.”</p></blockquote><p><img src="51_dalleinpainting_11.png"><br></p><ul><li>그리고, 이미지를 선택하고 inpainting을 의미하는 붓 아이콘을 선택해서 코를 칠합니다.</li><li>이 자리에만 새로 입력하는 프롬프트를 적용하겠다는 뜻입니다.</li></ul><blockquote><p>prompt: “add a rounded white spike on top of the nose”</p></blockquote><p><img src="51_dalleinpainting_12.png"><br></p><ul><li>다른 곳은 모두 그대로 두고 <b>코</b>에만 하얀 뿔이 달렸습니다.</li><li>빛의 방향과 표현 방식 등이 주변 그림과 어울리도록 그려집니다.</li><li><b>이 방식을 사용하면 그림 한 점을 그릴 수 있지 않을까?</b></li><li><b>그렇다면 그 과정은 일반적인 회화를 만드는 과정과 비슷하지 않을까?</b></li><li><b>한번 해볼만할 가치가 있지 않을까?</b> 싶었습니다.</li></ul><h1 id="2-inpainting으로-그림-한-점-그리기"><a href="#2-inpainting으로-그림-한-점-그리기" class="headerlink" title="2. inpainting으로 그림 한 점 그리기"></a>2. inpainting으로 그림 한 점 그리기</h1><h2 id="2-1-바탕-설정"><a href="#2-1-바탕-설정" class="headerlink" title="2.1. 바탕 설정"></a>2.1. 바탕 설정</h2><ul><li>그림을 그려나가는 과정이라면, 어설픈 장면보다 <b>그림</b>을 그리면 좋을 것 같았습니다.</li><li><b>하늘색 벽에 걸린 하얀 캔버스를 먼저 그렸습니다.</b></li><li>이젤에 놓인 캔버스도 생각해봤지만, 전체 공간에서 캔버스가 차지하는 공간이 작아질 수 밖에 없습니다.<br></li></ul><p><img src="51_dalleinpainting_01.png"><br></p><ul><li>그리고, 본 그림이 놓일 부분을 선택합니다.</li><li>새로운 그림이 그려질 자리이기 때문에 기존 그림을 지우는 그림마저 듭니다.</li><li>나무 선반에 짙은 남색의 도자기 꽃병을 올립니다.<br></li></ul><p><img src="51_dalleinpainting_02.png"><br></p><ul><li>생각보다 선반이 너무 짧게 나왔습니다.</li><li>머리 속에는 가로로 긴 선반이 있었는데, 막상 그려진 걸 보니 나쁘지 않습니다.</li><li><b>의외성을 받아들이고 이 공간을 재밌게 꾸며보기로 합니다.</b></li></ul><h2 id="2-2-꽃과-꽃잎"><a href="#2-2-꽃과-꽃잎" class="headerlink" title="2.2. 꽃과 꽃잎"></a>2.2. 꽃과 꽃잎</h2><ul><li>같은 방식으로 꽃병 위를 선택하고 노랑, 빨강의 꽃을 만듭니다.</li><li>처음 그린 그림이 마음에 들지 않았습니다.</li><li>앞선 그림으로 올라가 작업하기보다, <b>그림 위를 다시 선택하고 inpainting을 합니다.</b></li><li>어차피 지우는 거니까요 :)</li></ul><p><img src="51_dalleinpainting_04.png"><br></p><ul><li>프롬프트의 “flower”를 “roses”로 교체한 뒤에 조금 더 마음에 드는 그림이 나왔습니다.</li><li>의도적으로 꽃만 그렸기 때문에 이제 이를 들러싼 잎을 풍성하게 담고 싶습니다.</li><li>장미 잎은 동그랗고 작지만, <b>길다란 다른 장식 잎들이 함께 꽂혀 있다는 설정</b>을 하고 프롬프트를 입력했습니다.<br></li></ul><p><img src="51_dalleinpainting_05.png"><br></p><ul><li><b>그런데 잘 작동하지 않았습니다.</b></li><li>먼저 그린 장미때문인지, 작고 귀여운 꽃잎만 그려집니다.</li><li>여러 번을 해도 마찬가지입니다.</li><li><b>잎을 먼저 그렸으면 어땠을까 싶습니다. 달랐을 것 같습니다.</b></li></ul><ul><li>아쉬운대로 옆 공간을 다르게 활용하기로 합니다.<br></li></ul><p><img src="51_dalleinpainting_06.png"><br></p><h2 id="2-3-나비와-고양이"><a href="#2-3-나비와-고양이" class="headerlink" title="2.3. 나비와 고양이"></a>2.3. 나비와 고양이</h2><ul><li><b>꽃 주변에 날아든 나비</b>를 담습니다.</li><li>생각보다 제법 어울리게 나비 세 마리가 놓였습니다.</li><li>아래 공간을 어떻게 채울지 잠시 고민합니다.</li></ul><p><img src="51_dalleinpainting_07.png"><br></p><ul><li><b>고양이가 그림을 향해 점프하는 모습</b>이 담기면 좋겠다는 생각이 듭니다.</li><li>그림 밖을 지나가던 고양이가 나비를 보고 점프하는 모습을 프롬프트로 입력합니다.</li><li><b>의외로 여러 차례 아무것도 그려지지 않아서 재시도를 해야 했습니다.</b></li><li>겨우 그려진 그림은 영 마음에 들지 않습니다.<br></li></ul><p><img src="51_dalleinpainting_08.png"><br></p><ul><li>다시 영역을 선택하고 수 차례 반복하고 나서야 고양이가 의도대로 그려졌습니다.</li><li>그러나 그림자가 제대로 표현이 되지 않아 합성처럼 보입니다.</li><li>고양이 그림자가 드리워질 부분을 선택하고 <b>그림자를 추가하라</b>는 프롬프트를 줍니다.</li></ul><p><img src="51_dalleinpainting_09.png"><br></p><h2 id="2-4-최종"><a href="#2-4-최종" class="headerlink" title="2.4. 최종"></a>2.4. 최종</h2><ul><li>여러 차례 시행착오를 거쳐 얻은 최종 그림입니다.</li><li>여전히 고양이가 합성처럼 느껴지지만, 전반적인 캔바스 속 그림 느낌과 비슷하기도 합니다.</li><li>뒷다리-엉덩이-꼬리 아래로 이어지는 부분의 그림자도 용인될 만큼은 추가되었기에 이 정도에서 멈추었습니다.</li><li>그럼에도 불구하고 <b>그림 속에 있을만한 고양이를 무리해서 현실로 끄집어 낸 느낌</b>이 적지 않습니다.</li><li><b>그림의 톤이 전체적으로 통일성있게 지정되다 보니 그런 것 같습니다.</b></li></ul><p><img src="51_dalleinpainting_10.png"><br></p><ul><li>inpainting만으로 그림을 그린 것이 <b>이 그림이 처음은 아닙니다.</b></li><li>이틀 전(5/17) 오후에 가능성을 확인하고 아쉬웠던 점(캔버스 크기, 디테일)를 보완해서 다시 작업했는데</li><li>그 때나 지금이나 3차 이후의 inpainting이 마음같이 잘 되지는 않는 것 같습니다.</li></ul><p><img src="51_dalleinpainting_14.png"><br></p><ul><li>inpainting 성능 개선이 필요한 것일 수도 있고,</li><li>제가 미숙한 것일 수도 있습니다.</li><li>그럼에도 불구하고 <b>원 포인트 수정을 하기에 가장 좋은 도구,</b></li><li><b>프롬프트 엔지니어링의 단점을 보와할 좋은 도구</b>인만큼 종종 사용해보려 합니다.</li></ul><h1 id="3-한번에-그린-그림과의-비교"><a href="#3-한번에-그린-그림과의-비교" class="headerlink" title="3. 한번에 그린 그림과의 비교"></a>3. 한번에 그린 그림과의 비교</h1><ul><li>저 단계들에서 사용한 프롬프트를 모두 넣고 한 번에 그림을 그려보았습니다.</li><li>inpainting을 반복하며 생각보다 시간이 많이 소요되었기에,</li><li>차라리 한 번에 그린 그림이 낫지 않나 하는 의구심이 들었습니다.</li></ul><p><img src="51_dalleinpainting_13.png"><br></p><ul><li>고양이가 캔버스 밖에 있다는 사실은 확실히 더 잘 전달됩니다.</li><li>그림 안은 그림처럼, 그림 밖은 실사처럼 연출되었기 때문입니다.</li><li>뒷발 아래 드리워진 그림자도 더 자연스럽습니다.</li><li>더 연습을 해봐야 겠지만, <b>inpainting은 둘리의 뿔처럼 포인트에만 적용을 하는 게 좋을 것 같습니다.</b></li></ul>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/General/">General</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/openai/">openai</category>
      
      <category domain="https://jehyunlee.github.io/tags/chatgpt/">chatgpt</category>
      
      <category domain="https://jehyunlee.github.io/tags/dalle/">dalle</category>
      
      
    </item>
    
    <item>
      <title>KBS 더보다 - 예술램프 인공지능 출연 후기</title>
      <link>https://jehyunlee.github.io/2024/05/16/General-50-theboda/</link>
      <guid>https://jehyunlee.github.io/2024/05/16/General-50-theboda/</guid>
      <pubDate>Thu, 16 May 2024 04:20:00 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;contributor: KBS 유동엽 기자&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;저의 AI 그림 전시와 판매가 KBS 기자님의 관심을 끌었나 봅니다.&lt;/li&gt;
&lt;li&gt;시사프로그램 &amp;lt;더 보다&amp;gt;의 유동엽 </description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p>contributor: KBS 유동엽 기자</p></blockquote><ul><li>저의 AI 그림 전시와 판매가 KBS 기자님의 관심을 끌었나 봅니다.</li><li>시사프로그램 &lt;더 보다&gt;의 유동엽 기자님께서 연락을 주셔서 인터뷰를 진행했습니다.</li><li>잘 만들어주신 방송이 5월 12일 본방송과 9시 뉴스에 나왔습니다.</li><li>며칠 지난 지금 방송 및 당일 인터뷰 후기를 간략히 정리해 봅니다.</li></ul><h1 id="1-인터뷰-예고-뉴스-방송"><a href="#1-인터뷰-예고-뉴스-방송" class="headerlink" title="1. 인터뷰, 예고, 뉴스, 방송"></a>1. 인터뷰, 예고, 뉴스, 방송</h1><ul><li>4월 19일 연구원에 방문해주신 방송진과 함께 인터뷰를 진행했고,</li><li>5월 9일에 예고가 나갔습니다.</li><li>김형석 작곡가께서 문을 열어주신 덕에 방송에 대한 기대감이 한껏 높아졌습니다.</li><li>예고 영상: <a href="https://www.youtube.com/watch?v=wgt2oX9XcRE">YouTube Link</a></li></ul><div class="video-container"><iframe src="https://www.youtube.com/embed/wgt2oX9XcRE" frameborder="0" loading="lazy" allowfullscreen></iframe></div><ul><li>5월 12일 방송 당일, 저녁 7시경 기자님께 문자를 받았습니다.</li><li><b>9시 뉴스에 나온다</b>는 말씀이었는데, 깜짝 놀랐습니다.</li><li>세종시에서 열리는 축제에 가족과 함께 나와있었기 때문에 늦지 않게 서둘러 귀가를 했습니다.<br></li></ul><p><img src="50_theboda_01.png"><br></p><ul><li>9시 뉴스를 틀어놓고 가족들과 함께 기다렸습니다.</li><li>뉴스가 끝나갈 무렵, 스포츠 소식 직전에 <b>“이어지는 시사프로그램 &lt;더 보다&gt;에서는…”</b>이라는 멘트와 함께 짧게 소개될 줄 알았습니다.</li><li>의외로 뉴스 시작 후 20분이 지나갈 무렵 적지 않은 비중으로 소개되었습니다.</li><li>YouTube 다시 보기 : (<a href="https://www.youtube.com/watch?v=9GKQMgNAJ_A">YouTube Link</a>)<br></li></ul><div class="video-container"><iframe src="https://www.youtube.com/embed/9GKQMgNAJ_A" frameborder="0" loading="lazy" allowfullscreen></iframe></div> <ul><li>인터뷰를 마친 후 여러 날이 지났을 때, 인터뷰를 하셨던 기자님께서 <b>“그림이 만들어진 과정을 모은 걸 고화질로 보내주시면 좋겠다”</b>는 요청을 주셔서 보내드렸는데,</li><li>해당 그림이 뉴스 시작부터 나오더군요.<br></li></ul><p><img src="50_theboda_02.png"><br><br><img src="50_theboda_03.png"><br></p><ul><li>뉴스에 나올 거라고 부모님들께는 먼저 알려드렸지만, 연락을 드리지 않은 지인들로부터 연락이 오기 시작했습니다.</li><li>그리고 잠시 후 밤 10시 30분, KBS 시사프로그램 <b>&lt;더 보다&gt;</b>의 <b>12회, 예술램프 인공지능?!</b> 이라는 제목으로 방영되었습니다.</li><li>YouTube 다시 보기 : (<a href="https://www.youtube.com/watch?v=UJbhUpxfgJA">YouTube Link</a>)<br></li></ul><div class="video-container"><iframe src="https://www.youtube.com/embed/UJbhUpxfgJA" frameborder="0" loading="lazy" allowfullscreen></iframe></div> <ul><li>기대와 함께 오래 진행한 인터뷰가 어떻게 편집될지 걱정을 많이 했습니다.</li><li>소위 악마의 편집 이야기도 많이 들었기 때문에 더 그랬습니다.</li><li>다행히 <b>전달하고자 하는 저의 생각과 주장을 너무 잘 담아주셨습니다.</b></li></ul><p><img src="50_theboda_06.png"></p><ul><li><b>저와 관련된 분량이 많다</b>는 기자님의 언질이 있었습니다만,</li><li>실제로 40분 분량 중 저와 관련된 부분이 7분이 좀 넘을 정도로 비중이 크게 나왔습니다.</li><li><b>생성 인공지능은 아는 만큼만 써야 한다</b>는 주장을 지속적으로 드리고 있는데 좋은 기회가 된 것 같습니다.</li></ul><p><img src="50_theboda_07.png"></p><ul><li>음악, IT, 법 등 여러 분야의 전문가들 인터뷰과 함께 어우러져 스토리를 탄탄하게 만들어주셔서 감사했습니다.</li><li>기자님을 포함해 다른 인터뷰이들과 한 자리에서 이야기를 나눈 느낌마저 들었습니다.</li><li>예술로 뻗어나가는 AI에 대해 많은 말씀을 담아준 제작진에게 다시 한번 감사 말씀을 드립니다.</li><li>시작과 끝을 35년 경력 김형석 작곡가의 호의적인 멘트로 담아주신 덕에 분위기가 매끄러웠다고 생각합니다.</li></ul><h1 id="2-방송-후"><a href="#2-방송-후" class="headerlink" title="2. 방송 후"></a>2. 방송 후</h1><h2 id="2-1-관련-보도"><a href="#2-1-관련-보도" class="headerlink" title="2.1. 관련 보도"></a>2.1. 관련 보도</h2><ul><li>당일 9시 뉴스 보도와 거의 동시에 KBS에서 <b>문서 기사</b>도 함께 나갔습니다.</li><li>Naver 뉴스 링크 : <a href="https://n.news.naver.com/article/056/0011719525?sid=105">그림부터 음악, 영상까지 AI가 ‘뚝딱’…저작권은?</a></li><li>종종 영상과 문서로 같은 뉴스를 볼 때가 있는데 이렇게 실시간으로 나가는 줄은 처음 알게 되었습니다.</li></ul><p><img src="50_theboda_05.png"><br></p><ul><li>그리고 방송 다음날(5.13.)<b>친절한 뉴스K</b>에서 영상을 인용해 해당 뉴스를 다루었습니다.</li><li>YouTube 다시 보기 : (<a href="https://www.youtube.com/watch?v=WRXuuuMJ_60">YouTube Link</a>)<br></li></ul><p><img src="50_theboda_04.png"><br></p><h2 id="2-2-댓글"><a href="#2-2-댓글" class="headerlink" title="2.2. 댓글"></a>2.2. 댓글</h2><ul><li><p>인터뷰 요청을 받았을 때부터 <b>악플</b>을 어느 정도 예상했습니다.</p></li><li><p>일전에 강연에서 관련 언급을 했다가 미술계 종사자로부터 이메일을 직접 받은 경험도 있고,</p></li><li><p>감히 예술가와 입장을 바꾸어 생각해보면 수십년간의 노력을 부정당하는 느낌일 것 같았습니다.</p></li><li><p>방송 내용에는 문제가 없다고 생각했기 때문에,</p></li><li><p><b>이 정도로 차분하게 담아주셨는데도 달리는 악플은 어쩔 수 없는 거다</b>라는 생각을 갖고 있습니다.</p></li><li><p>다행히 현 시점에서 본방, 뉴스, 기사 등에 별다른 악플은 보이지 않습니다.<br></p></li></ul><p><img src="50_theboda_08.png"><br></p><ul><li>반면, 1년 전에 나온 비슷한 기사에 달린 댓글은 공격적인 내용이 적지 않습니다.</li><li><b>무단표절과 관련된 이슈가 여전히 남아 있지만 공격성은 줄었습니다.</b></li><li>인식이 개선되었을 수도 있고, 작년의 폭발적인 부정적 반응이 다소 누그러졌을 수도 있습니다.</li><li><b>AI가 그린 그림이 미술대회 1등해서 난리난 미술계 근황 / 스브스뉴스</b>: : (<a href="https://www.youtube.com/watch?v=thsXGOkcGGg">YouTube Link</a>)<br></li></ul><p><img src="50_theboda_10.png"><br><br><img src="50_theboda_09.png"><br></p><h1 id="3-방송에-담기지-않은-이야기"><a href="#3-방송에-담기지-않은-이야기" class="headerlink" title="3. 방송에 담기지 않은 이야기"></a>3. 방송에 담기지 않은 이야기</h1><ul><li>방송 분량이 제한되어 있다 보니, 그리고 스토리를 매끄럽게 엮다 보니 모든 이야기가 담기지는 못했습니다.</li><li>방송에 담기지 않은 이야기 중 많은 이들과 공유하고 싶은 이야기를 하나 담고자 합니다.</li><li>생성 AI의 가장 큰 위험 중 하나가 <b>무단 학습과 이에 따른 의도치 않은 표절</b>입니다.</li></ul><ul><li>창작자는 독창적인 그림을 떠올리고 이를 프롬프트로 지시하더라도, AI가 학습한 정보를 바탕으로 그림을 형성하는 과정에서 과거에 학습한 그림이 나올 수 있습니다.</li><li>학습을 기반으로 하다 보니 어느 정도는 <b>예견된 일</b>이기도 하고, <b>AI 예술은 표절</b>이라는 주장의 근거가 되기도 합니다.</li><li>개인적으로는 <b>인간도 비슷하지 않나?</b> 라는 생각을 가지고 있습니다.</li><li>사람도 스승의 그림이 아니더라도 여러 디자인을 비롯한 상업미술 등 다양한 작가와 작품의 영향을 받습니다.</li><li>한 시대 여러 사람들이 집단적으로 영향을 주고 받으면 <b>화풍</b>이나 <b>사조</b>가 됩니다.</li></ul><ul><li>그럼에도 불구하고 결과물이 타인의 그림과 너무 비슷하면 싫습니다.</li><li>첫째, <b>자존심이 상하고</b> 둘째, <b>내게 스승일 수 있는 타인에게 피해를 주고 싶지 않기 때문</b>입니다.</li><li>그래서 <b>프롬프트에 특정 화가나 화풍의 이름을 명시하지 않습니다.</b></li><li>프롬프트에 스타일을 지시할 때는 오마주나 패러디를 할 때 뿐입니다.</li><li>일전에 참석한 AI 작가들과의 모임에서도 생각이 비슷한 분들을 많이 만났습니다.</li></ul><ul><li>그런데 얼마 전, 제가 그린 그림과 상당히 유사한 그림을 만났습니다.</li><li>강의와 함께 포스터 그림 의뢰를 받았습니다. -제 강의 포스터에 한정해 의뢰를 수락합니다.</li><li><b>대리석 원기둥 옆면을 따라 대리석 계단이 나선형으로 놓여 있는 위를 한 사람이 올라가는 모습</b>을 떠올리고 프롬프트를 입력했는데,</li><li>이와 조금 다르지만 <b>대리석 구멍의 안쪽 면을 따라 놓인 계단으로 올라가는 그림</b>이 나왔습니다.<br></li></ul><p><img src="50_theboda_11.png"><br></p><ul><li>의도와는 다르지만 이 그림도 괜찮고, 굳이 의도를 구현할 필요는 없어서 이를 토대로 포스터가 만들어졌습니다.</li></ul><ul><li>그리고 강의를 마친 언젠가 facebook 담벼락에서 상당히 유사한 그림을 발견합니다.</li><li><b>unknown photographer</b>라고 되어 있는 이 그림은 <b>제가 이걸 보고 베꼈다</b>고 해도 믿을 것 같았습니다.<br></li></ul><p><img src="50_theboda_12.png"><br></p><ul><li>뒤늦게라도 원작자를 찾기 위해 검색을 해 보았지만 찾을 수 없었습니다.</li><li>이 사진이 각인된 아이폰 케이스까지 버젓이 판매되는 걸 보면 <b>굉장히 잘 알려진 사진</b>이거나 <b>원작자가 제품 제작에 참여했거나 실시권을 허가한 사진</b>으로 보이는데, 끝내 알아내지 못했습니다.</li></ul><p><img src="50_theboda_13.png"><br></p><ul><li><b>구글 이미지 검색</b>에 제가 만든 그림을 넣고 검색하면 상당히 유사한 이미지가 대량으로 발견되고,</li><li>이 중 적지 않은 수는 Midjourney, Playground AI 등 <b>생성AI의 작품</b>입니다.</li><li>제 의도와 관계없이 <b>원작을 베낀 것</b>처럼 느껴진다는 것에 이어 <b>그저 그런 그림 중 하나</b>라고 느껴져 기분이 좋지 않았습니다.</li></ul><p><img src="50_theboda_14.png"><br></p><ul><li>생성 AI로 그림을 그릴 때도 작가의 구상과 이를 구현하기 위한 프롬프트 작성, 수정, 작품 선별이 이루어집니다.</li><li>이런 새로운 형태의 노력을 감안할 때 저작권이 주어져도 충분하다고 느끼지만,</li><li>그 전에 <b>의도치 않은 표절</b>에 대한 고민이 함께 이루어져야 한다고 믿습니다.</li></ul><ul><li>이는 <b>사람 간에도 음악과 미술에서 수없이 되풀이되어 온 문제</b>입니다.</li><li><b>집단적으로 영향을 주고 받는 일을 사람은 해도 되고 AI는 안 된다는 논리도 빈약</b>합니다.</li><li>그리고 사람을 닮아가는 생성 AI의 미래를 생각할 때 <b>쉽지 않은 문제</b>가 될 것입니다.</li><li>숙제가 많은 만큼 발전 가능성이 큰 분야라고 생각합니다.</li></ul>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/General/">General</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/openai/">openai</category>
      
      <category domain="https://jehyunlee.github.io/tags/chatgpt/">chatgpt</category>
      
      <category domain="https://jehyunlee.github.io/tags/dalle/">dalle</category>
      
      
    </item>
    
    <item>
      <title>미술전 전시 - 숨은 예술가들 2024</title>
      <link>https://jehyunlee.github.io/2024/04/12/General-49-hiddenartists/</link>
      <guid>https://jehyunlee.github.io/2024/04/12/General-49-hiddenartists/</guid>
      <pubDate>Fri, 12 Apr 2024 07:31:00 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;contributor: 서울대학교 동창회&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;서울대학교 총동창회와 미술대학 동창회에서는 2023년에 이어 2024년에 특색있는 행사를 열었습니다.&lt;/li&gt;
&lt;li&gt;“전공이 미술이</description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p>contributor: 서울대학교 동창회</p></blockquote><ul><li>서울대학교 총동창회와 미술대학 동창회에서는 2023년에 이어 2024년에 특색있는 행사를 열었습니다.</li><li>“전공이 미술이 아님에도 불구하고 그림에 대한 열정을 이어오고 있는 동문들의 작품을 소개”하는 자리를 여는,</li><li><b>“숨은 예술가들”</b>이라는 이름의 행사입니다.</li></ul><blockquote><p><a href="https://www.snua.or.kr/community/notice?md=v&bbsidx=959">서울대학교총동창회: 숨은 예술가들 2023 공지 (2023.10.10.)</a><br><a href="https://www.hellodd.com/news/articleView.html?idxno=103868">helloDD: 과학자·의사·목사 작가 ‘특별한 전시회’ “AI작품부터 예술, 문화 공존”</a></p></blockquote><ul><li><a href="https://jehyunlee.github.io/2024/01/22/General-38-mya/"><b>먀스터피스</b></a>가 없었다면 숨은 예술가들도 없었을 것입니다.</li><li>이 행사에서 만난 분께 추천을 받아 미술전에 출품을 하고 작품을 판매하는 경험을 할 수 있었습니다.</li><li>너무 감사한 인연이지만, 본인께 누가 될까 싶어 이름은 공개하지 않기로 합니다.</li><li>기회를 주신 모든 분들께 감사드리며 당시 전시한 작품에 대한 설명을 기록으로 남깁니다.</li></ul><h1 id="1-작품"><a href="#1-작품" class="headerlink" title="1. 작품"></a>1. 작품</h1><h2 id="1-1-그림"><a href="#1-1-그림" class="headerlink" title="1.1. 그림"></a>1.1. 그림</h2><p><img src="cropped_image.webp" alt="은행잎나무"><br></p><ul><li>챗달이(ChatGPT DALL.E3)로 만든 그림에 <b>은행잎나무</b>라는 제목을 붙였습니다.</li><li>한 번에 그려진 그림은 아닙니다.</li><li>의도를 반영하고자, 그리고 보기 좋은 그림을 만들고자 다양한 시도를 했습니다.</li><li>여러 차례 프롬프트를 바꾸기도 하고 재생성을 하기도 하면서 중간 과정들을 거쳐 최종 그림을 얻었습니다.</li></ul><p><img src="49_hiddenartists_01.png"><br></p><h2 id="1-2-의도"><a href="#1-2-의도" class="headerlink" title="1.2. 의도"></a>1.2. 의도</h2><blockquote><p><a href="https://twitter.com/jathansadowski/status/1625245803211272194?lang=en">Habsburg AI</a><br><a href="https://www.smithsonianmag.com/smart-news/distinctive-habsburg-jaw-was-likely-result-royal-familys-inbreeding-180973688/">Smithonian Magazine: The Distinctive ‘Habsburg Jaw’ Was Likely the Result of the Royal Family’s Inbreeding</a><br><a href="https://commons.wikimedia.org/wiki/File:Ginkgo-Gegenlicht-web.jpg">wikimedia commons: Ginko-Gegenlicht-web.jpg</a></p></blockquote><ul><li>전시회를 떠나 최근 주목받는 생성형 인공지능(Generative AI) 모델들을 보며 떠오른 이미지가 있었습니다.</li><li>AI 모델은 데이터에서 만들어지지만, 생성형 AI 모델은 데이터를 만들어 냅니다.</li><li>이 능력을 바탕으로 AI 모델을 개발하는 분들이 부족한 데이터를 AI 모델을 이용해 채웁니다.</li><li>특히 많은 <b>오픈소스 언어 모델</b> 개발에 <b>GPT-4를 이용해 생성된 데이터</b>가 사용되고 있습니다.</li><li>이렇게 자가교배식으로 개발되는 AI를 <a href="https://twitter.com/jathansadowski/status/1625245803211272194?lang=en"><b>Habsburg AI</b></a>라고 합니다.</li><li>언뜻 보기에 매우 효율적인 방법이지만 <a href="https://www.smithsonianmag.com/smart-news/distinctive-habsburg-jaw-was-likely-result-royal-familys-inbreeding-180973688/">유전병을 유발할 수 있습니다.</a></li></ul><p><img src="49_hiddenartists_02.png"><br></p><ul><li>합스부르크 왕가의 턱이 길어졌던 것처럼, 합스부르크 AI 모델은 편향(bias)과 환각(hallunination) 계승이 문제가 됩니다.</li><li>이를 그림으로 표현하고자 <b>나무보다 훨씬 거대하게 자란 나뭇잎</b>을 주 소재로 삼았습니다.</li><li><b>구름에 닿을 만큼 자란 나뭇잎</b>을 표현했는데, 이 구름은 높이, 즉 영향력을 의미하기도 하지만 </li><li>한편으로는 <b>생성형 AI가 사람들에게 닿는 경로인 클라우드 컴퓨팅</b>을 의미하기도 합니다.</li><li>클라우드 컴퓨팅이라 구름을 그린다는 것이 다소 직설적이라 촌스럽게 느껴지지만,</li><li>그림의 미적 요소가 향상되는 듯 하여 채택했습니다.</li></ul><ul><li>대상으로는 <b>은행잎</b>을 선정했습니다.</li><li>아름답기도 하지만 생성형 AI가 <b>환각</b>을 일으키는 대상이기 때문입니다.</li><li>은행나무는 활엽수가 아니라 침엽수입니다.</li><li>대개 침엽수(針葉樹)라면 소나무처럼 바늘 모양의 잎을 가지지만 은행잎은 이 바늘 모양의 잎이 다닥다닥 붙어 넓은 모양을 이루고 있는, 매우 특이한 침엽수입니다.</li></ul><p><img src="49_hiddenartists_03.jpg" alt="source: wikimedia commons"><br></p><ul><li>그러나 생성AI (정확히는 ChatGPT DALL.E3)는 이런 특징을 모릅니다.</li><li>그저 넓은 나뭇잎이니 그럴싸하게 잎맥을 그려 넣지만 틀린 이야기입니다.</li><li>표현이 덜 된 부분이 있습니다.</li><li>바닥에 굴러다니는 낙엽 대신, 말라 굴러다니는 나무를 놓고 싶었는데 여러번 시도해도 잘 안 되더군요.</li><li>관심을 받지 못하고 말라비틀어지는 실세계를 표현하고 싶었습니다.</li></ul><h1 id="2-전시"><a href="#2-전시" class="headerlink" title="2. 전시"></a>2. 전시</h1><blockquote><p><a href="https://www.upscayl.org/">Upscayl</a></p></blockquote><h2 id="2-1-Upscale"><a href="#2-1-Upscale" class="headerlink" title="2.1. Upscale"></a>2.1. Upscale</h2><ul><li>DALL.E에서 만드는 그림은 1024 x 1024가 기본입니다.</li><li>종횡비를 16:9로 지정하면 1792 x 1024가 되긴 하지만 인쇄엔 역부족입니다.</li><li>그냥 보간(interpolation)을 이용해 확대하면 전체적으로 흐려집니다.</li><li>딥러닝을 이용한 업스케일이 이럴 때 유용합니다.</li><li><a href="https://www.upscayl.org/"><b>Upscayl</b></a>에서 무료로 업스케일링을 할 수 있습니다.</li></ul><p><img src="49_hiddenartists_07.png"><br></p><ul><li>여러 옵션 중 <b>General Photo (Fast REAL-ESRGAN)</b>을 선택해 빠르게 작업합니다.</li></ul><h2 id="2-2-인쇄"><a href="#2-2-인쇄" class="headerlink" title="2.2. 인쇄"></a>2.2. 인쇄</h2><p><img src="49_hiddenartists_04.jpg" alt="그림 옆 운동화: 크기 비교용"><br></p><ul><li>대덕특구의 Space-S에서 인쇄에 도움을 주셨습니다.</li><li>처음에는 크게 걸 욕심에 대형 아크릴 인쇄를 했습니다.</li><li>그런데 <b>못으로 벽에 걸어야 한다</b>는 규정이 걸림돌이 되었습니다.</li><li>구멍을 뚫고 그림 뒤에 철사를 걸면 된다고 하는데, 작업 시간을 도저히 낼 수 없었습니다.</li></ul><p><img src="49_hiddenartists_06.jpg"><br></p><ul><li>아쉬운대로 시중에서 당일 구할 수 있던 최대 크기인 A3 크기로 다시 인쇄를 부탁드렸고</li><li>아크릴이 아닌 종이에 인쇄를 해서 액자에 넣어 보냈습니다.</li><li>역시 Space-S에 인쇄를 부탁드려 고품질로 인쇄를 할 수 있었고,</li><li>한켠에 볼펜으로 서명을 해서 넣었습니다.</li></ul><h2 id="2-3-전시"><a href="#2-3-전시" class="headerlink" title="2.3. 전시"></a>2.3. 전시</h2><blockquote><p><a href="https://www.hellodd.com/news/articleView.html?idxno=103868">helloDD: 과학자·의사·목사 작가 ‘특별한 전시회’ “AI작품부터 예술, 문화 공존”</a></p></blockquote><ul><li>4월 2일(화)부터 행사가 진행되었지만 평일이라 개막식에 참석할 수 없었습니다.</li><li><a href="https://www.hellodd.com/news/articleView.html?idxno=103868">helloDD</a> 기사를 통해 뒤늦게라도 현장 사진을 볼 수 있는 것이 위안입니다.</li></ul><p><img src="49_hiddenartists_08.png"><br></p><ul><li>정식으로 도록에 작품이 실린 것을 확인 후 가족에게 알렸습니다.</li><li>바쁜 일정으로 제출 일정을 못맞출 수 있다고 생각했고,</li><li>혹시나 주최측에서 거절이라도 당하면 어쩔까 싶은 두려움도 있었습니다.</li><li>정식 미술전에는 첫 제출이니까요.</li></ul><p><img src="49_hiddenartists_11.jpg"><br></p><ul><li>부모님께서 먼저 다녀가셔서 축하 화분을 놓아주셨습니다.</li><li>저는 가족들과 함께 일요일에야 가서 작품을 볼 수 있었습니다.</li><li>다른 작품과 함께 전시된 그림을 보니 느낌이 새롭더군요.</li></ul><p><img src="49_hiddenartists_05.jpg" alt="전시장에 걸린 그림"><br></p><h2 id="2-4-판매"><a href="#2-4-판매" class="headerlink" title="2.4. 판매"></a>2.4. 판매</h2><ul><li>작품을 제출할 때, 작품 판매가를 적어 내는 칸이 있었습니다.</li><li>누가 내 작품을 사겠나 싶었지만 형식이 그러하니 적어 냈습니다.</li><li>제 기준으로 적지 않은 금액을 썼는데, 쓰면서도 느낌이 이상했습니다.</li></ul><ul><li>전시회 이틀째인 4월 3일, <b>그림이 팔렸다</b>는 전화를 받았습니다.</li><li>전날 거의 밤을 샜기 때문에 오전에 정신없는 일정을 일단 마무리하고 15분 알람을 맞춘 후 의자에서 잠시 눈을 붙이던 중이었습니다.</li><li>비몽사몽간에 받은 전화인데도 잠이 깨더군요.</li><li><b>품질보증서를 작성해야 하니 폐관 전에 꼭 방문해달라</b>는 요청이었습니다.</li></ul><ul><li>일요일에 가족과 함께 들른 전시회에서 품질보증서를 작성했습니다.</li><li>내 그림이 인쇄되어 있고 아래 <b>진품임을 보증한다</b>는 내용의 한 장짜리 서류였습니다.</li><li>아무리 생각해도 장난으로 살 금액은 아닌데, 누구였을까 궁금하던 차에 행사를 기획하신 분을 만나 이야기를 들을 수 있었습니다.</li><li><b>80대의 현역 작가분께서 구입하셨다</b>고 하더군요.</li></ul><ul><li>깜짝 놀랐습니다.</li><li>작품이 걸린 것만도 너무 기분이 좋았는데, </li><li>판매까지 되고, </li><li>심지어 작가께서 선택해주셨다는 데 더 놀랐습니다.</li><li>한편으로는 AI 그림이 낯설거나 거부감이 들 수도 있는데 선택해주신 넓은 마음이 감사했습니다.</li></ul><h1 id="3-맺음말"><a href="#3-맺음말" class="headerlink" title="3. 맺음말"></a>3. 맺음말</h1><ul><li>몇몇 친구들과 가족에게는 이야기했습니다만, 은퇴 후 개인전을 하는 꿈이 있습니다.</li><li>그림을 직업으로 선택하지는 않았지만 너무나 좋아하기 때문입니다.</li><li>사람들과 자주 어울리지 않는 성격상 감정을 배설하는 거의 유일한 통로이기도 하고</li><li>다른 재주가 별로 없기도 합니다.</li></ul><ul><li>모순되지만, 그러면서도 미술전 전시를 타진해본 적은 없습니다.</li><li>추천을 받아 전시를 하고 판매까지 하면서 자신감이 많이 생겼습니다.</li><li>사실 업무적으로 너무 힘든 기간이었는데 여기서 얻은 기쁨으로 버틸 정도였습니다.</li><li>앞으로도 본업을 우선하겠지만, 혼자 그림을 그리기보다 더 많은 분들과 나눌 기회를 적극적으로 찾아보려고 합니다.</li></ul><ul><li><b>도움주신 모든 인연과 지지해준 가족들께 감사드립니다.</b></li></ul><p><img src="49_hiddenartists_12.png" alt="행사 포스터"><br></p><p><img src="49_hiddenartists_13.jpg" alt="도록 표지"><br></p><p><img src="49_hiddenartists_14.jpg" alt="도록 내부"><br></p>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/General/">General</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/openai/">openai</category>
      
      <category domain="https://jehyunlee.github.io/tags/chatgpt/">chatgpt</category>
      
      <category domain="https://jehyunlee.github.io/tags/dalle/">dalle</category>
      
      
    </item>
    
    <item>
      <title>KIER 강연 - AI활용 업무 효율화 방안</title>
      <link>https://jehyunlee.github.io/2024/04/03/General-48_kierworkaccellec/</link>
      <guid>https://jehyunlee.github.io/2024/04/03/General-48_kierworkaccellec/</guid>
      <pubDate>Wed, 03 Apr 2024 12:04:00 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;지난 3/28일, 한국에너지기술연구원에서 출연연 분들을 대상으로 업무효율화 강의를 드렸습니다.&lt;/li&gt;
&lt;li&gt;ChatGPT를 소개하는 강의는 많고 신기한 기능들을 소개하는 영상도 많지만&lt;/li&gt;
&lt;li&gt;글쓰기를 제외하고 행정과 연구에</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>지난 3/28일, 한국에너지기술연구원에서 출연연 분들을 대상으로 업무효율화 강의를 드렸습니다.</li><li>ChatGPT를 소개하는 강의는 많고 신기한 기능들을 소개하는 영상도 많지만</li><li>글쓰기를 제외하고 행정과 연구에 어떻게 사용하는지를 알려주는 강의는 적은 듯 합니다.</li><li>저의 경험들을 토대로 여러분에게 도움이 될만한 정보들을 정리하려고 노력했습니다.</li><li>발표 영상 : (<a href="https://youtu.be/0BiaXp4vFOw">Youtube Link</a>)<br></li></ul><div class="video-container"><iframe src="https://www.youtube.com/embed/0BiaXp4vFOw" frameborder="0" loading="lazy" allowfullscreen></iframe></div> <ul><li>영상에서 소개드린 자료들은 따로 정리하여 공개했습니다. (<a href="https://jehyunlee.github.io/2024/04/02/General-47_kierworkaccel/">해당 글 링크</a>)</li><li>도구를 사용하는 법은 위 글에 첨부드린 자료를 통해 보시기 바라며,</li><li>SW 사용법 자료에 담겨 있지 않은 내용들을 본 글을 통해 다시 한번 말씀드립니다.</li></ul><h3 id="1-딥러닝-언어모델이-전부가-아닙니다"><a href="#1-딥러닝-언어모델이-전부가-아닙니다" class="headerlink" title="1. 딥러닝, 언어모델이 전부가 아닙니다."></a>1. 딥러닝, 언어모델이 전부가 아닙니다.</h3><ul><li>거대언어모델 같은 대형 모델은 완성형 장난감과 같습니다.</li><li>스티커를 붙이거나 페인트를 칠하는 정도의 fine tuning에 속하는 수준의 개조는 할 수 있어도, </li><li>내 일에 딱 맞고 가벼운 프로그램을 만들 수는 없습니다.</li></ul><p><img src="48_kierworkaccellec_04.png"></p><ul><li>코딩을 하는 약간의 수고를 감수하면 맞춤형 프로그램을 만들 수 있고,</li><li>이 프로그램은 세상에는 없는 프로그램일 수 있습니다.</li><li><b>그리고 코딩은 언어모델이 가장 잘 하는 일 중 하나입니다.</b></li></ul><h3 id="2-포스터는-직접-만들어-보자"><a href="#2-포스터는-직접-만들어-보자" class="headerlink" title="2. 포스터는 직접 만들어 보자."></a>2. 포스터는 직접 만들어 보자.</h3><ul><li>이 정도 행사 포스터는 직접 만드실 수 있습니다.</li><li>조금 재미있는 포스터를 만들려면, <b>메시지를 시각화</b>해서 담으면 좋습니다.</li><li>이번 행사를 준비하면서 과거의 비효율적인 습관에 균열을 내고 싶다는 생각이 들었습니다.</li><li>이 광경을 <b>까만 돌이 대각선으로 깨진 가운데 균열에 꽃이 핀 모습</b>으로 형상화했습니다.</li><li>글자는 <b>Data Analytst</b>로 넣을 수 있지만(<a href="https://jehyunlee.github.io/2023/12/25/General-33-ChatGPT_DataAnalysis/">링크</a>) <b>파워포인트</b> 작업이 훨씬 더 편합니다.</li></ul><p><img src="48_kierworkaccellec_05.png" alt="첫 번째 포스터"></p><ul><li>그리고 피드백이 매우 중요합니다.</li><li>내가 알지 못하는 예기치 못한 반응을 상상하려면 타인의 시선이 필요합니다.</li><li><b>봄인데 색이 좀 어둡지 않느냐</b>는 의견을 받아 다음과 같이 배경색을 밝게 바꾸고,</li><li>하얀 배경에 어울리도록 다른 요소들을 수정했습니다.</li></ul><p><img src="48_kierworkaccellec_06.png" alt="두 번째 포스터"></p><ul><li>그리고 이 두 번째 포스터에서 <b>너무 추상적이다.</b>라는 피드백을 받았습니다.</li><li>이쪽 세계에 사는 저는 너무 잦은 입력을 받아 식상하다고 느끼지만 다른 분 관점에서는 다를 수 있습니다.</li><li>겸허하게 지적을 수용하고 클리셰를 적용합니다.</li></ul><p><img src="48_kierworkaccellec_07.png" alt="세 번째, 최종 포스터"></p><ul><li>그래서 이와 같은 포스터가 만들어졌고,</li><li>디자이너의 손을 거쳐 약도와 글꼴이 수정되어 최종 버전이 나왔습니다.</li></ul><p><img src="240328_%EC%97%85%EB%AC%B4%ED%9A%A8%EC%9C%A8%ED%99%94_%ED%8F%AC%EC%8A%A4%ED%84%B0.png" alt="행사 포스터"></p><h3 id="3-이렇게-시작했습니다"><a href="#3-이렇게-시작했습니다" class="headerlink" title="3. 이렇게 시작했습니다."></a>3. 이렇게 시작했습니다.</h3><ul><li>종종 이런 질문들을 받습니다.</li></ul><blockquote><p><b>“어떻게 에너지연에서 이런 일을 했어요?”</b></p></blockquote><ul><li>IT, AI가 주력인 ETRI나 KISTI라면 이런 일을 하는 것이 자연스러울텐데, 에너지연이라 의외라는 질문입니다.</li><li>또 이런 질문도 받습니다.</li></ul><blockquote><p><b>“연구원이 이런 일을 해요?”</b></p></blockquote><ul><li>이 질문은 저와 가까운 분들에게는 조금 더 솔직하게 이렇게 받기도 합니다.</li></ul><blockquote><p><b>“논문 안 써요?”</b>, <b>“연구 안 해요?”</b></p></blockquote><ul><li>이 질문들에 대한 답을 회피한 건 아니었지만 제대로 말씀드릴 기회가 없었습니다.</li><li>이번 기회에 다음과 같이 말씀을 드렸습니다.</li></ul><p><img src="48_kierworkaccellec_01.png"></p><ul><li>논문 못 쓰는 건 별로 문제가 된다고 느끼지 않습니다.</li><li>교수와 달리 출연연은 입사 후 별 문제를 일으키지 않으면 tenure라 불리는 정년을 보장해 줍니다.</li><li><b>단기 실적에 얽매이지 말고 장기적인 안목으로 문제를 찾고 해결하라</b>는 메시지로 인지하고 있습니다.</li></ul><ul><li>그리고, 5년간의 회사 생활은 제게 <b>“의미 있는 일이란 무엇인가”</b>라는 화두를 주었습니다.</li><li>기초과학을 지원해야 한다는 당위성과 별개로, 응용성도 없고 기초도 아닌 무의미한 일들이 많습니다.</li><li>한 사람을 성장시키는 정도의 의미 정도밖에 없는 일들이지만 여기에 매인 이들을 생각보다 많이 만납니다.</li><li><b>이 시점에서 제가 쓸 수 있는 논문보다 세상에 미칠 수 있는 임팩트가 더 클 것</b>이라는 생각을 했습니다.</li><li>그리고 <b>임팩트는 꼭 첨단에서 오지 않으며</b>, 바꿔 말하면 <b>이 정도 수준도 달성하지 못한 것이 오늘날 출연연의 현실</b>이기 때문에 <b>내 직장을 데이터 기반 연구가 불가능하고 낭비가 심한 이 상태로 방치할 수 없다</b>는 판단을 하고 있습니다.</li></ul><ul><li><b>제 커리어를 걱정해 주시는 분도 있습니다.</b> 선의라고 생각합니다.</li><li>말씀은 감사하지만 <b>의미 있는 일을 재밌게 한다면 커리어는 따라 올 것</b>이라고 믿고 있습니다.</li><li>하나 걸리는 게 <b>유지보수의 늪</b>입니다.</li><li>솔직히 힘이 들며, 업무로 인정받지 못하는 경우도 많이 있습니다.</li><li>그러나 <b>개발이 출산이라면 유지보수는 육아입니다.</b></li><li>유지보수 없이는 개발이 무의미하기에 출연연의 자유도를 활용해 스스로 업무로 정의하고 끌고 나가고 있습니다.</li></ul><p><img src="48_kierworkaccellec_02.png"></p><ul><li>그리고 짧다면 짧고 길다면 긴 인생 속에서 많은 이들에게 격려와 도움을 받았습니다.</li><li><b>열심히 한다면 언젠가는 외롭지 않을 것</b>이라는 믿음을 가지고 있으며</li><li>실제로 처음에는 혼자 했지만 어느 새 옆에 한 사람, 두 사람, 그리고 제법 큰 모임이 함께 해 주고 계십니다.</li><li>모두 감사한 분들입니다.</li></ul><h3 id="4-당부의-말씀"><a href="#4-당부의-말씀" class="headerlink" title="4. 당부의 말씀"></a>4. 당부의 말씀</h3><p><img src="48_kierworkaccellec_03.png"></p><ul><li>그런데 조심하셔야 합니다.</li><li>이런 일이 <b>섣불리 나서기 힘든 일</b>인 만큼, 그리고 <b>누군가에게 시킨다고 되는 일이 아닌</b> 만큼,</li><li>어쩌다 한 명의 능력자가 보이면 말라 죽을 때까지 일을 시켜 <b>황금알을 낳는 거위의 배를 갈라버리는 일</b>이 빈번합니다.</li><li>조직 입장에서는 마른 걸레 하나를 최대한 잘 짜서 써먹었다고 볼 수도 있겠습니다만</li><li>이런 싹을 옆에서 바라보는 다른 싹들로 하여금 <b>이러면 안되겠다는 심정으로 숨게 만드는 일</b>입니다.</li><li><b>말려 죽인 싹이 하나로 끝나지 않는다는 말씀</b>입니다.</li></ul><ul><li>주변의 시기를 받을 만큼 격려와 응원을 해줘야 다른 싹들이 이를 보고 <b>“나도 한번 해볼까?”</b>라는 생각을 합니다.</li><li>다행히 저는 잘 대우받았고 주변에 계신 많은 분들을 알 수 있었습니다.</li><li>이 분들을 지키고 새로운 싹을 계속 찾기 위해서라도 새싹은 보호받아야 합니다.</li></ul><ul><li>오늘도 어딘가에서 자라는 새싹들이 큰 그늘을 드리우는 나무가 되기를 바라며, 항상 응원합니다.</li></ul>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/General/">General</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/dall-e/">dall.e</category>
      
      <category domain="https://jehyunlee.github.io/tags/chatgpt/">chatgpt</category>
      
      <category domain="https://jehyunlee.github.io/tags/data-visualization/">data visualization</category>
      
      <category domain="https://jehyunlee.github.io/tags/data-analyst/">data analyst</category>
      
      <category domain="https://jehyunlee.github.io/tags/perplexity/">perplexity</category>
      
      <category domain="https://jehyunlee.github.io/tags/scispace/">scispace</category>
      
      
    </item>
    
    <item>
      <title>ChatGPT 활용 KIER 강의자료 중 업무효율화 SW</title>
      <link>https://jehyunlee.github.io/2024/04/02/General-47_kierworkaccel/</link>
      <guid>https://jehyunlee.github.io/2024/04/02/General-47_kierworkaccel/</guid>
      <pubDate>Tue, 02 Apr 2024 10:22:00 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;한국에너지기술연구원에서 출연연을 대상으로 업무효율화 강의를 드렸습니다.&lt;/li&gt;
&lt;li&gt;한시간 반 가량의 발표 중 업무효율화 관련 프로그램을 여럿 소개드렸고,&lt;/li&gt;
&lt;li&gt;보안성이 없는 공개된 프로그램들의 사용법을 정리하였습니다.&lt;</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>한국에너지기술연구원에서 출연연을 대상으로 업무효율화 강의를 드렸습니다.</li><li>한시간 반 가량의 발표 중 업무효율화 관련 프로그램을 여럿 소개드렸고,</li><li>보안성이 없는 공개된 프로그램들의 사용법을 정리하였습니다.</li></ul><blockquote><p><a href="240328_%EC%9D%B4%EC%A0%9C%ED%98%84_%EC%97%85%EB%AC%B4%ED%9A%A8%EC%9C%A8%ED%99%94SW%EC%A0%95%EB%A6%AC%EC%9E%90%EB%A3%8C.pdf"><b>업무효율화 SW 정리자료 다운로드</b></a></p></blockquote><ul><li>총 <b>29페이지 분량</b>에 5종 SW의 6가지 사용법을 간결하게 담았습니다.<br></li></ul><p><img src="47_kierworkaccel_01.png" alt="목차"></p><ul><li>강연에서 말씀드린 시연 화면을 기본으로 담고,</li><li>각 프로그램별 <b>장점</b>, <b>단점</b>, <b>유료 옵션</b>을 담았습니다.</li><li><b>스마트폰 앱</b>과 <b>크롬/엣지 확장프로그램</b>을 지원하는 프로그램은 링크를 달았습니다.<br></li></ul><p><img src="47_kierworkaccel_02.png" alt="perplexity 개요"></p><ul><li>논문이나 보고서처럼 영문으로 된 pdf 문서를 자주 보는 입장에서 <b>scispace</b>가 매우 큰 도움이 됩니다.</li><li>유료 사용시 지능이 점프한다는 느낌이 듭니다. 가급적 유료 사용을 권장합니다.</li><li>강연에서 부족했던 각 기능에 대한 설명을 보완하였습니다.<br></li></ul><p><img src="47_kierworkaccel_03.png" alt="scispace copilot 사용 화면"></p><ul><li><b>ChatGPT</b>의 <b>Data Analytics</b>는 높은 자유도를 자랑합니다.</li><li>데이터는 물론 각종 라이브러리 업로드와 시각화의 자유를 누리시기 바랍니다.<br></li></ul><p><img src="47_kierworkaccel_04.png" alt="scispace copilot 사용 화면"></p><ul><li>코딩을 배워야만 하는 시대는 이미 지난 것으로 생각됩니다.</li><li>Computational thinking을 학습하는 도구로서의 코딩을 즐기시는 한편,</li><li>급한 업무는 여러 도구를 사용해 삶의 여유를 누리시기 바랍니다.</li></ul>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/General/">General</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/dall-e/">dall.e</category>
      
      <category domain="https://jehyunlee.github.io/tags/openai/">openai</category>
      
      <category domain="https://jehyunlee.github.io/tags/chatgpt/">chatgpt</category>
      
      <category domain="https://jehyunlee.github.io/tags/data-analyst/">data analyst</category>
      
      <category domain="https://jehyunlee.github.io/tags/perplexity/">perplexity</category>
      
      <category domain="https://jehyunlee.github.io/tags/scispace/">scispace</category>
      
      
    </item>
    
    <item>
      <title>DALL.E style (3) 스타일 가이드북</title>
      <link>https://jehyunlee.github.io/2024/03/20/General-46-dalle3styles3/</link>
      <guid>https://jehyunlee.github.io/2024/03/20/General-46-dalle3styles3/</guid>
      <pubDate>Tue, 19 Mar 2024 16:00:00 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;contributor: 조남경님&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;OpenAI API를 사용해 대량의 이미지를 생산했습니다.&lt;/li&gt;
&lt;li&gt;그러나 너무나 많은 이미지를 찍어낸 나머지 기법 이름과 매치해서 보</description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p>contributor: 조남경님</p></blockquote><ul><li>OpenAI API를 사용해 대량의 이미지를 생산했습니다.</li><li>그러나 너무나 많은 이미지를 찍어낸 나머지 기법 이름과 매치해서 보기가 어렵습니다.</li><li>python-pptx를 이용해 효과적으로 정리합니다. DeepL의 자동 번역도 빌립니다.</li></ul><ul><li>이번 글은 코드 비중이 큽니다. 보시기 어려울 것 같아 <b>최종결과 다운로드 링크</b>를 먼저 드립니다.</li><li>분량이 많아 통판과 함께 4개로 나눈 버전을 함께 올립니다.</li></ul><blockquote><p><a href="https://bit.ly/dalle382styles"><b>DALL.E3 스타일 가이드북 통판 다운로드</b></a>  </p></blockquote><blockquote><p><a href="240320_%EC%9D%B4%EC%A0%9C%ED%98%84_DALLE3_styles_Part1_watermark.pdf"><b>DALL.E3 스타일 가이드북 part I 다운로드</b></a><br><a href="240320_%EC%9D%B4%EC%A0%9C%ED%98%84_DALLE3_styles_Part2_watermark.pdf"><b>DALL.E3 스타일 가이드북 part II 다운로드</b></a><br><a href="240320_%EC%9D%B4%EC%A0%9C%ED%98%84_DALLE3_styles_Part3_watermark.pdf"><b>DALL.E3 스타일 가이드북 part III 다운로드</b></a><br><a href="240320_%EC%9D%B4%EC%A0%9C%ED%98%84_DALLE3_styles_Part4_watermark.pdf"><b>DALL.E3 스타일 가이드북 part IV 다운로드</b></a></p></blockquote><ul><li>활용시 출처를 명기해주시기 바랍니다.</li><li>무단 도용을 막기 위한 워터마크가 삽입되어 있습니다.</li><li>워터마크가 없는 버전을 원하시는 분께서는 개별 연락바랍니다. (<a href="mailto:&#106;&#101;&#x68;&#x79;&#x75;&#110;&#46;&#108;&#101;&#101;&#64;&#103;&#x6d;&#97;&#x69;&#x6c;&#46;&#99;&#111;&#x6d;">&#106;&#101;&#x68;&#x79;&#x75;&#110;&#46;&#108;&#101;&#101;&#64;&#103;&#x6d;&#97;&#x69;&#x6c;&#46;&#99;&#111;&#x6d;</a>)</li></ul><h1 id="4-OpenAI-API-추가-Image-Generation"><a href="#4-OpenAI-API-추가-Image-Generation" class="headerlink" title="4. OpenAI API: 추가 Image Generation"></a>4. OpenAI API: 추가 Image Generation</h1><h2 id="4-1-빠진-스타일-추가"><a href="#4-1-빠진-스타일-추가" class="headerlink" title="4.1. 빠진 스타일 추가"></a>4.1. 빠진 스타일 추가</h2><blockquote><p><a href="https://jehyunlee.github.io/2024/03/15/General-44-dalle3styles/">Pega Devlog: GPT로 스타일 리스팅</a></p></blockquote><ul><li><a href="https://jehyunlee.github.io/2024/03/15/General-44-dalle3styles/">지난 글</a>에서 챗달이(ChatGPT + DALL.E)가 제공하는 다양한 스타일을 확인했습니다.</li><li>이 다양한 스타일을 최대한 자동으로 정리하고자 ChatGPT의 도움을 받았지만,</li><li>막상 챗달이에서 그림을 그려보려면 <b>여전히 없는 스타일들이 있습니다.</b></li></ul><p><video src="chatgptdalle3-styles.mp4" width="998" height="356" controls preload></video></p><ul><li><code>mute tone</code>, <code>sepia</code> 같은 그림의 톤은 이번 탐구의 대상이 아니니 넘어간다 치더라도,</li><li>중요 스타일들은 빠진 것이 너무 불편해서 <b>손으로 챗달이 화면을 넘기며 이름을 추가했습니다.</b></li><li><code>comic book</code>, <code>folk art</code>, <code>silk screen</code>, <code>acrylic</code>, <code>charcoal</code>, <code>hand-drawn</code>, <code>pencil sketch</code>, <code>cave art</code>, <code>linocut</code>, <code>carravaggism</code>, <code>cartoon</code>, <code>pastel</code>, <code>retro</code>, <code>ink wask</code>, <code>ink painting</code>, <code>woodcut</code>, <code>alcohol ink</code>, <code>claymation</code>, <code>sci-fi</code>, <code>felt</code>, <code>crayon</code>, <code>mosaic</code>가 그 대상입니다.</li><li>결과적으로 <b>총 382종</b>의 스타일을 확보했고, ChatGPT의 힘을 빌려 description과 그림을 얻었습니다.</li></ul><h2 id="4-2-샘플-그림-추가"><a href="#4-2-샘플-그림-추가" class="headerlink" title="4.2. 샘플 그림 추가"></a>4.2. 샘플 그림 추가</h2><ul><li>커피를 소재로 여러 스타일을 적용했으나 답답함이 느껴졌습니다.</li><li>커피잔은 정적인 대상이기 때문에 스타일 반영에 제약이 있을 것이라 생각해서 다른 대상을 여럿 추가했습니다.</li><li><b>사물</b>인 커피잔에 <b>동물</b>, <b>식물</b>, <b>소년</b>, <b>소녀</b>, <b>건축물</b>, <b>풍경</b>을 추가합니다.</li><li>대상이 스타일에 따라 구도가 바뀔 수도 있을 것 같아 프롬프트는 최소한으로 입력했습니다.</li></ul><blockquote><p>{object}, in style of {style}, square aspect ratio.</p></blockquote><ul><li>여러 명화에서 소재를 가져와 추가했습니다.</li><li>실제 그림과 그림 제목을 프롬프트로 사용했을 때 얼마나 유사한지 비교해보고 싶기도 했습니다.</li></ul><blockquote><p><code>a cup of coffee</code>, <code>a cute cat</code> : 조남경著, 미드저니 프롬프트 가이드<br><code>boy with a basket of fruit</code> : 카라바조 (1593), Caravaggism<br><code>eiffel tower</code> : 조르주 쇠라 (1889), pointillism<br><code>sunflowers</code> : 반 고흐 (1888), Post Impressionism<br><code>water-lily pond</code> : 클로드 모네 (1919), Impressionism<br><code>Young Girls at the Piano</code> : 오귀스트 르누아르 (1892) Impressionism</p></blockquote><p><img src="46_dalle3style3_02.png"></p><ul><li>일부 샘플 결과를 비교해 보니 소재를 추가한 보람이 있습니다.</li><li>여러 소재에서 스타일의 특색이 잘 느껴집니다.</li></ul><p><img src="46_dalle3style3_01.png"></p><ul><li>그런데 생각보다 달리의 자유도가 많이 반영된 것 같습니다.</li><li>짧은 프롬프트가 입력되면 비어 있는 공간을 달리의 상상력으로 채우기 때문입니다.</li><li>챗달이가 만든 revised prompt를 저장해 두었으니 어떻게 상상했는지 알아볼 수 있습니다.</li></ul><p><img src="46_dalle3style3_08.png"></p><ul><li>이렇게 <b>382종 x 7가지 대상 = 2,674장</b>의 그림이 마련되었습니다.</li><li>그림 하나에 1초씩만 쓰며 넘겨도 45분이 걸리는 분량입니다.</li><li>한번에 보고 머리에 넣기는 도저히 무리입니다. </li><li><b>두고 종종 볼 수 있도록 예쁘게 정리합시다.</b></li></ul><h1 id="5-자료-정리"><a href="#5-자료-정리" class="headerlink" title="5. 자료 정리"></a>5. 자료 정리</h1><h2 id="5-1-Microsoft-Powerpoint"><a href="#5-1-Microsoft-Powerpoint" class="headerlink" title="5.1. Microsoft Powerpoint"></a>5.1. Microsoft Powerpoint</h2><blockquote><p><a href="https://python-pptx.readthedocs.io/">python-pptx</a></p></blockquote><ul><li>함께 담을 정보가 제법 많습니다.</li><li>항목만 꼽아도 <b>스타일 이름</b>, <b>스타일 설명</b>, <b>그림 7장</b>이 있고, 제법 긴 <b>revised prompt</b>도 참고차 함께 정리해야 합니다.</li><li><b>스타일 설명은 한국어로 번역도 해야 할 것 같습니다.</b></li><li>고민 끝에 파워포인트에서 스타일별로 다음과 같은 페이지를 구성하기로 했습니다.</li></ul><p><img src="46_dalle3style3_03.png"></p><ul><li>마우스를 클릭하고 드래그하며 한 장을 어찌어찌 만들기는 했는데 시간이 제법 많이 갔습니다.</li><li>382장을 만들려니 아득합니다.</li><li>하지만 <b>우리에게는 파이썬과 python-pptx 라이브러리가 있습니다.</b></li><li>자동화를 해버립니다.</li></ul><h2 id="5-2-DeepL-API"><a href="#5-2-DeepL-API" class="headerlink" title="5.2. DeepL API"></a>5.2. DeepL API</h2><blockquote><p><a href="https://developers.deepl.com/docs">DeepL API</a></p></blockquote><ul><li>먼저, 가독성을 높이기 위해 스타일 설명을 한글로 실어야 합니다.</li><li>영문으로 되어 있는 description을 번역합니다.</li><li>다행히 제법 좋은 번역기, <b>DeepL API</b>의 힘을 빌릴 수 있습니다.</li></ul><p><img src="46_dalle3style3_04.png"></p><ul><li><a href="https://developers.deepl.com/docs">DeepL API 문서</a>를 따라 예제를 만들어 실행합니다.</li><li>다음과 같이 영어가 불어로 번역됩니다. 속도도 제법 빠릅니다.<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> deepl</span><br><span class="line"></span><br><span class="line">translator = deepl.Translator(DeepL_API_KEY)</span><br><span class="line"></span><br><span class="line">result = translator.translate_text(<span class="string">&quot;Hello, world!&quot;</span>, target_lang=<span class="string">&quot;FR&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(result.detected_source_lang)</span><br><span class="line"><span class="built_in">print</span>(result.text)</span><br></pre></td></tr></table></figure><ul><li>실행 결과<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">EN  <span class="comment"># 입력 언어 감지: 영어</span></span><br><span class="line">Bonjour à tous !</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li>모아둔 <b>style description에 위 코드를 적용</b>합니다.</li><li><code>pandas Series</code>에 <code>apply()</code>를 적용하면 다음과 같이 <b>깔끔한 번역</b>을 얻을 수 있습니다.</li></ul><p><img src="46_dalle3style3_05.png"></p><ul><li>이제 파워포인트 슬라이드 작성을 자동화할 차례입니다.</li></ul><h2 id="5-3-데이터-정리"><a href="#5-3-데이터-정리" class="headerlink" title="5.3. 데이터 정리"></a>5.3. 데이터 정리</h2><ul><li>먼저, 데이터를 깔끔하게 정리합시다.</li><li><code>pandas DataFrame</code>을 사용해 input prompt에서 <b>object</b>와 <b>style</b>을 분리해둡니다.</li><li>생성한 그림들이 object별 개별 폴더에 들어있고, 파일명에 style이 포함되어 있기 때문에 이미지 확보에 필요합니다.</li><li>또, 이렇게 분리한 object와 style은 <b>revised prompt</b>를 불러내는 key가 됩니다.</li></ul><p><img src="46_dalle3style3_06.png"></p><ul><li>데이터 정리는 이 블로그의 다른 글에서 많이 했고, 어렵지 않으므로 생략합니다.</li><li><b>파워포인트 슬라이드 제작</b>에 집중하겠습니다.</li></ul><h2 id="5-4-파워포인트-슬라이드-제작"><a href="#5-4-파워포인트-슬라이드-제작" class="headerlink" title="5.4. 파워포인트 슬라이드 제작"></a>5.4. 파워포인트 슬라이드 제작</h2><h3 id="5-4-1-새-슬라이드-만들기"><a href="#5-4-1-새-슬라이드-만들기" class="headerlink" title="5.4.1. 새 슬라이드 만들기"></a>5.4.1. 새 슬라이드 만들기</h3><ul><li><p>python-pptx는 파워포인트에서 마우스로 클릭하고 키보드를 입력하여 진행하는 모든 일을 코드로 수행합니다.</p></li><li><p>예를 들면 파워포인트에서 도형을 집어 옮기는 일은 간단하면서 두리뭉술하지만,</p></li><li><p><b>먼저, 새 프레젠테이션 파일과 슬라이드를 만드는 것으로 시작합니다.</b></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pptx <span class="keyword">import</span> Presentation</span><br><span class="line"><span class="keyword">from</span> pptx.util <span class="keyword">import</span> Cm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 새 파일 만들기 </span></span><br><span class="line">presentation = Presentation() <span class="comment"># 새 프레젠테이션 만들기</span></span><br><span class="line">presentation.slide_width = Cm(<span class="number">33.867</span>)  <span class="comment"># 기본 16:9 디자인</span></span><br><span class="line">presentation.slide_height = Cm(<span class="number">19.05</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Add an empty slide</span></span><br><span class="line">slide_layout = presentation.slide_layouts[<span class="number">6</span>]</span><br><span class="line">slide = presentation.slides.add_slide(slide_layout) <span class="comment"># 새 슬라이드 만들기</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 파일 저장</span></span><br><span class="line">presentation.save(<span class="string">f&quot;./doc/example.pptx&quot;</span>)</span><br></pre></td></tr></table></figure></li><li><p>위 코드를 실행하면 새 프레젠테이션이 만들어집니다.</p></li><li><p>python-ppt에서는 도형이 놓일 지점의 좌표를 입력해야 합니다. 단위는 <b>cm</b>로 지정했습니다.</p></li><li><p>공식 예제에서는 Inch를 사용하지만 우리는 cm를 주로 쓰기 때문입니다.</p></li><li><p><b>손으로 만든 파워포인트 슬라이드에서 위치를 읽어 참조하기에 cm가 좋습니다.</b></p></li></ul><p><img src="46_dalle3style3_09.png"></p><ul><li>이제 새 슬라이드에 <b>텍스트 상자</b>를 얹어 글을 쓰고 폰트와 색을 고를 차례입니다.<br><p></li></ul><h3 id="5-4-2-텍스트-상자-만들기"><a href="#5-4-2-텍스트-상자-만들기" class="headerlink" title="5.4.2. 텍스트 상자 만들기"></a>5.4.2. 텍스트 상자 만들기</h3><ul><li>앞서 손으로 만든 슬라이드에서 대부분의 객체가 텍스트 상자입니다.</li><li>텍스트 상자는 위치(가로, 세로), 크기(가로, 세로), 글꼴, 글꼴 크기, 글꼴 색 등 다양한 속성이 필요합니다.</li><li>텍스트 상자를 만들때마다 이 모든 속성을 지정해가며 만들기보다는 함수를 만드는 것이 합리적입니다.</li></ul><ul><li><p><b>색을 처리하는 함수</b>를 먼저 만듭니다.</p></li><li><p>모든 도형에 색을 지정하는 과정이 수반되기 때문에 이 역시 함수를 만드는 것이 좋습니다.</p></li><li><p>입력 형식(<code>list</code>, <code>tuple</code>, <code>string</code>)이 무엇이건 0~255 사이의 정수를 반환하는 함수를 만듭니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 입력 색 처리 (list, tuple, string)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_color</span>(<span class="params">color</span>):</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">isinstance</span>(color, <span class="built_in">list</span>) <span class="keyword">or</span> <span class="built_in">isinstance</span>(color, <span class="built_in">tuple</span>):</span><br><span class="line">        R, G, B = color[<span class="number">0</span>], color[<span class="number">1</span>], color[<span class="number">2</span>]</span><br><span class="line">    <span class="keyword">elif</span> <span class="built_in">isinstance</span>(color, <span class="built_in">str</span>) <span class="keyword">and</span> <span class="keyword">not</span> color.startswith(<span class="string">&quot;#&quot;</span>) <span class="keyword">and</span> <span class="built_in">len</span>(color) == <span class="number">6</span>:</span><br><span class="line">        R, G, B = <span class="built_in">int</span>(color[<span class="number">0</span>:<span class="number">2</span>], <span class="number">16</span>), <span class="built_in">int</span>(color[<span class="number">2</span>:<span class="number">4</span>], <span class="number">16</span>), <span class="built_in">int</span>(color[<span class="number">4</span>:], <span class="number">16</span>)</span><br><span class="line">    <span class="keyword">elif</span> <span class="built_in">isinstance</span>(color, <span class="built_in">str</span>) <span class="keyword">and</span> color.startswith(<span class="string">&quot;#&quot;</span>) <span class="keyword">and</span> <span class="built_in">len</span>(color) == <span class="number">7</span>:</span><br><span class="line">        R, G, B = <span class="built_in">int</span>(color[<span class="number">1</span>:<span class="number">3</span>], <span class="number">16</span>), <span class="built_in">int</span>(color[<span class="number">3</span>:<span class="number">5</span>], <span class="number">16</span>), <span class="built_in">int</span>(color[<span class="number">5</span>:], <span class="number">16</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        R, G, B = <span class="literal">None</span>, <span class="literal">None</span>, <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> R, G, B</span><br></pre></td></tr></table></figure></li><li><p><b>텍스트 상자 입력 함수</b>를 만듭니다.</p></li><li><p>글꼴 이름은 파워포인트에서 보이는 이름 그대로 사용할 수 있어 편리합니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pptx.util <span class="keyword">import</span> Pt</span><br><span class="line"><span class="keyword">from</span> pptx.enum.text <span class="keyword">import</span> PP_ALIGN, MSO_ANCHOR</span><br><span class="line"></span><br><span class="line"><span class="comment"># Textbox 삽입 함수</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add_textbox</span>(<span class="params">slide, left, top, width, height, text=<span class="string">&quot;sample&quot;</span>, ha=<span class="string">&quot;left&quot;</span>, va=<span class="string">&quot;top&quot;</span>, fontname=<span class="string">&quot;나눔고딕&quot;</span>, fontsize=<span class="number">12</span>, fontcolor=(<span class="params"><span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span></span>)</span>):</span></span><br><span class="line">    <span class="comment"># font color 변환</span></span><br><span class="line">    R, G, B = get_color(fontcolor)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># text box position and size</span></span><br><span class="line">    text_box = slide.shapes.add_textbox(Cm(left), Cm(top), Cm(width), Cm(height))</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># text and its properties</span></span><br><span class="line">    text_frame = text_box.text_frame</span><br><span class="line">    text_frame.text = text</span><br><span class="line">    text_frame.paragraphs[<span class="number">0</span>].font.name = fontname</span><br><span class="line">    text_frame.paragraphs[<span class="number">0</span>].font.size = Pt(fontsize)</span><br><span class="line">    text_frame.paragraphs[<span class="number">0</span>].font.color.rgb = RGBColor(R, G, B)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># horizontal alignment</span></span><br><span class="line">    text_frame.paragraphs[<span class="number">0</span>].alignment = PP_ALIGN.LEFT</span><br><span class="line">    <span class="keyword">if</span> ha == <span class="string">&quot;right&quot;</span>:</span><br><span class="line">        text_frame.paragraphs[<span class="number">0</span>].alignment = PP_ALIGN.RIGHT</span><br><span class="line">    <span class="keyword">elif</span> ha == <span class="string">&quot;center&quot;</span>:</span><br><span class="line">        text_frame.paragraphs[<span class="number">0</span>].alignment = PP_ALIGN.CENTER</span><br><span class="line"></span><br><span class="line">    <span class="comment"># vertical alignment</span></span><br><span class="line">    text_frame.vertical_anchor = MSO_ANCHOR.TOP</span><br><span class="line">    <span class="keyword">if</span> va == <span class="string">&quot;middle&quot;</span>:</span><br><span class="line">        text_frame.vertical_anchor = MSO_ANCHOR.MIDDLE</span><br><span class="line">    <span class="keyword">elif</span> va == <span class="string">&quot;bottom&quot;</span>:</span><br><span class="line">        text_frame.vertical_anchor = MSO_ANCHOR.BOTTOM </span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> text_box</span><br></pre></td></tr></table></figure></li><li><p>이 함수를 사용해 슬라이드에 텍스트를 추가합니다. 예제 style은 3D Graffiti로 설정했습니다.</p></li><li><p>우측 상단에 <b>저작권 관련 문구</b>를 하늘색으로 입력하고,</p></li><li><p>좌측 상단에 <b>style 이름</b>을 <b>나눔고딕 ExtraBold</b>를 사용해 입력합니다.</p></li><li><p>그 아래 <b>style 설명</b>을 영문과 국문으로 회색의 조금 작은 글씨로 입력합니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">style = <span class="string">&quot;3D Graffiti&quot;</span></span><br><span class="line"><span class="comment"># Textbox: Author name</span></span><br><span class="line">text_stylename = add_textbox(slide, <span class="number">18.87</span>, <span class="number">0</span>, <span class="number">15</span>, <span class="number">0.77</span>, <span class="string">&quot;2024.03.19. Made by Jehyun LEE: Jehyun.lee@gmail.com&quot;</span>, ha=<span class="string">&quot;right&quot;</span>, </span><br><span class="line">                            fontname=<span class="string">&quot;나눔고딕 ExtraBold&quot;</span>, fontsize=<span class="number">12</span>, fontcolor=<span class="string">&quot;#B4C7E7&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Textbox: Style name</span></span><br><span class="line">text_stylename = add_textbox(slide, <span class="number">0.6</span>, <span class="number">0.62</span>, <span class="number">33</span>, <span class="number">1.28</span>, style, fontname=<span class="string">&quot;나눔고딕 ExtraBold&quot;</span>, fontsize=<span class="number">24</span>, fontcolor=(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># Textbox: Style description (en/ko)</span></span><br><span class="line">description = df_styles_merged.loc[df_styles_merged[<span class="string">&quot;style&quot;</span>] == style, <span class="string">&quot;description&quot;</span>].values[<span class="number">0</span>]</span><br><span class="line">description_ko = df_styles_merged.loc[df_styles_merged[<span class="string">&quot;style&quot;</span>] == style, <span class="string">&quot;description_ko&quot;</span>].values[<span class="number">0</span>]</span><br><span class="line">text_desc_en = add_textbox(slide, <span class="number">0.6</span>, <span class="number">2.2</span>, <span class="number">33</span>, <span class="number">0.77</span>, description, fontname=<span class="string">&quot;나눔고딕 ExtraBold&quot;</span>, fontsize=<span class="number">12</span>, fontcolor=(<span class="number">127</span>, <span class="number">127</span>, <span class="number">127</span>))</span><br><span class="line">text_desc_ko = add_textbox(slide, <span class="number">0.6</span>, <span class="number">2.96</span>, <span class="number">33</span>, <span class="number">0.77</span>, description_ko, fontname=<span class="string">&quot;나눔고딕 ExtraBold&quot;</span>, fontsize=<span class="number">12</span>, fontcolor=(<span class="number">127</span>, <span class="number">127</span>, <span class="number">127</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 파일 저장</span></span><br><span class="line">presentation.save(<span class="string">f&quot;./doc/example.pptx&quot;</span>)</span><br></pre></td></tr></table></figure></li></ul><p><img src="46_dalle3style3_10.png"><br></p><p><h3 id="5-4-3-표-만들기"><a href="#5-4-3-표-만들기" class="headerlink" title="5.4.3. 표 만들기"></a>5.4.3. 표 만들기</h3><ul><li><p>object 이름과 revised prompt가 담긴 <b>표를 만들 차례</b>입니다.</p></li><li><p>표는 여러 개의 텍스트 상자가 붙어있다고 볼 수 있으며, row와 column 수, row height와 column width 등 훨씬 많은 속성을 필요로 합니다.</p></li><li><p>색이 여러 곳에 들어가야 하기 때문에 여기서는 background colors와 font colors를 hex code로만 받도록 했습니다.</p></li><li><p>그래도 복잡해져서 column별로 속성을 통일하도록 했는데, 실제 시행 착오를 겪으며 구현에 적지 않은 시간이 걸렸습니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pptx.dml.color <span class="keyword">import</span> RGBColor</span><br><span class="line"></span><br><span class="line"><span class="comment"># Table 삽입 함수</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add_table</span>(<span class="params">slide, left, top, width, height, nrow=<span class="number">2</span>, ncol=<span class="number">2</span>, row_heights=<span class="number">1</span>, col_widths=<span class="number">1</span>, bgcolors=<span class="string">&quot;#FFFFFF&quot;</span>, </span></span></span><br><span class="line"><span class="params"><span class="function">              texts=<span class="literal">None</span>, fontnames=<span class="string">&quot;나눔고딕&quot;</span>, fontsizes=<span class="number">12</span>, fontcolors=<span class="string">&quot;#000000&quot;</span></span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    bgcolors : cell background color. should be hex code or list of hex code. </span></span><br><span class="line"><span class="string">               If not specified, &quot;none&quot; is used and no background color is set.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># table position and size</span></span><br><span class="line">    table = slide.shapes.add_table(nrow, ncol, Cm(left), Cm(top), Cm(width), Cm(height))</span><br><span class="line">    table.style = <span class="string">&quot;Table Grid&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># set row height</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">isinstance</span>(row_heights, <span class="built_in">int</span>) <span class="keyword">or</span> <span class="built_in">isinstance</span>(row_heights, <span class="built_in">float</span>):</span><br><span class="line">        <span class="keyword">for</span> row <span class="keyword">in</span> table.table.rows:</span><br><span class="line">            row.height = Cm(row_heights)</span><br><span class="line">    <span class="keyword">elif</span> <span class="built_in">isinstance</span>(row_heights, <span class="built_in">list</span>) <span class="keyword">or</span> <span class="built_in">isinstance</span>(row_heights, <span class="built_in">tuple</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(row_heights) != nrow:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;&#x27;row_heights&#x27; should be a scalar or vector with same length with &#x27;rows&#x27;&quot;</span>)</span><br><span class="line">            exit()</span><br><span class="line">        <span class="keyword">for</span> row, row_height <span class="keyword">in</span> <span class="built_in">zip</span>(table.table.rows, row_heights):</span><br><span class="line">            row.height = Cm(row_height)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># set column widths</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">isinstance</span>(col_widths, <span class="built_in">int</span>) <span class="keyword">or</span> <span class="built_in">isinstance</span>(col_widths, <span class="built_in">float</span>):</span><br><span class="line">        <span class="keyword">for</span> col <span class="keyword">in</span> table.table.columns:</span><br><span class="line">            col.width = Cm(col_widths)</span><br><span class="line">    <span class="keyword">elif</span> <span class="built_in">isinstance</span>(col_widths, <span class="built_in">list</span>) <span class="keyword">or</span> <span class="built_in">isinstance</span>(col_widths, <span class="built_in">tuple</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(col_widths) != ncol:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;&#x27;col_widths&#x27; should be a scalar or vector with same length with &#x27;cols&#x27;&quot;</span>)</span><br><span class="line">            exit()</span><br><span class="line">        <span class="keyword">for</span> col, col_width <span class="keyword">in</span> <span class="built_in">zip</span>(table.table.columns, col_widths):</span><br><span class="line">            col.width = Cm(col_width)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># background colors and font colors are set by columns</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(texts, np.ndarray) <span class="keyword">and</span> texts == <span class="literal">None</span>:</span><br><span class="line">        texts = np.zeros((nrow, ncol))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">isinstance</span>(bgcolors, <span class="built_in">list</span>) <span class="keyword">or</span> <span class="built_in">isinstance</span>(bgcolors, <span class="built_in">tuple</span>):</span><br><span class="line">        bgcolors_list = [(R, G, B) <span class="keyword">for</span> R, G, B <span class="keyword">in</span> <span class="built_in">map</span>(get_color, bgcolors)]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        bgcolors_list = [get_color(bgcolors)] * ncol</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">isinstance</span>(fontcolors, <span class="built_in">list</span>) <span class="keyword">or</span> <span class="built_in">isinstance</span>(fontcolors, <span class="built_in">tuple</span>):</span><br><span class="line">        fontcolors_list = [(R, G, B) <span class="keyword">for</span> R, G, B <span class="keyword">in</span> <span class="built_in">map</span>(get_color, fontcolors)]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        fontcolors_list = [get_color(fontcolors)] * ncol</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">isinstance</span>(fontnames, <span class="built_in">list</span>) <span class="keyword">or</span> <span class="built_in">isinstance</span>(fontnames, <span class="built_in">tuple</span>):</span><br><span class="line">        fontnames_list = fontnames</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        fontnames_list = [fontnames] * ncol</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">isinstance</span>(fontsizes, <span class="built_in">list</span>) <span class="keyword">or</span> <span class="built_in">isinstance</span>(fontsizes, <span class="built_in">tuple</span>):</span><br><span class="line">        fontsizes_list = fontsizes</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        fontsizes_list = [fontsizes] * ncol</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> col, bgcolor, fontname, fontsize, fontcolor <span class="keyword">in</span> <span class="built_in">zip</span>(<span class="built_in">range</span>(ncol), bgcolors_list, fontnames_list, fontsizes_list, fontcolors_list):</span><br><span class="line">        <span class="keyword">for</span> row <span class="keyword">in</span> <span class="built_in">range</span>(nrow):</span><br><span class="line">            table.table.cell(row, col).fill.solid()</span><br><span class="line">            table.table.cell(row, col).fill.fore_color.rgb = RGBColor(*bgcolor)</span><br><span class="line">            table.table.cell(row, col).text = <span class="built_in">str</span>(texts[row, col])</span><br><span class="line">            table.table.cell(row, col).text_frame.paragraphs[<span class="number">0</span>].font.name = fontname</span><br><span class="line">            table.table.cell(row, col).text_frame.paragraphs[<span class="number">0</span>].font.size = Pt(fontsize)</span><br><span class="line">            table.table.cell(row, col).text_frame.paragraphs[<span class="number">0</span>].font.color.rgb = RGBColor(*fontcolor)</span><br><span class="line">            table.table.cell(row, col).text_frame.paragraphs[<span class="number">0</span>].font.bold = <span class="literal">False</span> </span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> table</span><br></pre></td></tr></table></figure></li><li><p>앞에서 만든 슬라이드에 표를 삽입합니다.</p></li><li><p>표에 들어갈 내용은 앞에서 정리한 데이터프레임에서 가져옵니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Table: styles and revised prompts</span></span><br><span class="line">texts = df_dalle3.loc[df_dalle3[<span class="string">&#x27;style&#x27;</span>] == style, [<span class="string">&quot;object&quot;</span>, <span class="string">&quot;REVISED PROMPT&quot;</span>]].values</span><br><span class="line"></span><br><span class="line">table_reprompts = add_table(slide, <span class="number">0.6</span>, <span class="number">9.7</span>, <span class="number">32.6</span>, <span class="number">9.1</span>, nrow=<span class="number">7</span>, ncol=<span class="number">2</span>, row_heights=<span class="number">1.3</span>, col_widths=[<span class="number">5.6</span>, <span class="number">27</span>], bgcolors=<span class="string">&quot;#FFFFFF&quot;</span>,</span><br><span class="line">                            texts=texts, fontnames=[<span class="string">&quot;나눔고딕 ExtraBold&quot;</span>, <span class="string">&quot;나눔고딕 Light&quot;</span>], fontsizes=[<span class="number">10</span>, <span class="number">7</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 파일 저장</span></span><br><span class="line">presentation.save(<span class="string">f&quot;./doc/example.pptx&quot;</span>)</span><br></pre></td></tr></table></figure></li></ul><p><img src="46_dalle3style3_11.png"><br></p><p><h3 id="5-4-4-선-그리기"><a href="#5-4-4-선-그리기" class="headerlink" title="5.4.4. 선 그리기"></a>5.4.4. 선 그리기</h3><ul><li><p>python-pptx에 큰 단점이 있습니다.</p></li><li><p>표 경계선(border) 속성 제어가 안된다는 점입니다.</p></li><li><p>번거롭지만 추가로 <b>선을 그려서 object별 revised prompt를 구분</b>합니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Line 삽입 함수</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add_line</span>(<span class="params">slide, left, top, width, height, linewidth=<span class="number">1</span>, linecolor=<span class="string">&quot;#000000&quot;</span></span>):</span></span><br><span class="line">    <span class="comment"># line color 변환</span></span><br><span class="line">    R, G, B = get_color(linecolor)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># line position and size</span></span><br><span class="line">    line = slide.shapes.add_shape(MSO_SHAPE.LINE_INVERSE, Cm(left), Cm(top), Cm(width), Cm(height))</span><br><span class="line">    line.line.width = Pt(linewidth)</span><br><span class="line">    line.line.color.rgb = RGBColor(R, G, B)</span><br><span class="line">    line.line.fill.solid()</span><br><span class="line">    line.shadow.inherit = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> line</span><br></pre></td></tr></table></figure></li><li><p>row 수보다 하나 더 많은 선을 추가합니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Line: horizontal lines between rows</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">8</span>):</span><br><span class="line">    add_line(slide, <span class="number">0.6</span>, <span class="number">9.7</span> + <span class="number">1.3</span> * i, <span class="number">32.6</span>, <span class="number">0</span>, linewidth=<span class="number">1</span>, linecolor=<span class="string">&quot;#000000&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 파일 저장</span></span><br><span class="line">presentation.save(<span class="string">f&quot;./doc/example.pptx&quot;</span>)</span><br></pre></td></tr></table></figure></li></ul><p><img src="46_dalle3style3_12.png"><br></p><p><h3 id="5-4-5-이미지-삽입"><a href="#5-4-5-이미지-삽입" class="headerlink" title="5.4.5. 이미지 삽입"></a>5.4.5. 이미지 삽입</h3><ul><li><p>마지막으로 <b>이미지를 삽입합니다.</b></p></li><li><p>DALL.E에서 만든 이미지들을 각각의 폴더에 모아두었기에 폴더와 파일명을 정확히 지정해서 불러옵니다.</p></li><li><p>이미지 삽입 명령은 다른 것보다 단순합니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Image 삽입 함수</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add_image</span>(<span class="params">slide, left, top, width, height, img_path</span>):</span></span><br><span class="line">    slide.shapes.add_picture(img_path, Cm(left), Cm(top), Cm(width), Cm(height))</span><br></pre></td></tr></table></figure></li><li><p>같은 방식으로, 이어서 슬라이드에 그림을 붙입니다.</p></li><li><p><code>object_us</code>는 object별로 폴더 이름과 파일명 시작을 정해둔 규칙입니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Image: DALL.E3 generated image</span></span><br><span class="line"><span class="keyword">for</span> i, <span class="built_in">object</span> <span class="keyword">in</span> <span class="built_in">enumerate</span>(objects_us):</span><br><span class="line">    img_path = <span class="string">f&quot;./<span class="subst">&#123;<span class="built_in">object</span>&#125;</span>/<span class="subst">&#123;<span class="built_in">object</span>&#125;</span>_<span class="subst">&#123;style.replace(<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;_&#x27;</span>)&#125;</span>.png&quot;</span></span><br><span class="line">    add_image(slide, <span class="number">0.6</span>+<span class="number">4.69</span>*i, <span class="number">4.5</span>, <span class="number">4.42</span>, <span class="number">4.42</span>, img_path)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 파일 저장</span></span><br><span class="line">presentation.save(<span class="string">f&quot;./doc/example.pptx&quot;</span>)</span><br></pre></td></tr></table></figure></li><li><p>약 3초의 시간이 지나고 동작이 완료됩니다.</p></li><li><p>파일을 열어 보면 손으로 한 땀 한 땀 만들었던 슬라이드와 구성이 동일합니다.</p></li><li><p>손으로 만든 슬라이드에서 구성 요소들의 위치와 크기를 충실히 반영한 덕분입니다.</p></li></ul><p><img src="46_dalle3style3_13.png"><br></p><p><h3 id="5-4-5-자동화"><a href="#5-4-5-자동화" class="headerlink" title="5.4.5. 자동화"></a>5.4.5. 자동화</h3><ul><li>위 함수들을 사용해 파워포인트 슬라이드 위에 도안대로 객체들을 늘어놓습니다. </li><li>슬라이드 한 장에 그림이 7장씩 들어가다 보니, 20장만 그려도 용량이 200메가가 넘습니다.</li><li>우선 개별 파일로 저장하여 PDF 변환 후 합치는 전략을 선택합니다.<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 20개씩 슬라이드 생성</span></span><br><span class="line">start, end = <span class="number">0</span>, <span class="number">384</span></span><br><span class="line"><span class="keyword">for</span> start <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">384</span>, <span class="number">20</span>):</span><br><span class="line">    end = <span class="built_in">min</span>(start + <span class="number">20</span>, <span class="number">384</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Create a new PowerPoint presentation (powerpoint default 16:9 design)</span></span><br><span class="line">    presentation = Presentation()</span><br><span class="line">    presentation.slide_width = Cm(<span class="number">33.867</span>)</span><br><span class="line">    presentation.slide_height = Cm(<span class="number">19.05</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># slide layout</span></span><br><span class="line">    slide_layout = presentation.slide_layouts[<span class="number">6</span>]</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> i, style <span class="keyword">in</span> <span class="built_in">enumerate</span>(styles_u[start:end]):</span><br><span class="line">        <span class="built_in">print</span>(style)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="comment"># Add an empty slide</span></span><br><span class="line">            slide = presentation.slides.add_slide(slide_layout)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># Textbox: Author name</span></span><br><span class="line">            text_stylename = add_textbox(slide, <span class="number">18.87</span>, <span class="number">0</span>, <span class="number">15</span>, <span class="number">0.77</span>, <span class="string">&quot;2024.03.19. Made by Jehyun LEE: Jehyun.lee@gmail.com&quot;</span>, ha=<span class="string">&quot;right&quot;</span>, </span><br><span class="line">                                        fontname=<span class="string">&quot;나눔고딕 ExtraBold&quot;</span>, fontsize=<span class="number">12</span>, fontcolor=<span class="string">&quot;#B4C7E7&quot;</span>)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># Textbox: Style name</span></span><br><span class="line">            text_stylename = add_textbox(slide, <span class="number">0.6</span>, <span class="number">0.62</span>, <span class="number">33</span>, <span class="number">1.28</span>, style, fontname=<span class="string">&quot;나눔고딕 ExtraBold&quot;</span>, fontsize=<span class="number">24</span>, fontcolor=(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line"></span><br><span class="line">            <span class="comment"># Textbox: Style description (en/ko)</span></span><br><span class="line">            description = df_styles_merged.loc[df_styles_merged[<span class="string">&quot;style&quot;</span>] == style, <span class="string">&quot;description&quot;</span>].values[<span class="number">0</span>]</span><br><span class="line">            description_ko = df_styles_merged.loc[df_styles_merged[<span class="string">&quot;style&quot;</span>] == style, <span class="string">&quot;description_ko&quot;</span>].values[<span class="number">0</span>]</span><br><span class="line">            text_desc_en = add_textbox(slide, <span class="number">0.6</span>, <span class="number">2.2</span>, <span class="number">33</span>, <span class="number">0.77</span>, description, fontname=<span class="string">&quot;나눔고딕 ExtraBold&quot;</span>, fontsize=<span class="number">12</span>, fontcolor=(<span class="number">127</span>, <span class="number">127</span>, <span class="number">127</span>))</span><br><span class="line">            text_desc_ko = add_textbox(slide, <span class="number">0.6</span>, <span class="number">2.96</span>, <span class="number">33</span>, <span class="number">0.77</span>, description_ko, fontname=<span class="string">&quot;나눔고딕 ExtraBold&quot;</span>, fontsize=<span class="number">12</span>, fontcolor=(<span class="number">127</span>, <span class="number">127</span>, <span class="number">127</span>))</span><br><span class="line"></span><br><span class="line">            <span class="comment"># Table: styles and revised prompts</span></span><br><span class="line">            texts = df_dalle3.loc[df_dalle3[<span class="string">&#x27;style&#x27;</span>] == style, [<span class="string">&quot;object&quot;</span>, <span class="string">&quot;REVISED PROMPT&quot;</span>]].values</span><br><span class="line"></span><br><span class="line">            table_reprompts = add_table(slide, <span class="number">0.6</span>, <span class="number">9.7</span>, <span class="number">32.6</span>, <span class="number">9.1</span>, nrow=<span class="number">7</span>, ncol=<span class="number">2</span>, row_heights=<span class="number">1.3</span>, col_widths=[<span class="number">5.6</span>, <span class="number">27</span>], bgcolors=<span class="string">&quot;#FFFFFF&quot;</span>,</span><br><span class="line">                                        texts=texts, fontnames=[<span class="string">&quot;나눔고딕 ExtraBold&quot;</span>, <span class="string">&quot;나눔고딕 Light&quot;</span>], fontsizes=[<span class="number">10</span>, <span class="number">7</span>])</span><br><span class="line"></span><br><span class="line">            <span class="comment"># Line: horizontal lines between rows</span></span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">8</span>):</span><br><span class="line">                add_line(slide, <span class="number">0.6</span>, <span class="number">9.7</span> + <span class="number">1.3</span> * i, <span class="number">32.6</span>, <span class="number">0</span>, linewidth=<span class="number">1</span>, linecolor=<span class="string">&quot;#000000&quot;</span>)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># Image: DALL.E3 generated image</span></span><br><span class="line">            <span class="keyword">for</span> i, <span class="built_in">object</span> <span class="keyword">in</span> <span class="built_in">enumerate</span>(objects_us):</span><br><span class="line">                img_path = <span class="string">f&quot;./<span class="subst">&#123;<span class="built_in">object</span>&#125;</span>/<span class="subst">&#123;<span class="built_in">object</span>&#125;</span>_<span class="subst">&#123;style.replace(<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;_&#x27;</span>)&#125;</span>.png&quot;</span></span><br><span class="line">                add_image(slide, <span class="number">0.6</span>+<span class="number">4.69</span>*i, <span class="number">4.5</span>, <span class="number">4.42</span>, <span class="number">4.42</span>, img_path)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># Export</span></span><br><span class="line">        presentation.save(<span class="string">f&quot;./document/dalle3_382styles_<span class="subst">&#123;start&#125;</span>.pptx&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h2 id="6-마무리"><a href="#6-마무리" class="headerlink" title="6. 마무리"></a>6. 마무리</h2><ul><li>마지막으로, 워터마크를 박아넣고 PDF로 변환한 뒤 취합하면 다음과 같은 자료가 됩니다.</li><li>처음 구상보다 스케일이 많이 커졌습니다.</li><li>본의 아니게 2700장이 넘는 데이터를 생성한 셈이 되었는데, 이 것으로 무엇을 할지 고민을 해봐야겠습니다. :)</li><li>다채로운 상상력을 발휘하시는 데 도움이 되기를 바랍니다.</li></ul><p><img src="46_dalle3style3_07.png"></p><blockquote><p><a href="https://bit.ly/dalle382styles"><b>DALL.E3 스타일 가이드북 통판 다운로드</b></a>  </p></blockquote><blockquote><p><a href="240320_%EC%9D%B4%EC%A0%9C%ED%98%84_DALLE3_styles_Part1_watermark.pdf"><b>DALL.E3 스타일 가이드북 part I 다운로드</b></a><br><a href="240320_%EC%9D%B4%EC%A0%9C%ED%98%84_DALLE3_styles_Part2_watermark.pdf"><b>DALL.E3 스타일 가이드북 part II 다운로드</b></a><br><a href="240320_%EC%9D%B4%EC%A0%9C%ED%98%84_DALLE3_styles_Part3_watermark.pdf"><b>DALL.E3 스타일 가이드북 part III 다운로드</b></a><br><a href="240320_%EC%9D%B4%EC%A0%9C%ED%98%84_DALLE3_styles_Part4_watermark.pdf"><b>DALL.E3 스타일 가이드북 part IV 다운로드</b></a></p></blockquote>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/General/">General</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/openai/">openai</category>
      
      <category domain="https://jehyunlee.github.io/tags/chatgpt/">chatgpt</category>
      
      <category domain="https://jehyunlee.github.io/tags/dalle/">dalle</category>
      
      <category domain="https://jehyunlee.github.io/tags/deepl/">deepl</category>
      
      
    </item>
    
    <item>
      <title>DALL.E style (2) API 사용 달리공장</title>
      <link>https://jehyunlee.github.io/2024/03/17/General-45-dalle3styles2/</link>
      <guid>https://jehyunlee.github.io/2024/03/17/General-45-dalle3styles2/</guid>
      <pubDate>Sat, 16 Mar 2024 17:54:00 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;contributor: 조남경님&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;지난 글에서 360개의 스타일을 확인했습니다.&lt;/li&gt;
&lt;li&gt;분명히 빠진 것들이 있는 것으로 보아 실제로는 더 있을 수도 있고,&lt;/li&gt;
&lt;</description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p>contributor: 조남경님</p></blockquote><ul><li>지난 글에서 360개의 스타일을 확인했습니다.</li><li>분명히 빠진 것들이 있는 것으로 보아 실제로는 더 있을 수도 있고,</li><li>여기 있는 스타일들이 DALL.E에서 충실히 구현된다는 보장이 없어 더 적을 수도 있습니다.</li><li>알아볼 수 있는 유일한 방법은 그림을 그려보는 것입니다.</li></ul><h1 id="3-OpenAI-API-Image-Generation"><a href="#3-OpenAI-API-Image-Generation" class="headerlink" title="3. OpenAI API: Image Generation"></a>3. OpenAI API: Image Generation</h1><h2 id="3-1-기본-코드-작성"><a href="#3-1-기본-코드-작성" class="headerlink" title="3.1. 기본 코드 작성"></a>3.1. 기본 코드 작성</h2><blockquote><p><a href="https://platform.openai.com/docs/guides/images/image-generation">OpenAI API: Image Generation</a><br><a href="https://openai.com/pricing">OpenAI API Pricing</a><br><a href="https://product.kyobobook.co.kr/detail/S000211780653">조남경, &lt;미드저니 프롬프트 마스터 가이드&gt;</a></p></blockquote><ul><li>ChatGPT에 접속해 프롬프트를 일일이 입력하여 이미지를 생성하고 다운받을 수 있습니다.</li><li>문제는 Plus Subscription은 3시간에 40개, Team 요금제도 3시간에 100개가 한도라는 것입니다.</li><li>그림 한 장은 20초면 그려지지만 이 이유로 360개의 그림을 그릴 때 12시간 가까이 필요합니다.</li><li>알 수 없는 이유로 그림을 거부하기라도 하거나 Network Error가 나면 그만큼 시간 손실은 커질 수 있습니다.</li></ul><ul><li>게다가 우리 목적은 스타일 비교입니다. 스타일을 제외한 나머지 프롬프트는 모두 동일해야 합니다. </li><li><b>귀찮은 일을 자동화할 때는 API가 가장 좋습니다.</b></li><li>그러나 API는 <b>쓰는 만큼 지불하는 종량제입니다.</b></li></ul><p><img src="45_dalle3style2_01.png"></p><ul><li>OpenAI API Key를 <code>OPENAI_API_KEY</code>라는 이름으로 미리 받아놓았습니다.</li><li>다음과 같은 코드를 입력하면, <code>Self-Destructive</code> 스타일로 <code>a cup of coffee</code>를 1024 x 1024로 얻을 수 있습니다.</li><li>기본 프롬프트를 <code>a cup of coffee</code>로 정한 것은 <b>조남경님의 저서 &lt;미드저니 프롬프트 마스터 가이드&gt;</b> 결과와 비교하기 좋게 하기 위함입니다.</li><li>스타일 이름만 덜렁 입력해도 되지만 더 스타일 이름이 엉뚱하게 동작하지 않도록 <b>in style of</b> 를 붙였습니다. </li></ul><ul><li><p>이미지 생성 코드입니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> openai <span class="keyword">import</span> OpenAI</span><br><span class="line"></span><br><span class="line"><span class="comment"># OpenAI API 사용 설정</span></span><br><span class="line">client = OpenAI(api_key=OPENAI_API_KEY)</span><br><span class="line"></span><br><span class="line"><span class="comment"># style, 기본 prompt 지정</span></span><br><span class="line">style = <span class="string">&quot;Self-Destructive&quot;</span></span><br><span class="line">prompt = <span class="string">f&quot;a cup of coffee, in style of <span class="subst">&#123;style&#125;</span>, square aspect ratio&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DALL.E3 이미지 생성</span></span><br><span class="line">response = client.images.generate(</span><br><span class="line">        model=<span class="string">&quot;dall-e-3&quot;</span>,</span><br><span class="line">        prompt=prompt,</span><br><span class="line">        size=<span class="string">&quot;1024x1024&quot;</span>,</span><br><span class="line">        quality=<span class="string">&quot;hd&quot;</span>,  </span><br><span class="line">        n=<span class="number">1</span>,</span><br><span class="line">        )</span><br></pre></td></tr></table></figure><ul><li>실행 결과<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">&#x27;created&#x27;</span>: 1710607774,</span><br><span class="line"> <span class="string">&#x27;data&#x27;</span>: [&#123;<span class="string">&#x27;b64_json&#x27;</span>: None,</span><br><span class="line">           <span class="string">&#x27;revised_prompt&#x27;</span>: <span class="string">&#x27;Depict an artistic representation of a cup of coffee in a self-destructive style with a square aspect ratio emphasizing on disarray, chaotic and fragmented imagery. The medium should appear to be oil on canvas to mimic the intensity of traditional artworks.&#x27;</span>,</span><br><span class="line">           <span class="string">&#x27;url&#x27;</span>: <span class="string">&#x27;https://oaidalleapiprodscus.blob.core.windows.net/private/org-AhUkzJK2WZGMFoMyGMghYXRV/user-GJilwEnUIKmd9QOgEkYhUF46/img-nQiJ8EslTUU9RSU7T1rBlqGW.png?st=2024-03-16T15%3A49%3A34Z&amp;se=2024-03-16T17%3A49%3A34Z&amp;sp=r&amp;sv=2021-08-06&amp;sr=b&amp;rscd=inline&amp;rsct=image/png&amp;skoid=6aaadede-4fb3-4698-a8f6-684d7786b067&amp;sktid=a48cca56-e6da-484e-a814-9c849652bcb3&amp;skt=2024-03-16T06%3A36%3A49Z&amp;ske=2024-03-17T06%3A36%3A49Z&amp;sks=b&amp;skv=2021-08-06&amp;sig=dGC3n2kgSSyFzEIgOEpcRVZktmDZJErQ/iNHyQDSoP0%3D&#x27;</span>&#125;]&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>실행 결과 중 <code>created</code>는 무엇인지 알 수 없습니다. <code>seed number</code>라 추측되지만 확신이 없습니다.</p></li><li><p><code>data</code>의 <code>revised prompt</code>는 실제 이미지를 생성시킨 프롬프트입니다.</p></li><li><p>제가 입력한 프롬프트보다 훨씬 깁니다. </p></li><li><p><b>DALL.E는 입력이 너무 짧으면 스스로의 상상력을 보태 이미지를 구체화하는 프롬프트를 작성합니다.</b></p></li><li><p>DALL.E의 창의력이 발현된다고 볼 수 있는 대목입니다.</p></li><li><p>이렇게 생성된 이미지는 <code>url</code>에 담겨 있으며, 클릭하면 아래와 같이 표현됩니다.</p></li></ul><p><img src="45_dalle3style2_02.png"></p><ul><li><p>DALL.E가 알려준 <b>Self-Destructive</b>의 의미는 <b>An art movement where the creation is designed to decay, degrade, or destroy itself after a certain period.</b>라고 되어 있습니다.</p></li><li><p>전반적으로 설명이 잘 반영된 것으로 보입니다.</p></li><li><p><b>그러나 일일이 다운받으려고 시작한 일이 아닙니다.</b></p></li><li><p>다음과 같이 다운로드 코드를 작성합니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> matplotlib.image <span class="keyword">as</span> mpimg</span><br><span class="line"></span><br><span class="line"><span class="comment"># 생성 이미지와 수정 프롬프트, seed number 가져오기</span></span><br><span class="line">image_url = response.data[<span class="number">0</span>].url</span><br><span class="line">revised_prompt = response.data[<span class="number">0</span>].revised_prompt</span><br><span class="line">created = response.created   <span class="comment"># seed number?</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 이미지 다운로드</span></span><br><span class="line">response = requests.get(image_url)</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">    file.write(response.content)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Revised prompt</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;# revised prompt: <span class="subst">&#123;revised_prompt&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># created</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;# created: <span class="subst">&#123;created&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Load the image</span></span><br><span class="line">img = mpimg.imread(filename)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Display the image</span></span><br><span class="line">plt.imshow(img)</span><br><span class="line">plt.axis(<span class="string">&#x27;off&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure></li><li><p>이미지 다운로드와 더불어 <code>revised prompt</code>와 <code>created</code>를 함께 출력시켰습니다.</p></li><li><p>뭔가 이상한 점이 있다면 <code>revised prompt</code>에서 들어갔을 것이고,</p></li><li><p><code>created</code>는 혹시 모르니까요.</p></li></ul><h2 id="3-2-함수-작성"><a href="#3-2-함수-작성" class="headerlink" title="3.2. 함수 작성"></a>3.2. 함수 작성</h2><ul><li><p>반복 작업은 함수로 만들면 편리합니다.</p></li><li><p>위 코드를 모아서 함수로 만듭니다.</p></li><li><p>이미지를 생성하는 함수는 <code>get_image()</code>, 생성된 이미지를 내려받는 함수는 <code>get_image()</code>라는 이름으로 만듭니다.</p></li><li><p>그리고 이 둘을 엮는 <code>run_dalle()</code>함수를 만듭니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># DALL.E3 이미지 생성 &amp; 다운로드 함수</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> matplotlib.image <span class="keyword">as</span> mpimg</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gen_image</span>(<span class="params">prompt, aspect=<span class="number">1</span>, retry=<span class="number">10</span></span>):</span></span><br><span class="line">    <span class="keyword">if</span> aspect == <span class="number">1</span>:</span><br><span class="line">        size = <span class="string">&quot;1024x1024&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> aspect.lower() <span class="keyword">in</span> [<span class="string">&quot;landscape&quot;</span>, <span class="string">&quot;horizontal&quot;</span>, <span class="string">&quot;16:9&quot;</span>]:</span><br><span class="line">        size = <span class="string">&quot;1792x1024&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> aspect.lower() <span class="keyword">in</span> [<span class="string">&quot;portrait&quot;</span>, <span class="string">&quot;vertical&quot;</span>, <span class="string">&quot;9:16&quot;</span>]:</span><br><span class="line">        size = <span class="string">&quot;1024x1792&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;inapproprate aspect ratio: should be &#x27;longitudinal|horizontal|16:9&#x27; or &#x27;portrait|vertical|9:16&#x27;&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(retry):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            response = client.images.generate(</span><br><span class="line">            model=<span class="string">&quot;dall-e-3&quot;</span>,</span><br><span class="line">            prompt=prompt,</span><br><span class="line">            size=size,</span><br><span class="line">            quality=<span class="string">&quot;hd&quot;</span>,</span><br><span class="line">            n=<span class="number">1</span>,</span><br><span class="line">            )</span><br><span class="line">            <span class="keyword">if</span> response.data[<span class="number">0</span>].url:</span><br><span class="line">                image_url = response.data[<span class="number">0</span>].url</span><br><span class="line">                revised_prompt = response.data[<span class="number">0</span>].revised_prompt</span><br><span class="line">                created = response.created</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            image_url = <span class="string">&quot;&quot;</span></span><br><span class="line">            revised_prompt = <span class="string">&quot;&quot;</span></span><br><span class="line">            created = <span class="string">&quot;&quot;</span></span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        </span><br><span class="line">    <span class="keyword">return</span> image_url, revised_prompt, created</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_image</span>(<span class="params">image_url, filename=<span class="string">&quot;image.png&quot;</span></span>):</span></span><br><span class="line">    response = requests.get(image_url)</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">        file.write(response.content)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Load the image</span></span><br><span class="line">    img = mpimg.imread(filename)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Display the image</span></span><br><span class="line">    plt.imshow(img)</span><br><span class="line">    plt.axis(<span class="string">&#x27;off&#x27;</span>)</span><br><span class="line">    plt.show()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run_dalle</span>(<span class="params">prompt, filename, aspect=<span class="number">1</span></span>):</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;dalle3.log&quot;</span>, <span class="string">&#x27;a&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">        image_url, revised_prompt, created = gen_image(prompt, aspect=aspect)</span><br><span class="line">        <span class="keyword">if</span> image_url:</span><br><span class="line">            <span class="comment"># Revised prompt</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;# revised prompt: <span class="subst">&#123;revised_prompt&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="comment"># created</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;# created: <span class="subst">&#123;created&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="comment"># get image</span></span><br><span class="line">            get_image(image_url, filename)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;Image generation failed.&quot;</span>)</span><br><span class="line"></span><br><span class="line">        file.write(<span class="string">f&quot;<span class="subst">&#123;prompt&#125;</span>, <span class="subst">&#123;revised_prompt&#125;</span>, <span class="subst">&#123;created&#125;</span>, <span class="subst">&#123;image_url&#125;</span>\n&quot;</span>)</span><br></pre></td></tr></table></figure></li><li><p>앞서 만든 코드보다 조금 복잡해졌습니다.</p></li><li><p><code>gen_image()</code>에는 aspect ratio(종횡비)를 설정하는 매개변수 <code>aspect</code>가 붙었고, </p></li><li><p>여기에 재시도 횟수를 결정하는 매개변수 <code>retry</code>가 붙었습니다.</p></li><li><p>의도하지 않은 이미지 생성 정책 위반에 걸리더라도 다시 시도하는 루틴입니다. </p></li></ul><ul><li><code>run_dalle()</code>에는 로그 파일 작성 루틴이 붙었습니다.</li><li>이미지 생성과 관련된 모든 정보를 모으기 위해서입니다.</li></ul><ul><li><p>코드가 잘 도는지 확인합니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">style = <span class="string">&quot;American Gothic&quot;</span></span><br><span class="line">prompt = <span class="string">f&quot;a cup of coffee, in style of <span class="subst">&#123;style&#125;</span>, square aspect ratio&quot;</span></span><br><span class="line">filename = <span class="string">f&quot;./coffee/coffee_<span class="subst">&#123;style.replace(<span class="string">&quot; &quot;</span>, <span class="string">&quot;_&quot;</span>)&#125;</span>.png&quot;</span></span><br><span class="line"></span><br><span class="line">run_dalle(prompt, filename)</span><br></pre></td></tr></table></figure><ul><li>실행 결과<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># revised prompt: Create a square aspect ratio image of a cup of coffee, interpreted with the key aspects of American Gothic - restrained, detailed, and simple. Utilize the composition and themes common in 20th-century rural American art. The predominant medium should be oil on beaverboard.</span></span><br><span class="line"><span class="comment"># created: 1710609757</span></span><br></pre></td></tr></table></figure><img src="45_dalle3style2_03.png"></li></ul></li><li><p>잘 됩니다.</p></li><li><p>이제 남은 것은 공장을 돌리는 것 뿐입니다.</p></li><li><p>어제 만든 목록을 입력받아 스타일대로 출력하게 합니다.</p></li></ul><p><img src="45_dalle3style2_04.png"></p><ul><li>공장이 잘 돌아갑니다.</li><li>360개 DALL.E3 HD 이미지를 만드는 데 필요한 비용을 계산하면, 0.08 USD/EA x 360 = 28.8 USD 입니다.</li><li>1 USD ~ 1330 KRW 적용시 <b>3만9천원</b> 정도 됩니다.</li><li>개인, 특히 학생에게는 부담이 될 수 있는 금액이지만 이미지 하나에 100원 가량입니다.</li></ul><h1 id="다음-글-예고"><a href="#다음-글-예고" class="headerlink" title="다음 글 예고"></a>다음 글 예고</h1><ul><li>공장의 최대 장점은 마구 찍어낼 수 있다는 점이지만,</li><li>역설적으로 마구 찍어내기만 하는 공장은 무의미합니다.</li><li>나름의 의미를 찾아보려 합니다.</li></ul>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/General/">General</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/openai/">openai</category>
      
      <category domain="https://jehyunlee.github.io/tags/chatgpt/">chatgpt</category>
      
      <category domain="https://jehyunlee.github.io/tags/dalle/">dalle</category>
      
      
    </item>
    
    <item>
      <title>DALL.E style (1) GPT로 스타일 리스팅</title>
      <link>https://jehyunlee.github.io/2024/03/15/General-44-dalle3styles/</link>
      <guid>https://jehyunlee.github.io/2024/03/15/General-44-dalle3styles/</guid>
      <pubDate>Fri, 15 Mar 2024 08:00:00 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;contributor: 조남경님&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;그림을 그리는 AI, DALL.E는 다양한 스타일을 학습했습니다.&lt;/li&gt;
&lt;li&gt;프롬프트에 “watercolor” 또는 “수채화”를 입력하는</description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p>contributor: 조남경님</p></blockquote><ul><li>그림을 그리는 AI, DALL.E는 다양한 스타일을 학습했습니다.</li><li>프롬프트에 “watercolor” 또는 “수채화”를 입력하는 것 만으로 수채화 형식의 그림 생성을 명령할 수 있습니다.</li><li>DALL.E는 스타일을 얼마나 많이 알고 있을까요? 궁금해서 테스트해봤습니다.</li></ul><h1 id="1-DALL-E-프롬프팅"><a href="#1-DALL-E-프롬프팅" class="headerlink" title="1. DALL.E 프롬프팅"></a>1. DALL.E 프롬프팅</h1><ul><li><p>현재 DALL.E는 네 곳에서 사용할 수 있습니다.<br><b>1. <a href="https://www.bing.com/images/create">Copilot Designer (舊 Bing Image Creator)</a> :</b> 무료입니다. 기본적으로 하루 15개의 부스트가 제공됩니다.<br><b>2. <a href="https://designer.microsoft.com/">Microsoft Designer</a> :</b> 무료입니다. preview라 수시로 개편중이며 제한이 없습니다.<br><b>3. <a href="https://copilot.microsoft.com/">Microsoft Copilot (舊 Bing Chat)</a> :</b> 무료입니다. 내부적으로 2. Copilot Designer의 부스트를 차감하여 사용합니다.<br><b>4. <a href="https://chat.openai.com/">ChatGPT</a> :</b> 유료사용자에 한해 사용 가능합니다.</p></li><li><p>이 외 <b>Edge Browser의 sidebar</b>에서도 사용할 수 있지만 본질적으로 3. Microsoft Copilot과 동일합니다.</p></li></ul><ul><li>많은 자료와 책, 동영상, 강의에서 이미지 생성 프롬프팅을 논합니다.</li><li>저는 <a href="https://jehyunlee.github.io/2024/02/22/General-43_kierchatgpt/"><b>규칙에 얽매이지 말고 눈 앞에 보이는 것을 글로 표현하자</b></a>는 입장입니다만,</li><li>이를 어려워하시는 분들도 있어 프롬프팅 방식을 <b>공식</b>처럼 제안해주시는 분들도 있으십니다.</li></ul><ul><li>DALL.E를 사용할 수 있는 곳들에서도 <b>프롬프트 예시</b>를 제공합니다.</li></ul><h2 id="1-1-Copilot-Designer"><a href="#1-1-Copilot-Designer" class="headerlink" title="1.1. Copilot Designer"></a>1.1. Copilot Designer</h2><ul><li>프롬프트 입력창 아래 간단한 예시가 나옵니다. </li><li>몇 개의 스타일 이름을 알려주며 대상이나 톤 등 <b>다른 프롬프트와 결합해 사용하는 법</b>을 알려줍니다.</li><li>아래 이미지 위에 마우스를 올리면 <b>이미지를 만든 프롬프트</b>를 볼 수 있습니다. </li></ul><p><img src="44_dalle3styles_17.png" alt="Copilot Designer: https://www.bing.com/images/create"></p><h2 id="1-2-Microsoft-Designer"><a href="#1-2-Microsoft-Designer" class="headerlink" title="1.2. Microsoft Designer"></a>1.2. Microsoft Designer</h2><ul><li>가장 적극적인 방식으로 알려줍니다.</li><li>그림을 클릭하면 <b>해당 이미지를 만든 프롬프트가 보일 뿐 아니라 빈칸채우기로 수정할 수 있습니다.</b></li></ul><p><img src="44_dalle3styles_18.png" alt="Microsoft Designer: https://designer.microsoft.com/"></p><h2 id="1-3-Microsoft-Copilot"><a href="#1-3-Microsoft-Copilot" class="headerlink" title="1.3. Microsoft Copilot"></a>1.3. Microsoft Copilot</h2><ul><li>본래 검색엔진 Bing에 ChatGPT와 같은 범용 거대언어모델이 결합한 형태로, 아무런 대화를 할 수 있습니다.</li><li>여기서 “그려줘” 또는 “create” 로 시작하는 프롬프트를 입력해 그림을 그릴 수도 있지만,</li><li>최근 <b>Copilot 오른쪽 GPTs</b>로 분류된 곳에 <b>Designer</b>가 따로 마련되었습니다.</li><li>여기를 가면 몇 가지 예시와 함께 여기에 마우스를 올리면 이 그림을 그린 프롬프트를 볼 수 있습니다.</li></ul><p><img src="44_dalle3styles_19.png" alt="Microsoft Copilot: https://copilot.microsoft.com/"></p><h2 id="1-4-ChatGPT"><a href="#1-4-ChatGPT" class="headerlink" title="1.4. ChatGPT"></a>1.4. ChatGPT</h2><ul><li>왼쪽 사이드바 GPTs에서 DALL.E를 선택하면 프롬프트 입력창 위에 <b>스타일 선택 버튼</b>이 생깁니다.</li><li>프롬프트를 입력하며 프롬프트 위에 마우스를 가져가면 <b>귀여운 고양이 그림에 스타일이 적용된 결과</b>가 보입니다.</li><li>선택하면 프롬프트에 해당 효과를 추가할 수 있고, 맘에 들지 않으면 <b>섞기 버튼</b>을 클릭하면 새로운 스타일이 보입니다.</li><li>오른쪽에 있는 <b>Aspect Ratio</b>를 클릭하면 그림의 종횡비를 바꾸는 프롬프트가 추가됩니다.</li></ul><p><img src="44_dalle3styles_20.png" alt="ChatGPT: https://chat.openai.com/"></p><p><video src="chatgptdalle3-styles.mp4" width="998" height="356" controls preload></video></p><h1 id="2-ChatGPT에서-DALL-E-스타일-목록-추출"><a href="#2-ChatGPT에서-DALL-E-스타일-목록-추출" class="headerlink" title="2. ChatGPT에서 DALL.E 스타일 목록 추출"></a>2. ChatGPT에서 DALL.E 스타일 목록 추출</h1><h2 id="2-1-스타일-목록-추출-방법-확립"><a href="#2-1-스타일-목록-추출-방법-확립" class="headerlink" title="2.1. 스타일 목록 추출 방법 확립"></a>2.1. 스타일 목록 추출 방법 확립</h2><ul><li>낯선 이름도 보이는 것을 보니 적지 않은 스타일이 담겨있는 것이 분명합니다.</li><li><b>스타일 목록을 찾아봤으나 없네요.</b></li><li>일일이 클릭하며 테스트해볼 수 있지만, 전체적으로 어떤 것이 있으며 특징은 어떠한지 알고 싶습니다.</li><li><b>ChatGPT에게 목록을 알려달라고 요청합니다.</b></li></ul><p><img src="44_dalle3styles_1.png"></p><ul><li><b>리스트를 달라고 했는데 사용법을 알려줍니다.</b></li><li>impressionism, surrealism, pixel art 같은 스타일 이름을 입력하면 된다네요. </li><li>Van Gogh, Leonardo da Vinci, Rembrandt 같은 화가 이름도 된다지만 스타일에 집중합니다.</li><li><b>예제를 들면서 리스트로 줄 수 있는지를 요청합니다.</b></li></ul><p><img src="44_dalle3styles_2.png"></p><ul><li>성공입니다. 기법 이름과 함께 간단한 설명을 줍니다.</li><li>그런데 목록이 짧습니다. 20개 밖에 안 주네요. 그럴 리가 없는데요.</li><li>일단 <b>추출 기법을 확립하고 반복을 시킵시다. pandas DataFrame으로 정리하라고 시킵니다.</b></li></ul><p><img src="44_dalle3styles_3.png"></p><ul><li>네 좋습니다. 정리가 좀 되네요.</li><li>이제 <b>엑셀 파일로 출력도 시켜봅니다.</b></li></ul><p><img src="44_dalle3styles_4.png"></p><ul><li>엑셀 파일 출력도 잘 합니다. 다운로드해서 잘 들어갔는지 열어봅니다.</li></ul><p><img src="44_dalle3styles_5.png"></p><ul><li>검토 결과 문제가 없습니다.</li><li>기법이 200개쯤 있다고 가정하고 이 방법을 10번 반복시킵니다. </li></ul><h2 id="2-2-목록-추출-반복"><a href="#2-2-목록-추출-반복" class="headerlink" title="2.2. 목록 추출 반복"></a>2.2. 목록 추출 반복</h2><ul><li>위에서 ChatGPT에게 시킨 행동을 10차례 반복시킵니다.</li><li>한번에 200개를 추출하라고 시키지 않습니다.</li><li><b>Data Analytics의 동작 시간이 1분으로 제한되어 있기 때문</b>입니다.</li><li>DataFrame을 작성하다가 타임아웃이 되어버리기 때문에 <b>20개짜리를 10번 만들어 붙이는 식</b>으로 진행합니다.</li></ul><p><img src="44_dalle3styles_7.png"></p><ul><li>이런 식으로 짧게 반복시키면 Data Analytics의 다른 장점을 활용할 수 있습니다.</li><li><b>실패해도 스스로 재시도한다</b>는 점입니다.</li></ul><p><img src="44_dalle3styles_8.png"></p><ul><li>작업이 완료된 후, 여러 개의 데이터프레임을 병합합니다.</li><li>일일이 할 수도 있지만 메모리에 있는 것들을 한번에 합치는 것도 좋습니다.</li><li>이번에는 일괄적으로 명령을 내리기보다 <b>Jupyter Notebook</b>을 사용하는 기분으로 한 단계씩 합니다.</li></ul><ul><li>연습을 포함해 총 <b>22개의 DataFrame</b>을 병합했습니다.</li><li>산술적으로 440개의 style을 수집했을 테지만, 중간에 파일을 받아 확인한 결과 중복이 적지 않습니다.</li><li>중복을 제외하고 358개의 스타일이 있다고 하네요.</li></ul><p><img src="44_dalle3styles_12.png"></p><ul><li><b>“style” 컬럼 기준으로 중복을 제외</b>시킵니다.</li><li>캡처는 안했지만 <b>이름순으로 정렬</b>도 시키고 <b>“No.” 컬럼 번호도 새로 매기라</b>고 했습니다.</li><li>엑셀로 받아서 확인합니다.</li></ul><p><img src="44_dalle3styles_11.png"></p><ul><li>내가 아는 스타일이 없나 확인합니다.</li><li><b>watercolor</b>가 없네요. 뭔가 빠진 것 같습니다.</li><li>스타일이 더 많이 있는 것 같습니다.</li></ul><h2 id="2-3-빠진-스타일-추가"><a href="#2-3-빠진-스타일-추가" class="headerlink" title="2.3. 빠진 스타일 추가"></a>2.3. 빠진 스타일 추가</h2><ul><li>다 된 줄 알고 아까 대화창을 닫아버렸습니다.</li><li>목록을 정리하고 다운받는데 사용한 <b>Data Analyst는 대화를 이어갈 수 없습니다.</b></li><li>임시로 만든 서버가 사라졌기 때문입니다.</li><li><b>새 창을 열고, 아까 받아둔 파일을 업로드해서 20개를 추가하라는 작업을 지시합니다.</b></li></ul><p><img src="44_dalle3styles_16.png"></p><ul><li>생각보다 빠르게 결과를 줍니다.</li><li>그런데 파일을 열어보면 <b>내가 알고 있고, 적용되는 스타일이 여전히 없습니다.</b></li><li>위 작업을 여러 차례 반복시켜 100개 정도를 더 추가해 보았지만, 중복만 되고 새 스타일이 추가되지 않습니다.</li><li><b>이런 방식으로 알아내는 데는 한계가 있다</b>는 깨달음을 얻습니다.</li></ul><ul><li>빠진 스타일들이 있는 반면 <b>중복된 스타일</b>도 많습니다. </li><li>예를 들어 <b>Baroque Art</b>와 <b>Baroque</b>는 같을 겁니다.</li><li>ChatGPT에게 의뢰해서 중복을 제거합니다.</li></ul><p><img src="44_dalle3styles_21.png"></p><ul><li><p>자동으로 제거되지 않은 <b>YBA</b>와 <b>YBAs</b>의 중복을 수동으로 해결합니다.</p></li><li><p>최종적으로 얻은 스타일 수가 <b>360개</b>네요. 적지 않습니다.</p></li><li><p><b>DALL.E 스타일 360개 목록</b>은 여기서 받을 수 있습니다: <a href="cleaned_240314_DALLE3_371styles.xlsx"><b>다운로드</b></a></p></li><li><p>이름을 알았으니, 이제 그려봅시다.</p></li></ul><h1 id="다음-글-예고"><a href="#다음-글-예고" class="headerlink" title="다음 글 예고"></a>다음 글 예고</h1><ul><li>ChatGPT에서 360개 그리고 있다가는 인내심과 시간의 한계에 부딪힐 것 같습니다.</li><li>OpenAI API를 이용해서 <b>자동으로 그림을 생성</b>했습니다.</li><li>다음 글에서는 OpenAI API로 DALL.E를 구동하는 방법을 다룹니다.</li></ul><p><img src="44_dalle3styles_22.png"></p>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/General/">General</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/openai/">openai</category>
      
      <category domain="https://jehyunlee.github.io/tags/chatgpt/">chatgpt</category>
      
      <category domain="https://jehyunlee.github.io/tags/dalle/">dalle</category>
      
      
    </item>
    
    <item>
      <title>ChatGPT 활용 KIER 업무효율화 역량강화 강의자료</title>
      <link>https://jehyunlee.github.io/2024/02/22/General-43_kierchatgpt/</link>
      <guid>https://jehyunlee.github.io/2024/02/22/General-43_kierchatgpt/</guid>
      <pubDate>Wed, 21 Feb 2024 16:28:00 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;2023년은 ChatGPT의 해였다고 해도 과언이 아닙니다.&lt;/li&gt;
&lt;li&gt;사실 ChatGPT보다 이를 활용한 여러 응용 프로그램과 GPT store가 더 효과적입니다.&lt;/li&gt;
&lt;li&gt;다양한 도구를 활용해서 본인의 연구와 행정을 효</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>2023년은 ChatGPT의 해였다고 해도 과언이 아닙니다.</li><li>사실 ChatGPT보다 이를 활용한 여러 응용 프로그램과 GPT store가 더 효과적입니다.</li><li>다양한 도구를 활용해서 본인의 연구와 행정을 효율화하는데 도움이 되기를 바랍니다.</li></ul><blockquote><p><a href="240220_%EC%9D%B4%EC%A0%9C%ED%98%84_KIER_ChatGPT%EB%93%B1%EC%97%85%EB%AC%B4%ED%9A%A8%EC%9C%A8%ED%99%94_watermark.pdf"><b>강의자료 다운로드</b></a></p></blockquote><ul><li>총 <b>170페이지 분량입니다.</b> </li><li>표지를 제외한 모든 페이지에 <b>워터마크</b>를 박았습니다.</li><li>일부 강사들이 제 자료를 비롯해 다른 이들의 자료를 도용하는 것을 목격했기 때문입니다.</li><li>당사자에게 게시물 철회와 사과를 받아내기도 했지만, 근본적으로 방어를 하고 싶었습니다.</li><li><b>합당한 출처 표기와 함께 정중하게 인용을 요청하시는 분들께는 기꺼이 공유드립니다.</b></li></ul><ul><li>개별 지식과 기술의 나열이 아닌, <b>전반적인 흐름</b>을 전달하고자 하였습니다.</li><li>워낙 빠르게 발전하는 분야라 지식의 수명이 매우 짧기 때문입니다.</li></ul><p><img src="240220_%EC%9D%B4%EC%A0%9C%ED%98%84_KIER_ChatGPT%EB%93%B1%EC%97%85%EB%AC%B4%ED%9A%A8%EC%9C%A8%ED%99%94_pdf_%ED%8E%98%EC%9D%B4%EC%A7%80_005.png"></p><ul><li>크게 몇 가지 흐름이 느껴집니다. </li><li>하나는 <b>멀티모달(multimodal)</b>입니다. 글자 외에도 이미지를 시작으로 다양한 감각이 동원됩니다.</li><li>또 하나는 <b>경량화</b>입니다. 더 적은 자원에서도 성능을 유지하여 개인용 PC와 모바일을 향해 전진하는 흐름입니다.</li><li>나머지는 <b>추론 능력 강화</b>입니다. 말만 잘 하는 것이 아니라 눈치가 빠르기를 원합니다.</li></ul><p><img src="240220_%EC%9D%B4%EC%A0%9C%ED%98%84_KIER_ChatGPT%EB%93%B1%EC%97%85%EB%AC%B4%ED%9A%A8%EC%9C%A8%ED%99%94_pdf_%ED%8E%98%EC%9D%B4%EC%A7%80_003.png"></p><ul><li><b>ChatGPT 설치</b>부터 <b>GPT 활용 연구/행정 효율화 프로그램 소개</b>까지 담았습니다.</li><li>총 4시간 강의 분량이지만, 그럼에도 불구하고 모든 내용을 담지는 못했습니다.</li><li><b>업무 효율화</b>가 중심이므로 예를 들어 <b>프롬프트 엔지니어링</b>의 경우 <b>정확한 정보</b>와 <b>전달력 강화</b>에 집중하고 있습니다.</li><li>프롬프트 엔지니어링을 테크닉으로 받아들이지 않으면 좋겠습니다.</li></ul><p><img src="240220_%EC%9D%B4%EC%A0%9C%ED%98%84_KIER_ChatGPT%EB%93%B1%EC%97%85%EB%AC%B4%ED%9A%A8%EC%9C%A8%ED%99%94_pdf_%ED%8E%98%EC%9D%B4%EC%A7%80_072.png"></p><ul><li>환각(hallucination)은 창의력의 발현이라고도 일컬어지지만 업무 관점에서는 리스크일 뿐입니다.</li><li>반면 행간을 읽어야 할 일이 많으니 <b>창발(emergence)</b>은 중요하게 다루어지고 있습니다.</li><li>아직 부족함이 있지만 점차 <b>추론 기계(reasoning machine)</b>으로 진화하리라는 믿음을 바탕으로,</li><li>단순 챗봇을 벗어나 업무 도우미로서의 기능을 강조했습니다.</li></ul><p><img src="240220_%EC%9D%B4%EC%A0%9C%ED%98%84_KIER_ChatGPT%EB%93%B1%EC%97%85%EB%AC%B4%ED%9A%A8%EC%9C%A8%ED%99%94_pdf_%ED%8E%98%EC%9D%B4%EC%A7%80_047.png"></p><ul><li>그런 면에서, 챗봇 외에도 그림을 그리는 <b>DALL.E</b>와 데이터를 분석하는 <b>Data Analyst</b>를 뺄 수 없었습니다.</li><li>시간과 분량 관계상 깊게는 다루지 못하더라도 이런 일을 할 수 있다는 사실을 알리고자 했습니다.</li><li>특히 <b>Data Analyst</b>로 <b>데이터 분석</b>은 물론, <b>딥러닝</b>을 할 수 있지만 제약이 있다는 것,</li><li>그리고 <b>라이브러리를 업로드해서 설치할 수 있다</b>는 사실은 가능성의 지평을 크게 넓혀줍니다.</li></ul><p><img src="240220_%EC%9D%B4%EC%A0%9C%ED%98%84_KIER_ChatGPT%EB%93%B1%EC%97%85%EB%AC%B4%ED%9A%A8%EC%9C%A8%ED%99%94_pdf_%ED%8E%98%EC%9D%B4%EC%A7%80_077.png"></p><ul><li>이미 여러 면에서 언어 모델은 <b>추론 엔진</b>, 또는 <b>인터페이스</b>로 동작하며 혁신을 이루고 있습니다.</li><li>언어모델을 중심으로 논문 수집, 실험 설계, 실험 수행, 데이터 분석, 가설 수립을 자동으로 하는 <b>연구원</b>이 나왔습니다.</li><li>coscientist라는 이름입니다. 이 논문이 나왔을 때 놀라지 않는 스스로에게 약간 놀랐습니다.</li><li>당연히 나올 때가 되었거든요.</li></ul><p><img src="240220_%EC%9D%B4%EC%A0%9C%ED%98%84_KIER_ChatGPT%EB%93%B1%EC%97%85%EB%AC%B4%ED%9A%A8%EC%9C%A8%ED%99%94_pdf_%ED%8E%98%EC%9D%B4%EC%A7%80_086.png"></p><ul><li>코딩이 낯선 분들, 그리고 고성능 GPU가 없는 분들께 GPT 기반 응용프로그램 개발은 어렵게 느껴질 겁니다.</li><li>우선 <b>GPT store</b>에서 남들이 만든 <b>GPTs</b>를 찾아 써보시는 것을 권합니다.</li><li>본 자료에서는 예시로 <b>특허 명세서 작성</b>과 <b>마인드 맵 작성</b> 예시를 보여드립니다.</li></ul><p><img src="240220_%EC%9D%B4%EC%A0%9C%ED%98%84_KIER_ChatGPT%EB%93%B1%EC%97%85%EB%AC%B4%ED%9A%A8%EC%9C%A8%ED%99%94_pdf_%ED%8E%98%EC%9D%B4%EC%A7%80_091.png"></p><ul><li><b>Microsoft</b>의 행보도 놓칠 수 없습니다.</li><li>ChatGPT와 강력한 동맹을 형성하고 자사의 제품에 요긴하게 탑재하고 있습니다.</li><li>멀티모달은 ChatGPT보다 먼저 공개되었고, <b>오피스 제품군</b>과 <b>운영체제</b>에도 GPT를 심었습니다.</li><li>체감은 ChatGPT보다 더 빠르고 강하게 다가올 수 있습니다.</li></ul><p><img src="240220_%EC%9D%B4%EC%A0%9C%ED%98%84_KIER_ChatGPT%EB%93%B1%EC%97%85%EB%AC%B4%ED%9A%A8%EC%9C%A8%ED%99%94_pdf_%ED%8E%98%EC%9D%B4%EC%A7%80_122.png"></p><ul><li><b>Microsoft Designer</b>를 잠시 주목하셔도 좋을 듯 합니다.</li><li>DALL.E에 몇 가지를 더해서 요긴한 제품을 만들었습니다.</li><li>DALL.E에서 지원되지 않는 <b>투명 배경</b>과 초보자가 어려워하는 <b>프롬프트 가이드를 제공</b>합니다.</li></ul><p><img src="240220_%EC%9D%B4%EC%A0%9C%ED%98%84_KIER_ChatGPT%EB%93%B1%EC%97%85%EB%AC%B4%ED%9A%A8%EC%9C%A8%ED%99%94_pdf_%ED%8E%98%EC%9D%B4%EC%A7%80_147.png"></p><ul><li>보고서나 논문과 오랜 시간을 보내는 분이라면 <b>SCISPACE</b>와 친해지시길 바랍니다.</li><li><b>언어모델의 기본에 충실</b>해서 PDF 파일을 띄워놓고 질의응답을 할 수 있습니다.</li><li>PDF 뷰어와 한 몸이고, My Library를 만들 수 있다는 점이 매우 좋습니다.</li><li>심지어 기능이 더 강해지고 있습니다.</li></ul><p><img src="240220_%EC%9D%B4%EC%A0%9C%ED%98%84_KIER_ChatGPT%EB%93%B1%EC%97%85%EB%AC%B4%ED%9A%A8%EC%9C%A8%ED%99%94_pdf_%ED%8E%98%EC%9D%B4%EC%A7%80_170.png"></p><ul><li>이미 AI가 우리 옆에 와서 도울 준비를 하고 있습니다.</li><li>모쪼록 효과적으로 이용하시기 바랍니다.</li></ul>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/General/">General</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/dall-e/">dall.e</category>
      
      <category domain="https://jehyunlee.github.io/tags/openai/">openai</category>
      
      <category domain="https://jehyunlee.github.io/tags/chatgpt/">chatgpt</category>
      
      <category domain="https://jehyunlee.github.io/tags/data-analysis/">data analysis</category>
      
      
    </item>
    
    <item>
      <title>TalkIT - AI시대 데이터 과학자는? &quot;데이터 과학자 원칙&quot; 저자들과의 토크</title>
      <link>https://jehyunlee.github.io/2024/02/20/General-42-talkit_ds/</link>
      <guid>https://jehyunlee.github.io/2024/02/20/General-42-talkit_ds/</guid>
      <pubDate>Tue, 20 Feb 2024 06:42:00 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;b&gt;Contributor:&lt;/b&gt; 고우성, 김영민&lt;br&gt;&lt;a href=&quot;https://talkit.tv/main&quot;&gt;TalkIT&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://www.youtube.com/@Talkitonair</description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p><b>Contributor:</b> 고우성, 김영민<br><a href="https://talkit.tv/main">TalkIT</a><br><a href="https://www.youtube.com/@Talkitonair">YouTube: TalkIT</a></p></blockquote><ul><li>작년 6월 8명의 공저자와 함께 <b>골든래빗</b>에서 <b>&lt;데이터 과학자 원칙&gt;</b>을 출간했습니다.</li><li>그리고 2월 16일, <b>TalkIT</b>에서 김영민 저자님과 함께 이야기를 나눌 기회가 있었습니다.</li><li>고우성PD님의 리드로 데이터 시각화에 대한 이야기를 나누었습니다.</li></ul><ul><li>좋은 기회를 만들어 주신 고우성PD님께 감사드리며,</li><li>금요일 저녁 5시부터 한 시간 반동안 함께 해주신 참여자 분들께도 감사드립니다.</li><li>질문이 엄청 많이 나와서 모두 답변을 드리지 못했습니다. 이 점 양해 부탁드립니다.</li><li>발표 영상 : (<a href="https://www.youtube.com/watch?v=35oThWYhOXY">Youtube Link</a>)<br></li></ul><div class="video-container"><iframe src="https://www.youtube.com/embed/35oThWYhOXY" frameborder="0" loading="lazy" allowfullscreen></iframe></div> <ul><li>사전 공지 링크 : <a href="https://talkit.tv/Event/3010/?SIDX=3364">토크아이티 프리미엄 웨비나</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/General/">General</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/chatgpt/">chatgpt</category>
      
      <category domain="https://jehyunlee.github.io/tags/data-analysis/">data analysis</category>
      
      <category domain="https://jehyunlee.github.io/tags/data-visualization/">data visualization</category>
      
      <category domain="https://jehyunlee.github.io/tags/TalkIT/">TalkIT</category>
      
      <category domain="https://jehyunlee.github.io/tags/%EA%B3%A8%EB%93%A0%EB%9E%98%EB%B9%97/">골든래빗</category>
      
      
    </item>
    
    <item>
      <title>ChatGPT Data Analysis 시각화 한글 사용</title>
      <link>https://jehyunlee.github.io/2024/02/11/General-41_dakorean/</link>
      <guid>https://jehyunlee.github.io/2024/02/11/General-41_dakorean/</guid>
      <pubDate>Sat, 10 Feb 2024 16:43:00 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;ChatGPT에는 Data Analysis가 탑재되어 있습니다.&lt;/li&gt;
&lt;li&gt;Code Interpreter로 불리던 기능으로, Python 프로그램을 작성하고 실행합니다.&lt;/li&gt;
&lt;li&gt;ChatGPT Data Analysis에서 </description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>ChatGPT에는 Data Analysis가 탑재되어 있습니다.</li><li>Code Interpreter로 불리던 기능으로, Python 프로그램을 작성하고 실행합니다.</li><li>ChatGPT Data Analysis에서 데이터를 시각화할 때 한글을 사용하는 법을 알아봅니다.</li></ul><h1 id="1-ChatGPT에서-데이터-불러오기"><a href="#1-ChatGPT에서-데이터-불러오기" class="headerlink" title="1. ChatGPT에서 데이터 불러오기"></a>1. ChatGPT에서 데이터 불러오기</h1><blockquote><p><a href="https://github.com/mwaskom/seaborn-data/blob/master/penguins.csv">seaborn: penguins dataset</a></p></blockquote><ul><li>ChatGPT는 웹 검색을 할 수 있습니다.</li><li>가장 보편적인 데이터 분석용 예제 중 하나인 펭귄 데이터셋을 가져오라고 합니다.</li><li>Data Analysis가 자동으로 실행됩니다.</li></ul><p><img src="41_dakorean_01.png"></p><ul><li>왜인지 실패합니다.</li><li><b>현재 환경으로는 외부 URL에 접속할 수 없다</b>고 하네요.<br>(I’m unable to access external URLs directly from my current environment)</li><li>이유를 알아보기 위해 ChatGPT의 동작을 제어하는 <b>system prompt</b>를 확인합니다.</li></ul><p><img src="41_dakorean_02.png"></p><ul><li>몇 가지 중요 정보가 있습니다.</li><li><b>Jupyter Notebook 환경에서 실행된다</b>는 것,</li><li><b>60.0초 뒤에 time out된다는 것</b>,</li><li>그리고 <b>Data Analysis에서는 Internet Access가 막혀있다는 점</b>입니다.</li><li>따라서 파일 다운로드를 포함한 <b>외부 web request도 막혀있고 API call도 안 됩니다.</b> </li></ul><ul><li>이번에는 <b>Web Browsing</b>을 이용해서 펭귄 데이터셋을 가져오라고 시켜 봅니다.</li></ul><p><img src="41_dakorean_03.png"></p><ul><li>역시 못한다고 합니다.</li><li>대신 파일 링크를 주며 <b>다운받아 올려달라</b>고 하네요.</li><li>기꺼이 다운받아 올려줍니다.</li></ul><ul><li>파일을 올리고 세 가지 일을 함께 시킵니다.<br><b>1. 파일 내용을 보여주고 df_penguins라는 이름의 pandas DataFrame으로 저장</b><br><b>2. 데이터셋의 다섯 줄을 보여달라</b><br><b>3. 데이터 요약 내용을 보여달라.</b></li></ul><p><img src="41_dakorean_04.png"></p><h1 id="2-ChatGPT에서-데이터-시각화하기"><a href="#2-ChatGPT에서-데이터-시각화하기" class="headerlink" title="2. ChatGPT에서 데이터 시각화하기"></a>2. ChatGPT에서 데이터 시각화하기</h1><blockquote><p><a href="https://pypi.org/project/koreanize-matplotlib/">pypi: koreanize-matplotlib</a></p></blockquote><ul><li><b>데이터 중 <code>body_mass_g</code> 분포를 히스토그램으로 표현하라고 지시합니다.</b></li><li>그림 크기도 4 x 3 inch로 지정합니다. </li></ul><p><img src="41_dakorean_05.png"></p><ul><li>기대대로 그림이 출력되었습니다.</li><li>그런데 당연하게도 영문으로 출력되었습니다.</li><li>제목을 한글로 바꿔봅시다.</li><li><b>펭귄 체중 분포</b>로 바꿔달라고 했는데 글자가 깨져버립니다.</li></ul><p><img src="41_dakorean_06.png"></p><ul><li>너무나 당연하지만 한글 글꼴이 설치되지 않았기 때문입니다.</li><li><b>글꼴을 업로드하고 사용하라고 할 수 있지만 연달아 제대로 동작하지 않습니다.</b></li><li>일회성으로 <a href="https://jehyunlee.github.io/2024/01/24/General-39_signature/">폰트를 업로드해 그림에 한글을 삽입할 때</a>와는 다른 상황입니다.</li></ul><ul><li>Python의 가장 기본격인 시각화 라이브러리는 Matplotlib이며 Data Analysis도 이를 사용합니다.</li><li>안정적으로 Matplotlib을 한글화하는 <b><a href="https://pypi.org/project/koreanize-matplotlib/">koreanize-matplotlib</a></b>을 사용합니다.</li></ul><p><img src="41_dakorean_07.png"></p><ul><li><b><a href="https://files.pythonhosted.org/packages/ef/91/93f56a4526d2dbead44250d9166d97568c2ce051c90eaa4be36788d59131/koreanize_matplotlib-0.1.1-py3-none-any.whl">.whl file</a></b>을 다운받아 대화창에 올리고 환경 설정을 지시합니다.</li><li>글꼴을 개별적으로 올렸을 때 발생할 수 있는 <b>오류가 예방</b>됩니다.</li></ul><p><img src="41_dakorean_08.png"></p><h1 id="3-ChatGPT에서-데이터-시각화-수정하기"><a href="#3-ChatGPT에서-데이터-시각화-수정하기" class="headerlink" title="3. ChatGPT에서 데이터 시각화 수정하기"></a>3. ChatGPT에서 데이터 시각화 수정하기</h1><blockquote><p><a href="https://jehyunlee.github.io/2022/10/16/Python-DS-117-pycon2022/">PyCon Korea 2022: 혼란한 Matplotlib에서 질서 찾기</a><br><a href="https://matplotlib.org/stable/gallery/showcase/anatomy.html">Matplotlib: Anatomy of a figure</a></p></blockquote><ul><li>데이터 시각화는 기본값으로 실행한 초안으로 끝나지 않습니다.</li><li>적절한 요소를 더하고 빼면서 수정해야 합니다.</li><li>먼저 크게 두 가지만 수정합시다.</li></ul><p><b>1. 모든 글꼴 크기를 절반으로 줄이고</b><br><b>2. 히스토그램 색을 오렌지색으로 변경합니다.</b></p><ul><li>해당 명령을 위처럼 간단히 내리지 못하고 복잡하게 내려야만 했습니다.</li><li><b>title, xlabel, ylabel, xtick label, ytick label, edgewidth, facecolor</b>라는 용어를 사용합니다.</li></ul><p><img src="41_dakorean_09.png"></p><ul><li>그래프가 Matplotlib으로 그려졌기 때문에 Matplotlib에서 사용하는 요소명으로 지시하는 것입니다.</li><li><a href="https://jehyunlee.github.io/2022/10/16/Python-DS-117-pycon2022/">PyCon Korea 2022: 혼란한 Matplotlib에서 질서 찾기</a>에서 말씀드린 내용 그대로입니다.</li><li>각 부위의 이름은 <a href="https://matplotlib.org/stable/gallery/showcase/anatomy.html">Anatomy of a figure</a>에서 참고할 수 있습니다.</li></ul><p><img src="41_dakorean_09.webp"></p><ul><li>내친 김에 그림을 조금 더 바꿔봅니다.</li><li><b>모든 테두리를 보이도록 하고, grid를 가리고, 눈금의 방향을 밖으로 향하게 합니다.</b></li></ul><p><img src="41_dakorean_10.png"></p><ul><li>ChatGPT의 답변 맨 아래에 있는 링크를 클릭하면 최종 코드를 볼 수 있습니다.</li></ul><p><img src="41_dakorean_11.png"></p>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/General/">General</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/openai/">openai</category>
      
      <category domain="https://jehyunlee.github.io/tags/chatgpt/">chatgpt</category>
      
      <category domain="https://jehyunlee.github.io/tags/data-analysis/">data analysis</category>
      
      
    </item>
    
    <item>
      <title>KRICT Insight - 현재와 미래 연구 현장의 인공지능</title>
      <link>https://jehyunlee.github.io/2024/02/07/General-40-krictinsight2/</link>
      <guid>https://jehyunlee.github.io/2024/02/07/General-40-krictinsight2/</guid>
      <pubDate>Tue, 06 Feb 2024 19:59:00 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;&lt;b&gt;한국화학연구원 국가전략기술추진단&lt;/b&gt;에서 발간되는 KRICT Insight에 기고를 했습니다.&lt;/li&gt;
&lt;li&gt;‘23년도 11월에 발간된 것으로, 온라인 공개가 다소 늦었습니다.&lt;/li&gt;
&lt;li&gt;‘23년도 9월에 탈고하여 10월</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li><b>한국화학연구원 국가전략기술추진단</b>에서 발간되는 KRICT Insight에 기고를 했습니다.</li><li>‘23년도 11월에 발간된 것으로, 온라인 공개가 다소 늦었습니다.</li><li>‘23년도 9월에 탈고하여 10월경 마이너 수정을 한 원고입니다.</li><li><b>생성AI의 흐름</b>과 함께 <b>연구 분야 적용 동향</b>을 담고자 노력했습니다.</li></ul><blockquote><p><a href="https://www.krict.re.kr/prog/krictInsight/kor/sub06_06_02/list.do">KRICT Insight 홈페이지</a></p></blockquote><ul><li>DALL.E3가 공개되기 직전이고 GPT store가 나오기 전입니다.</li><li>지금 시점에서 보면 일부 최신 내용이 빠져있지만 흐름을 읽기엔 나쁘지 않을 것입니다.</li><li>보고서 내려받기 : <a href="KRICT_insight_2.pdf">다운로드</a></li></ul><p><img src="40_krictinsight2_01.png" alt="표지"></p>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/General/">General</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/openai/">openai</category>
      
      <category domain="https://jehyunlee.github.io/tags/chatgpt/">chatgpt</category>
      
      <category domain="https://jehyunlee.github.io/tags/microsoft/">microsoft</category>
      
      
    </item>
    
    <item>
      <title>DALL.E, Watermark &amp; Signature</title>
      <link>https://jehyunlee.github.io/2024/01/24/General-39_signature/</link>
      <guid>https://jehyunlee.github.io/2024/01/24/General-39_signature/</guid>
      <pubDate>Wed, 24 Jan 2024 14:26:00 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;마음에 드는 그림을 그리면 내 이름을 써넣고 싶습니다.&lt;/li&gt;
&lt;li&gt;한쪽 구석에 힘있게, 또는 조심스럽게 사인을 넣으면 끝맺음을 한 느낌이 듭니다.&lt;/li&gt;
&lt;li&gt;남들이 자기 것인 것처럼 못하게 워터마크를 넣고 싶을 때도 있습니다</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>마음에 드는 그림을 그리면 내 이름을 써넣고 싶습니다.</li><li>한쪽 구석에 힘있게, 또는 조심스럽게 사인을 넣으면 끝맺음을 한 느낌이 듭니다.</li><li>남들이 자기 것인 것처럼 못하게 워터마크를 넣고 싶을 때도 있습니다. </li><li>ChatGPT는 할 수 있습니다. DALL.E와 Data Analysis의 힘을 합칩니다.</li></ul><h1 id="1-서명-이미지-준비"><a href="#1-서명-이미지-준비" class="headerlink" title="1. 서명 이미지 준비"></a>1. 서명 이미지 준비</h1><ul><li><a href="https://jehyunlee.github.io/2023/12/25/General-33-ChatGPT_DataAnalysis/">폰트를 업로드해 글자를 쓰면 되잖아?</a> 네. 맞습니다.</li><li><b>그런데 여러분의 서명을 그대로 넣고 싶다면?</b> 폰트로 표현이 안 될때도 있을 겁니다.</li><li>이번에는 <b>이미지 파일로 저장된 서명</b>을 사용합니다.</li></ul><ul><li>서명 이미지를 준비합니다. </li><li>스마트폰이나 태블릿에 전용 펜으로 서명을 해서 이미지 파일로 저장해도 되고,</li><li>종이에 펜으로 서명한 뒤 사진을 찍어도 됩니다.</li><li>제 진짜 서명이 유출되면 곤란하므로 이 글에서는 ppt로 만든 서명을 사용합니다.</li></ul><ul><li>투명한 바탕에 검은 글씨로 하나, 투명한 바탕에 흰 글씨로 하나를 준비합니다.</li><li>서명이 포함된 텍스트 박스만 <b>그림으로 저장</b>을 선택해 파일로 저장합니다.</li><li>저는 <a href="signature_black.png"><b>signature_black</b></a>과 <a href="signature_white.png"><b>signature_white</b></a>라는 이름으로 저장했습니다.</li></ul><p><img src="39_signature_01.png"></p><h1 id="2-DALL-E로-그림-그리기"><a href="#2-DALL-E로-그림-그리기" class="headerlink" title="2. DALL.E로 그림 그리기"></a>2. DALL.E로 그림 그리기</h1><ul><li>마음에 드는 그림을 만듭니다.</li><li>예전에 <b>이야기 보따리가 펼쳐진 지구본 주위에 아이들이 둘러앉아 노는 모습</b>을 그린 적이 있습니다.</li><li>그 때 사용했던 프롬프트를 그대로 사용해 그림을 그립니다.</li></ul><blockquote><p>Input Prompt: a huge high-quality earth globe floating in the air glowing bright at night, its surface is covered with a lot of intricate 3D action miniatures representing various stories such as love, friendship, adventure, hero and revolution. Korean boys and girls {smiling, laughing, pointing out the miniatures with fingers, chatting each other, shaking hands to the miniatures} are sitting in front of the earth globe and paying attention to the stories on it. photography</p></blockquote><blockquote><p>ChatGPT Prompt: A large, high-quality Earth globe floating in the air, glowing brightly at night. The globe’s surface is adorned with numerous intricate 3D miniatures depicting various stories of love, friendship, adventure, heroism, and revolution. Around the globe, Korean boys and girls are engaged in various activities: smiling, laughing, pointing at the miniatures, chatting, and playfully shaking hands with the miniatures. They are sitting in front of the globe, captivated by the stories on it. The scene has a magical, storybook quality, capturing a moment of wonder and interaction. The image should have a photography-like realism.</p></blockquote><p><img src="39_signature_04.png"></p><ul><li>마음에 들 때까지 프롬프트를 수정하거나 반복 생성을 해도 좋습니다.</li></ul><h1 id="3-Data-Analysis로-이미지-합성하기"><a href="#3-Data-Analysis로-이미지-합성하기" class="headerlink" title="3. Data Analysis로 이미지 합성하기"></a>3. Data Analysis로 이미지 합성하기</h1><h2 id="3-1-서명-이미지-업로드"><a href="#3-1-서명-이미지-업로드" class="headerlink" title="3.1. 서명 이미지 업로드"></a>3.1. 서명 이미지 업로드</h2><ul><li>대화창의 클립 아이콘을 선택해 <b>이미지 파일을 업로드</b>합니다.</li><li>서명 이미지를 사용하기에 앞서 <b>이미지 파일이 잘 구성되었는지</b> 살펴봅니다.</li><li>여러 면에서 살펴볼 수 있겠지만, 불투명도(alpha)를 분포를 살펴봅니다.</li></ul><p><img src="39_signature_05.png"></p><ul><li>의도한대로 가운데 하얀색 부분만 불투명, 나머지는 투명입니다.</li><li>대부분 픽셀의 alpha가 0이고 일부분만 최대값(255)라는 점에서 알 수 있습니다.</li><li><b>생성한 이미지</b>도 한번 살펴봅니다.</li></ul><p><img src="39_signature_06.png"></p><ul><li>모든 지점의 alpha가 동일하다고 하고, 그 값은 255라고 합니다.</li><li><b>전체가 불투명한 이미지</b>임을 알 수 있습니다.</li><li>현재 달리가 만드는 이미지가 다 그렇습니다. <b>투명한 이미지를 만들지 못합니다.</b></li></ul><h2 id="3-2-서명을-생성한-그림에-겹치기"><a href="#3-2-서명을-생성한-그림에-겹치기" class="headerlink" title="3.2. 서명을 생성한 그림에 겹치기"></a>3.2. 서명을 생성한 그림에 겹치기</h2><ul><li>서명을 그림 오른쪽 아래에 살포시 놓아보겠습니다.</li><li>다음 과정을 프롬프트로 지시합니다.</li></ul><p><b>1. 서명 이미지에서 하얀색 부분만 선택</b><br><b>2. 생성 이미지 우측 하단(위에서부터 98% 지점, 좌측에서부터 80% 지점)에 합성. 서명의 폭은 200px, 종횡비는 그대로 유지</b></p><ul><li>달리가 만드는 이미지 크기는 기본적으로 1024 x 1024입니다. </li><li>좌측에서 80% 지점이면 대략 800 px 지점일 것이므로 여기에 200 px 로 서명을 놓으면 대략 오른쪽 끝까지 놓일 겁니다.</li><li>여기까지가 합성입니다. 이제 이미지 확인과 다운로드를 위한 프롬프팅을 합니다.</li></ul><p><b>3. 새로 만들어진 이미지 다운로드 링크 제공</b><br><b>4. 화면에도 출력</b></p><blockquote><p>Let’s overlap the signature (uploaded image) on the original generated image.  </p><ol><li>Select only white (even not perfect, the most bright region of the image) region of the signature.  </li><li>add the selected region on the lower right corner (top 98%, left 80%, width = 200 px, aspect ratio: as is) of the original generated image.  </li><li>provide me download link of the new image.  </li><li>show image on screen.</li></ol></blockquote><p><img src="39_signature_07.png"></p><ul><li><b>서명이 의도한대로 새겨졌습니다.</b></li></ul><h2 id="3-3-워터마크-만들기"><a href="#3-3-워터마크-만들기" class="headerlink" title="3.3. 워터마크 만들기"></a>3.3. 워터마크 만들기</h2><ul><li>이번에는 <b>그림 한복판에 커다랗게 워터마크</b>를 박아봅니다.</li><li>워터마크는 글자가 반투명해야 합니다.</li><li>서명 합성과 기본 원리는 동일하지만, <b>서명의 불투명도를 조절하는 단계가 추가</b>된다는 것만 다릅니다.</li></ul><p><img src="39_signature_08.png"></p><blockquote><p>Good. In this time, I want to add a half-transparent watermark at the center of the image.</p><ol><li>Select only white (even not perfect, the most bright region of the image) region of the signature.</li><li>Modify the alpha of the selected region as 30%.</li><li>add the selected region on the lower right corner (top 50%, left 50%, width = 800 px, aspect ratio: as is) of the original generated image. </li><li>provide me download link of the new image.</li><li>show image on screen.</li></ol></blockquote><ul><li>위 프롬프트의 <b>2번째 단계</b>가 불투명도를 30%로 줄이는 부분입니다.</li><li>실제 사용할 워터마크라면 더 투명해도 되겠지만, 여기선 이 정도로 해 봅시다.</li></ul><ul><li>아까 그림 위에 <b>훌륭한 워터마크가 새겨졌습니다.</b></li></ul><p><img src="39_signature_03.png"></p><ul><li>이제 누가 이 그림을 자기 것이라고 우기기는 힘들겁니다.</li></ul><h2 id="3-4-각자-응용"><a href="#3-4-각자-응용" class="headerlink" title="3.4. 각자 응용"></a>3.4. 각자 응용</h2><ul><li>방금 우리는 지정된 서명 이미지 파일과 프롬프트를 사용해서 서명과 워터마크를 넣었습니다.</li><li>여러분이 그림 100개에 서명을 하겠다면 같은 일을 100번 할 반복 작업입니다.</li><li>그렇다면 <b>GPTs를 만들어보면 어떨까요?</b></li><li>여러분의 서명 이미지와 제가 드린 프롬프트를 조금 고치면 여러분만의 멋진 GPTs가 될 겁니다. </li><li>밝은 색과 짙은 색, 또는 원색 서명들을 준비해서 어울리는 것을 골라 넣을 수 있을 겁니다. :)</li></ul><p><img src="39_signature_02.png"></p>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/General/">General</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/openai/">openai</category>
      
      <category domain="https://jehyunlee.github.io/tags/chatgpt/">chatgpt</category>
      
      <category domain="https://jehyunlee.github.io/tags/dalle/">dalle</category>
      
      
    </item>
    
    <item>
      <title>먀스터피스</title>
      <link>https://jehyunlee.github.io/2024/01/22/General-38-mya/</link>
      <guid>https://jehyunlee.github.io/2024/01/22/General-38-mya/</guid>
      <pubDate>Mon, 22 Jan 2024 12:38:00 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;b&gt;Contributor:&lt;/b&gt; AICreator, PromptFactory, 반정환, 김종익&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;지난 1월 19일 &lt;b&gt;생성 ‘먀’ 컨퍼런스, 먀스터피스 展&lt;/b&gt;이 열렸습</description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p><b>Contributor:</b> AICreator, PromptFactory, 반정환, 김종익</p></blockquote><ul><li>지난 1월 19일 <b>생성 ‘먀’ 컨퍼런스, 먀스터피스 展</b>이 열렸습니다.</li><li>생성 AI를 학문적으로 다루며 기술을 발전시키는 분들도 많고</li><li>생성 AI의 흐름 속에서 사업 기회를 찾는 분들도 많으시지만</li><li>생성 AI를 이용해 그림을 그리고 느끼는 분들을 중심으로 한 자리였습니다.</li></ul><ul><li>많은 분들께서 멋진 발표를 해 주셨으며 </li><li>저도 <b>그림을 그리는 즐거움</b>이라는 제목으로 말씀을 드렸습니다.</li><li>이제까지 드렸던 많은 발표 중에서 가장 긴장감 없이 편하게 이야기를 드린 자리였습니다.</li><li>발표 영상 : (<a href="https://youtu.be/pPpgNihyLmI">Youtube Link</a>)<br></li><li>발표 자료 : <a href="240119_%EC%9D%B4%EC%A0%9C%ED%98%84_%EA%B7%B8%EB%A6%BC%EC%9D%98%EC%A6%90%EA%B1%B0%EC%9B%80.pdf">다운로드</a></li></ul><div class="video-container"><iframe src="https://www.youtube.com/embed/pPpgNihyLmI" frameborder="0" loading="lazy" allowfullscreen></iframe></div> <ul><li>발표가 준비되던 시점, 반정환님께서 동영상 티저를 만들어 주셨습니다.</li><li>제가 출품한 그림 두 점은 맨 마지막에 나옵니다.</li></ul><p><video src="반정환님_1차티저.mp4" width="1280" height="720" controls preload></video></p><p><img src="%ED%8F%AC%EC%8A%A4%ED%84%B0_2.jpg" alt="2차 포스터"></p>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/General/">General</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/chatgpt/">chatgpt</category>
      
      <category domain="https://jehyunlee.github.io/tags/dalle/">dalle</category>
      
      
    </item>
    
    <item>
      <title>DALL.E, 중세 병사 이야기</title>
      <link>https://jehyunlee.github.io/2024/01/14/General-37-medievalsoldier/</link>
      <guid>https://jehyunlee.github.io/2024/01/14/General-37-medievalsoldier/</guid>
      <pubDate>Sat, 13 Jan 2024 19:26:00 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;인지부조화라는 단어가 있습니다.&lt;/li&gt;
&lt;li&gt;기존에 가지고 있던 것과 반대되는 상황에 놓였을 때 느끼는 불편과 스트레스를 말합니다.&lt;/li&gt;
&lt;li&gt;머리와 상반신은 광속으로 날아가는 롤러코스터에 얹혀있는데,&lt;/li&gt;
&lt;li&gt;발붙인 </description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>인지부조화라는 단어가 있습니다.</li><li>기존에 가지고 있던 것과 반대되는 상황에 놓였을 때 느끼는 불편과 스트레스를 말합니다.</li><li>머리와 상반신은 광속으로 날아가는 롤러코스터에 얹혀있는데,</li><li>발붙인 땅은 90년대에 머무른 느낌을 받을 때 괴롭습니다.</li></ul><h1 id="1-ChatGPT-DALL-E"><a href="#1-ChatGPT-DALL-E" class="headerlink" title="1. ChatGPT DALL.E"></a>1. ChatGPT DALL.E</h1><ul><li>ChatGPT에 탑재된 DALL.E는 속칭 <b>챗달이</b>라 불립니다.</li><li>Bing Chat(現 Copilot)에 탑재된 DALL.E와 구분하기 위한 이름입니다.</li><li>Copilot에 탑재된 DALL.E는 Bing Image Creator에 의지하며 <b>빙달이</b>라고 불립니다.</li></ul><ul><li><b>빙달이보다 챗달이를 좋아합니다.</b></li><li>자유로운 채팅으로 prompt를 더하며 그림을 고치기 좋고,</li><li>image seed number를 유지하며 연속으로 이미지를 그려내기 좋기 때문입니다.</li></ul><ul><li>아래 그림은 <b>&lt;최애의 아이&gt;</b>에서 모티브를 얻어 그린 짧은 연작입니다.</li></ul><p><img src="37_medieval_16.png"></p><blockquote><p>input prompt: A cute and extraordinary beutiful japanese high 16 years old girl standing strong on rooftop of a hospital at night. She is wearing padding over skirt, and white sneakers with black stripe on it. A very bright star is blinking blue above her. Behind her a sillhouette of mountain ridge is seen. Front view. Anime</p></blockquote><blockquote><p>ChatGPT prompt: Anime style illustration of a 16-year-old Japanese girl standing confidently on a hospital rooftop at night. She has a cute and extraordinary beauty, dressed in a unique outfit with padding over her skirt and white sneakers featuring a black stripe. A bright blue star twinkles above her in the night sky. Behind her, the silhouette of a mountain ridge is visible. The scene is captured from a front view, emphasizing her strong stance and the dramatic night setting.</p></blockquote><p><img src="37_medieval_17.png"></p><blockquote><p>additional prompt: Keep image seed number. Let her sing and dance on stage under spotlight as an idol, double explosure, close up her face.</p></blockquote><blockquote><p>ChatGPT prompt: Anime style illustration, double exposure effect, showing the same 16-year-old Japanese girl both singing and dancing on stage as an idol under a spotlight, and a close-up of her face. She embodies a lively and captivating presence, with the stage scene capturing her in mid-performance and the close-up emphasizing her expressions while singing. The scene is vibrant and dynamic, reflecting the energy of a live performance. Keep the image seed number to maintain consistency in her appearance.</p></blockquote><p><img src="37_medieval_18.png"></p><blockquote><p>additional prompt: Let the idol in the image standing with smile next to a kinderwagen for twins. In the kinderwagen baby boy and girl resemble thier mother are smilimg, too. Their 눈동자 are blinking with a shape of  Spotlight from every direction.</p></blockquote><blockquote><p>ChatGPT prompt: Anime style illustration of the same 16-year-old Japanese idol girl, smiling and standing next to a twin stroller (kinderwagen). Inside the stroller, there’s a baby boy and a baby girl who resemble their mother and are also smiling. Unique detail: their pupils (눈동자) are blinking with spotlight shapes shining from multiple directions, adding a magical, whimsical element to the scene. The overall image is heartwarming and reflects a joyful family moment.</p></blockquote><p><img src="37_medieval_19.png"></p><blockquote><p>additional prompt: Keep the image seed number. The boy and girl twins are swinging a glowing red sticks in synchronized mode in the twins kinderwagen, at standing seat of dark but surrounded by splendid lights concert stadium. On their behind many fans are doing the same movement. All they are concentrated on the stage where their mother is performing.</p></blockquote><blockquote><p>additional prompt: convert one child to a boy. Let them sit in one twins Kinderwagen and wave the glowing red stick together as the audience do.</p></blockquote><blockquote><p>ChatGPT prompt: Anime style illustration, adjusting the previous scene. In the twin stroller (kinderwagen), one child is a boy and the other a girl. They are sitting together, waving a single glowing red stick in unison with the audience. The scene is set in a concert stadium, filled with the vibrant energy of a live performance. The audience around them is also waving glowing sticks, creating a unified and lively atmosphere. The focus is on the joy and excitement shared by the twins and the fans, all immersed in the concert experience.</p></blockquote><h1 id="2-중세-병사-이야기"><a href="#2-중세-병사-이야기" class="headerlink" title="2. 중세 병사 이야기"></a>2. 중세 병사 이야기</h1><ul><li>작년 말, 영혼과 몸이 분리된 것처럼 느껴진 날들이 있었습니다.</li><li>한참 매일같이 여러 장의 그림을 그리며 스트레스를 풀던 때였던지라 내 마음을 반영한 연작을 꽤 오래 그렸습니다.</li><li>약 3주에 걸쳐 총 14장의 그림으로 시리즈가 마무리된 연작을 정리합니다.</li><li>그 때 그 때 페이스북에 정리했던 당시의 심경을 기억나는 제 속마음과 함께 그대로 가져옵니다.</li></ul><h2 id="1-오전이-날아갔다-2023-11-22"><a href="#1-오전이-날아갔다-2023-11-22" class="headerlink" title="(1) 오전이 날아갔다. (2023.11.22.)"></a>(1) 오전이 날아갔다. (2023.11.22.)</h2><ul><li>순식간에 점심시간.</li><li>문서작업만 했더니 그 새 시대에 뒤쳐진 느낌이 든다.</li><li>이제는 코딩할 시간. 따라잡자.</li></ul><p><img src="37_medieval_01.png"></p><blockquote><p>Input prompt: Sephia tone photograph of a medieval solder {featured as color} armed with chain mail with leather clothes on it, pike and round wooden should. He is crouching with fear and panic in trench, as well as other soldiers {dressed as solders in world war I}. Bullet marks are clearly seen on the gunny bag behind them, altogether arrows and javelin. On the ground only dead bodies of solders are scattered, drone view.</p></blockquote><blockquote><p>ChatGPT: A sepia-toned photograph depicting a medieval soldier in color, wearing chain mail and leather clothes, holding a pike and round wooden shield. He is crouching in fear and panic in a trench alongside other soldiers dressed in World War I attire. The scene includes bullet marks on gunny bags behind them, along with arrows and javelins. The ground is scattered with the bodies of fallen soldiers, viewed from a drone perspective.</p></blockquote><ul><li>신기술, 정확히는 Azure OpenAI를 좀 공부해볼까 하던 차에 행정업무가 날아왔다.</li><li>짬짬이 YouTube에서, facebook에서 세상이 바뀌는 소리를 들으며 뛰어들 준비를 하고 있었는데</li><li>졸지에 hwp 문서를 껴안고 오전 내내 보내니 절망에 휩싸였다.</li><li>시간은 나만 빼고 흘러가고 사람들은 나만 빼고 발전하는 느낌. 무섭기까지 했다.</li></ul><ul><li><b>나무방패에 창 한 자루를 들고 1차대전 참호 속으로 떨어진 병사의 이미지가 떠올랐다.</b></li><li>얼마나 무서울까. 어디선가 쓩쓩 소리가 들리고 옆에 있는 사람이 갑자기 쓰러지는데.</li><li>의도한 건 아닌데 쓰러진 사람 한 명은 목 위가 없다.</li></ul><ul><li>이 그림을 그리며 엔딩을 정했다.</li><li><b>Azure OpenAI에서 총을 들고 있는 모습으로 그리는 그림이 마지막이다.</b></li></ul><h2 id="2-돌격-준비-2023-11-23"><a href="#2-돌격-준비-2023-11-23" class="headerlink" title="(2) 돌격 준비 (2023.11.23.)"></a>(2) 돌격 준비 (2023.11.23.)</h2><ul><li>정신은 차렸고 총 하나 주웠다.</li><li>체인메일이 무겁긴 하지만 스쳐가는 총알 정도는 막아주겠지.</li><li>총알 세 개만 잘 쏘면 된다.</li><li>체력을 끌어올리고 집중하자.</li></ul><p><img src="37_medieval_02.png"></p><blockquote><p>Add. prompt: Let the medieval soldier standing up leaning on the toy rifle, encouraging himself. he is wearing modern combat uniform over the chain mail, carefully extend his upper body over the trench, looking far, ready for assault. extreme close up to his face, landscape view, gopro.</p></blockquote><blockquote><p>ChatGPT prompt: An extreme close-up, landscape view of a medieval soldier standing up and leaning on a toy rifle, encouraging himself. He is wearing a modern combat uniform over his chain mail. The soldier is carefully extending his upper body over the trench, looking into the distance, ready for assault. The focus is on his face, with a GoPro-style perspective.</p></blockquote><ul><li>다음날에는 기를 쓰고 코딩을 했다.</li><li>그 바람에 행정업무가 밀렸지만 상관없었다. 나를 살아있게 하는 건 이 일이다.</li><li>마음이 한결 나아졌다. 그래도 이 참호에서 살아나갈 수는 있겠다는 생각이 들었다.</li><li><b>신경쓰이는 업무 일정이 세 개 있었다.</b> 그래서 총알 세 발이라고 했다.</li></ul><h2 id="3-숨이-몰아쉬어진다-2023-11-23"><a href="#3-숨이-몰아쉬어진다-2023-11-23" class="headerlink" title="(3) 숨이 몰아쉬어진다 (2023.11.23.)"></a>(3) 숨이 몰아쉬어진다 (2023.11.23.)</h2><ul><li>이번주 스케줄이 하이라이트를 향해서 간다.</li><li>과제가 하나 오늘 끝나고</li><li>교재 집필이 하나 내일 끝난다.</li><li>그 와중에 새 업무가 또 들어왔다.</li><li>쳐내는 행정업무도 아니고 온몸으로 파도를 막아서야 하는데</li><li>조금만 더 힘내자. 다 온 것 같다.</li></ul><p><img src="37_medieval_03.png"></p><blockquote><p>Add. prompt: Let the solder leaning against gunny bags in trench, eyes almost closed but slightly open, gasping, holding the rifle tight with two hands on his chest. Some soils are scattered on his face, hands and bodies. The chain mail is partly torn own. side view. Keep all other components including the image seed numbers.</p></blockquote><blockquote><p>ChatGPT prompt: A side view of the medieval soldier leaning against gunny bags in a trench. His eyes are almost closed but slightly open, appearing to be gasping, and holding a rifle tight with both hands on his chest. Soil is scattered on his face, hands, and body. The chain mail he’s wearing is partly torn. The scene maintains the same style and elements as the previous images, including the use of specified image seed numbers.</p></blockquote><ul><li><b>머리가 조금 어지러웠던 것으로 기억한다.</b></li><li>지금 하는 일 때문이 아니라 오래 전부터 쌓여 있던 하기 싫은 일, 그리고 해야 하는 일, 너무 밀려서 상대에게 미안한 일 때문에.</li></ul><h2 id="4-진창이-길다-2023-11-24"><a href="#4-진창이-길다-2023-11-24" class="headerlink" title="(4) 진창이 길다 (2023.11.24.)"></a>(4) 진창이 길다 (2023.11.24.)</h2><ul><li>총은 계속 잡고 가고 있는데 진흙에 젖은 갑옷이 무거워진다.</li><li>방패는 버렸다. 무겁기만 하고 어차피 총알을 못 막는다.</li><li>판금 헬멧이 도움이 될까 싶지만 벗을 용기가 안난다.</li><li>안 쓴 것보단 낫겠지 싶은. 플라시보에 가까운.</li></ul><p><img src="37_medieval_04.png"></p><blockquote><p>Add. prompt: Make the soldier crawl on the puddle, holding rifle in a hand tightly without helmet. Hardly breathing because his head is half sunken to the mud, trying to look forward. front view, close up. Some muds are in the joint part of the chain mail, still partially torn out.</p></blockquote><blockquote><p>ChatGPT prompt: A front view, close-up of the medieval soldier crawling on a puddle, holding a rifle tightly in one hand, without a helmet. His head is half-sunken in the mud, struggling to breathe and trying to look forward. Mud is visible in the joints of his partially torn chain mail. The scene continues the narrative from the previous images, maintaining the same style and using the specified image seed numbers.</p></blockquote><ul><li>숨을 돌리려고 YouTube를 켰다가 우연히 <b>강철부대</b> 클립을 봤다.</li><li>최고의 병사들이 타이어를 끌고 철조망 밑 물웅덩이를 기어서 통과하고 밧줄을 오르다 탈진을 했다.</li><li>타이어가 물을 먹어 체력 소진이 컸다는 아쉬움 가득한 목소리에 내가 다 아쉬웠다.</li><li>그래도 그들의 눈은 앞을 향하고 있었고, 팔과 다리는 계속 움직였다. </li><li><b>덕택에 기운을 냈다.</b></li></ul><h2 id="5-다-왔다-2023-11-24"><a href="#5-다-왔다-2023-11-24" class="headerlink" title="(5) 다 왔다 (2023.11.24.)"></a>(5) 다 왔다 (2023.11.24.)</h2><ul><li>남은 목표는 두 개.</li><li>저것들만 해치우면 집에 갈 수 있다.</li><li>시간이 늦어 어두워진 바람에 표적이 잘 안보이는 게 문제.</li><li>떨어진 체력과 추운 공기도 많이 힘겹다.</li><li>쏠 수 있을까? 손이 떨린다.</li></ul><p><img src="37_medieval_05.png"></p><blockquote><p>Add. prompt: Make the soldier hiding himself behind a bush in forest, sitting tight. He is holding the gun’s buttstock against his shoulder, watching the target {blur lights are seen far away}. With one hand on the barrel of the gun and the other on the trigger, waiting for the right moment to fire. The night is dark and calm. Pale moonlight is reflected on the gun, torn out chain mail {dirty by mud stuck on them}, tip of the spear carrying on his back, and his forehead wet by sweat. white steam comes out of his mouth, depicting cold air. some water droplets on the chain mail seems to be frozen.</p></blockquote><blockquote><p>ChatGPT prompt: The medieval soldier is hiding behind a bush in a forest, sitting tightly. He holds the buttstock of his gun against his shoulder, peering towards distant blur lights. One hand is on the barrel and the other on the trigger, poised to fire. It’s a dark, calm night with pale moonlight reflecting off his gun, the torn and mud-dirty chain mail, the tip of the spear on his back, and his sweat-wet forehead. White steam is visible from his mouth, indicating the cold air, and some water droplets on the chain mail appear to be frozen. The scene continues the narrative from the previous images, maintaining the same style and using the specified image seed numbers.</p></blockquote><ul><li>세 가지 일 중 <b>하나가 끝났다.</b></li><li>이제 두 개만 더 끝나면 된다는 생각에 기운이 났다.</li><li>숨을 고르고 집중을 했다. 시간별 단기 계획도 세웠다.</li><li>좀 지친게 문제긴 한데, 주말을 이용하면 될 것 같다.</li></ul><h2 id="6-동이-튼다-2023-11-26"><a href="#6-동이-튼다-2023-11-26" class="headerlink" title="(6) 동이 튼다 (2023.11.26.)"></a>(6) 동이 튼다 (2023.11.26.)</h2><ul><li>한 놈은 잡았다. 생각보다 큰 놈이어서 고전했다.</li><li>나도 한 대 맞았다. 중과부적이었지만 방심이 컸다.</li><li>이제 한 놈 남았는데 육신의 고통보다 두려움이 앞선다.</li><li>날이 춥다. 몸이 차가워진다.</li></ul><p><img src="37_medieval_06.png"></p><blockquote><p>Add. prompt: Let the soldier lying on his back on the field like a sleeping man, but eyes open wide and head up, gasping with pain. a little steam is visible around his body, particularly around nose, indicating the cold air, keep shutting his mouth. He is embracing the barrel of rifle with a hand and pressing the shoulder with another hand. Leather sleeves are torn out. One hand is still on the trigger, ready to shoot. a dark red liquid is flowing down between the fingers on shoulder. The light of dawn is shading on his chain mail slightly. the dew drops on his face and bodies are glittering like golden flakes, drone view.</p></blockquote><blockquote><p>ChatGPT prompt: The medieval soldier is lying on his back in a field, eyes wide open and head raised, gasping in pain. A little steam is visible around his body, especially around the nose, indicating cold air, with his mouth shut. He’s embracing the barrel of his rifle with one hand and pressing his shoulder with the other. His leather sleeves are torn, and his hand remains on the trigger, ready to shoot. Dark red liquid is flowing down between the fingers on his shoulder. The light of dawn casts a slight shade on his chain mail, and the dew drops on his face and body glitter like golden flakes. The view is from a drone perspective. The scene continues the narrative from the previous images, maintaining the same style and using the specified image seed numbers.</p></blockquote><ul><li>쉬운 줄 알았던 일에서 시간을 다 썼다.</li><li><b>주말에 둘 다 마치는 게 목적이었는데 하나는 손도 못 댔다.</b></li><li>일정이 크게 꼬였다. 체력은 소진됐다. 큰일났다.</li></ul><h2 id="7-마지막-싸움-2023-11-26"><a href="#7-마지막-싸움-2023-11-26" class="headerlink" title="(7) 마지막 싸움 (2023.11.26.)"></a>(7) 마지막 싸움 (2023.11.26.)</h2><ul><li>길을 따라 가다보니 마지막에 앞을 막은 것은 처음 보는 생명체.</li><li>부모님의 옛날 이야기에서나 보던 괴물이 길을 막고 있습니다.</li><li>고대의 망령들과 함께 길을 막고 있지만 여기를 지나가야 합니다.</li><li>미안하지만 모든 형태의 무력을 써서라도 지나가야 합니다.</li><li>나도 부귀영화를 바라는 것이 아닙니다.</li><li>휴식을 하고 싶을 뿐입니다.</li><li>구멍난 사슬 갑옷은 벗어버렸습니다.</li></ul><p><img src="37_medieval_07.png"></p><blockquote><p>Add. prompt: The soldier is standing up in thick mist {rear view, torn-out backpack and chain mail are seen, close up, his hair is tanged and wet}, grabbing the rifle with his two hands, one hand on trigger, the other hand on barrel, aiming forward. His back is a little crooked but trying to encourage himself. Far in front him a white silhouette of a gigantic creature is seen. The creature is standing on 4 feet like a mixture of rhino , cow and big elephant, but his head is incredible size. Silhouette of its furry skin looks like a thousand of knives or spheres about to pierce him. The creature’s face is not seen due to the thick mist but red light emitted from his 4 eyes are too bright to avoid. The soldier is waving the rifle to aim the creature. The chain mail is almost torn out, therefore the leather jacket inside the mail is exposed. He still carries the pike on his back. close up to the soldier.</p></blockquote><blockquote><p>ChatGPT prompt: Rear view, close-up of the medieval soldier standing up in thick mist, his hair tangled and wet. He’s grabbing the rifle with two hands, one on the trigger and the other on the barrel, aiming forward. His back is slightly crooked as he tries to muster courage. In front of him, a white silhouette of a gigantic creature is visible, standing on four feet, resembling a mix of a rhino, cow, and large elephant, with an incredibly large head. Its furry skin appears as a thousand knives or spears, poised to pierce. The creature’s face is obscured by the mist, but the bright red light emitted from its four eyes is unmistakable. The soldier is waving the rifle, aiming at the creature. His chain mail is almost torn out, revealing the leather jacket underneath. A pike is still carried on his back. The focus is closely on the soldier. The scene continues the narrative from the previous images, maintaining the same style and using the specified image seed numbers.</p></blockquote><ul><li>행정업무가 그렇다. 연구업무는 미룰 수 있어도 행정업무는 미룰 수 없다.</li><li><b>데드라인이 있고 나 혼자만 걸린게 아니라 다 같이 걸려있어서 밀리면 여럿 곤란해진다.</b></li><li>기력은 하나도 없지만 갈 수밖에 없다. 그냥 던져버리고 쉬고 싶다는 생각이 들었다.</li><li>적의 실체가 처음으로 드러난 그림인데, 너무 유치하게 표현되었다. 사실 맘에 안든다.</li></ul><h2 id="8-덫에-걸려버린-것-같다-2023-11-27"><a href="#8-덫에-걸려버린-것-같다-2023-11-27" class="headerlink" title="(8) 덫에 걸려버린 것 같다 (2023.11.27.)"></a>(8) 덫에 걸려버린 것 같다 (2023.11.27.)</h2><ul><li>답답해서 터져버릴 것 같은 마음이 드는데</li><li>지금 당장은 아무것도 할 수 있는게 없다.</li><li>우선 잠시 웅크리고 체력을 회복하자.</li><li>필요하면 자아를 나눠야될 것 같다.</li></ul><p><img src="37_medieval_08.png"></p><blockquote><p>Add. prompt: The soldier is blocked by a series of steel stakes around him. The soldier is surrounded by sharp thorn stakes around him, therefore he can’t move a step at all. Emotion of agony and psychoneurosis is revealed on his face, yelling out loud. side view.</p></blockquote><blockquote><p>ChatGPT prompt: A side view of the medieval soldier surrounded by a series of sharp thorn stakes, rendering him unable to move. His face expresses agony and psychoneurosis, as he yells out loud. The scene captures the intense emotion and the perilous situation he is in. The stakes are arranged tightly around him, emphasizing his confinement and distress. The scene continues the narrative from the previous images, maintaining the same style and using the specified image seed numbers.</p></blockquote><ul><li>몸이 힘든건 그냥 무시하면 되는데, 마음이 힘들면 일을 하기 힘들어진다.</li><li>행정업무에 치여서 계속 밀리기만 하던 새로운 기술 공부, 새 아이디어 구현이 풍선이 돼서 터질 것 같았다.</li><li>이럴 때면 <b>내가 여기 있는게 맞나</b>싶은 생각이 들어 괴롭다.</li><li><b>어디 가도 이 정도는 마찬가지겠지</b>라는 생각으로 누른다. 풍선은 더 부푼다.</li></ul><h2 id="9-힘을-내려-하지만-분심이-든다-2023-11-27"><a href="#9-힘을-내려-하지만-분심이-든다-2023-11-27" class="headerlink" title="(9) 힘을 내려 하지만 분심이 든다 (2023.11.27.)"></a>(9) 힘을 내려 하지만 분심이 든다 (2023.11.27.)</h2><ul><li>지금쯤이면 따뜻한 거실에서 가족과 함께 있을 줄 알았는데.</li><li>난 뭘 바라고 이러고 있을까.</li><li>의심은 기껏 채운 용기의 바닥에 구멍을 낸다.</li><li>옆구리에 박힌 창 끝보다 귀 끝 환청이 나를 더 분열시킨다.</li></ul><p><img src="37_medieval_09.png"></p><blockquote><p>Add. prompt: The soldier {clothes are torn into shreds, stained by dark red liquid, punctured all over the place} is surrounded by enemy {shape of fog, transparent, pointing a stake to the soldier, floating in the air, watching the solder with hostility}. He is exhausted but posing to fight, watching around, keep encouraging himself, holding a pike in one hand and a dagger on the other hand. At the same time doubt is full of his face because he recognizes that this battle would be endless and there is no reason to fight. The scene continues the narrative from the previous images, maintaining the same style and using the specified image seed numbers. Close up to the solder. The image should be photographic and cinematic, top view</p></blockquote><blockquote><p>ChatGPT prompt: Top view, close-up of the medieval soldier, his clothes torn into shreds, stained with dark red liquid, and punctured. He is surrounded by an enemy resembling a shape of fog, transparent, pointing a stake at the soldier, floating in the air, and watching him with hostility. The soldier, exhausted yet poised to fight, holds a pike in one hand and a dagger in the other, watching around and encouraging himself. Doubt is evident on his face, realizing the battle may be endless and without reason. The scene is photographic and cinematic, continuing the narrative from the previous images and maintaining the same style, using the specified image seed numbers.</p></blockquote><ul><li><b>내가 왜 이 짓을 하고 있나</b> 하는 생각에 일이 손에 안잡혔다.</li><li>집중이 안되고, 누가 자꾸 내 주위를 맴돌며 약올리는 것 같은 느낌마저 들었다.</li><li>&lt;반지의 제왕&gt;에서 프로도가 반지의 유혹에 빠지는 장면이 자꾸 떠올랐다.</li><li>그냥 다 놓고 자고 싶었다.</li></ul><h2 id="10-비가-온다-2023-11-28"><a href="#10-비가-온다-2023-11-28" class="headerlink" title="10. 비가 온다 (2023.11.28.)"></a>10. 비가 온다 (2023.11.28.)</h2><ul><li>격정적인 전투 끝에 내게 바짝 붙어있던 녀석 하나는 물리쳤다.</li><li>지켜보던 자들은 한 발 물러섰고, 때마침 쏟아지는 비에 정신이 든다.</li><li>멀리서 봤을때는 한 놈만 남은 줄 알았는데 가까이 와서 보니 그 뒤에 여럿이 숨어있다.</li><li>한 대 크게 맞으니 오히려 부담이 적어졌다.</li><li>어떻게든 되겠지 하는 생각도 든다.</li><li>가만히 서서 비를 더 맞고 싶다. 그러진 못하겠지.</li></ul><p><img src="37_medieval_10.png"></p><blockquote><p>Add. prompt: The soldier {head up, looking above with hope. the entangled hair is totally wet, stuck to the head} is standing in heavy rain, the dark red liquid staining his cloth is almost washed away. Enemies {in shape of fog} are still surrounding the solider, pointing stakes to the solder. some light spheres {as big as the solder’s fist} are floating around the soldier’s chest and head, side view.</p></blockquote><blockquote><p>Chatgpt prompt: A side view of the medieval soldier, head raised, looking up with hope. His entangled hair is completely wet, sticking to his head, as he stands in heavy rain. The dark red liquid staining his clothes is being washed away. Enemies in the shape of fog continue to surround the soldier, pointing stakes at him. Around the soldier’s chest and head, light spheres the size of his fist are floating. The scene is dramatic and vivid, continuing the narrative from the previous images and maintaining the same style, using the specified image seed numbers.</p></blockquote><ul><li>뭔가 한 대 얻어맞았다. 이제는 기억이 안나는 걸 보니 치명적인 일은 아닌가보다.</li><li>차라리 마음이 편해지면서 <b>에라 모르겠다</b> 심정이 됐다. <b>맞고 보니 별 거 아니라는 생각</b>도 들었다.</li><li>그냥 좀 쉬었다. <b>마음이 묘하게 편해졌다.</b></li></ul><h2 id="11-부러진-창을-다시-잡는다-2023-11-28"><a href="#11-부러진-창을-다시-잡는다-2023-11-28" class="headerlink" title="11. 부러진 창을 다시 잡는다 (2023.11.28.)"></a>11. 부러진 창을 다시 잡는다 (2023.11.28.)</h2><ul><li>마음은 잠이라도 한 숨 자고 싶지만 그러면 안되지.</li><li>끝나야 끝나는 싸움이다.</li><li>진창이 발목을 잡기 전에 한 녀석이라도 없애자.</li></ul><p><img src="37_medieval_11.png"></p><blockquote><p>Add. prompt: The solder {totally wet by the rain, including the entangled hair, front view} is posing assult with a broken pike, surrounded by the enemies {in shape of fog} are still surrounding the solider, pointing stakes to the solder.</p></blockquote><blockquote><p>ChatGPT prompt: Front view of the medieval soldier, completely drenched by the rain, including his entangled hair. He is posing for an assault with a broken pike. The enemies, in the shape of fog, continue to surround the soldier, pointing stakes at him. The scene captures the intensity of the moment and the soldier’s determination despite the overwhelming odds. The narrative from the previous images is maintained, with the same style and using the specified image seed numbers.</p></blockquote><ul><li>다시 일어설 정신이 들었다.</li></ul><h2 id="12-예정된-싸움이-끝났다-2023-11-30"><a href="#12-예정된-싸움이-끝났다-2023-11-30" class="headerlink" title="12. 예정된 싸움이 끝났다 (2023.11.30.)"></a>12. 예정된 싸움이 끝났다 (2023.11.30.)</h2><ul><li>다행히 살아남았다.</li><li>널브러진 시체 사이에 내가 누워있어도 이상하지 않다.</li><li>팔이 떨어져나갈 것 같다는 생각이 비로소 든다.</li><li>한숨 돌릴 수 있다는 생각에 눈이 감기고 다리가 풀린다.</li><li>하지만 여전히 저 안개 너머에서 새 적이 오는 소리가 들린다.</li><li>어디 누울 곳도 없다. 하나도 개운하지 않다.</li><li>차라리 아까까지 싸울 때가 마음이 더 편한 것 같다.</li></ul><p><img src="37_medieval_12.png"></p><blockquote><p>Add. prompt: The soldier {wearing the same shirt and pants as previous image, close up to his face. holding broken pike on one hand and torn out chains on the other.} is standing on top of many sleeping bodies of the enemy {sunken in dark red liquid}. Many stakes are put on the land, between the enemies. He is looking up, in tension of another threaten, a little steam is visible around his body, particularly around nose, indicating the cold air. The rain stopped, and the sky is clear. Still thick fog is on the ground, therefore the bodies of enemies are blurred. The image should be photographic and cinematic, drone view.</p></blockquote><blockquote><p>ChatGPT prompt: Close-up of the medieval soldier’s face, wearing the same shirt and pants as in the previous image. He holds a broken pike in one hand and torn chains in the other. The soldier stands atop numerous sleeping bodies of the enemy, sunken in dark red liquid. Stakes are scattered across the land among the enemies. He looks up, tensely anticipating another threat, with a little steam visible around his body, especially around his nose, indicating cold air. The rain has stopped, and the sky is clear, but thick fog covers the ground, blurring the bodies of the enemies. The image is photographic and cinematic, captured from a drone’s perspective, continuing the narrative from the previous images and maintaining the same style, using the specified image seed numbers.</p></blockquote><ul><li>그랬다.</li></ul><h2 id="번외-기지로-돌아가-총을-잡았다-2023-12-13"><a href="#번외-기지로-돌아가-총을-잡았다-2023-12-13" class="headerlink" title="번외. 기지로 돌아가 총을 잡았다 (2023.12.13.)"></a>번외. 기지로 돌아가 총을 잡았다 (2023.12.13.)</h2><p><img src="37_medieval_13.png"></p><blockquote><p>Add. prompt: The medieval soldier is standing next to a modern solder at the bootcamp of modern army. The solder is wearing medieval linen shirts. The soldier has a serious face, looking at the other soldier nearby. The modern soldier {wearing modern military look} is instructing him how to assemble M16 assault rifle. The image should be photographic and cinematic, side view. Use the previous images as a base. return the final prompt and image seed number.</p></blockquote><blockquote><p>ChatGPT prompt: A side view, photographic and cinematic image of the medieval soldier standing next to a modern soldier at a modern army bootcamp. The medieval soldier, wearing medieval linen shirts, has a serious expression as he looks at the modern soldier nearby. The modern soldier, dressed in contemporary military attire, is instructing the medieval soldier on how to assemble an M16 assault rifle. The scene blends the historical and modern elements, continuing the narrative from the previous images and maintaining the same style, using the specified image seed numbers.</p></blockquote><ul><li>SNS에 올리지 않았던 그림이다.</li><li>연말 성과발표 등의 일정이 있었다. 이빨이 흔들릴 만큼 호되게 앓기도 했다. </li><li>처음으로 <b>아파서 일 못하겠다</b>는 소리도 했지만 끌려가서 일정을 소화하고 왔다.</li><li>다행히 저녁 <b>Microsoft MVP GenAI</b> 세미나에 참석할 수 있었다</li><li>드디어 Azure OpenAI를 조금이나마 써보니 마음이 편해졌다. </li><li><b>중세에서 던져졌지만 돌격소총 한 정에 의지할 수 있게 된 느낌이 들었다.</b></li></ul><h2 id="13-새로운-무기-2023-12-13"><a href="#13-새로운-무기-2023-12-13" class="headerlink" title="13. 새로운 무기  (2023.12.13.)"></a>13. 새로운 무기  (2023.12.13.)</h2><ul><li>여전히 낡은 셔츠를 입고 있지만 새 무기와 동료를 얻었다.</li><li>전쟁터를 벗어나지는 못했지만 생존 확률은 높여주겠지.</li></ul><p><img src="37_medieval_14.jpg"></p><blockquote><p>Input prompt: a medieval soldier with a very short hair, wearing medieval linen shirt, holding 21C military suit with a hand standing on bootcamp, slightly smiling but sullen face, looking front. around him fully equipped 21C US troops are gathering around. photographic, shallow depth of focus.</p></blockquote><ul><li>사실 이 그림이 연작의 마지막이 될 줄 몰랐다. 연작의 마지막으로 준비해둔 게 위 그림이었는데 번외가 됐다.</li><li><b>Azure OpenAI 실습</b>에서 애달이(Azure DALL.E3)까지 사용할 줄 몰랐기 때문이다.</li><li>애초 Azure OpenAI를 못써서 받은 스트레스였던만큼 기대 이상으로 마무리가 됐다.</li></ul><ul><li>도와주시고 지지해주신 모든 분들께 감사드립니다.</li></ul>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/General/">General</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/openai/">openai</category>
      
      <category domain="https://jehyunlee.github.io/tags/chatgpt/">chatgpt</category>
      
      <category domain="https://jehyunlee.github.io/tags/dalle/">dalle</category>
      
      
    </item>
    
    <item>
      <title>DALL.E로 그리는 &quot;그리는 손&quot; (M.C Escher)</title>
      <link>https://jehyunlee.github.io/2024/01/04/General-36-drawinghand/</link>
      <guid>https://jehyunlee.github.io/2024/01/04/General-36-drawinghand/</guid>
      <pubDate>Thu, 04 Jan 2024 04:23:00 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/M._C._Escher&quot;&gt;wikipedia: M.C. Escher&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Dr</description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p><a href="https://en.wikipedia.org/wiki/M._C._Escher">wikipedia: M.C. Escher</a><br><a href="https://en.wikipedia.org/wiki/Drawing_Hands">wikipedia: Drawing Hands</a></p></blockquote><ul><li>제가 좋아하는 화가 중 M. C. Escher가 있습니다. (1898-1972)</li><li>공간을 기하학적으로 분할하는 엄격함과 동시에 그림과 실재를 넘나드는 자유로움이 느껴집니다.</li><li>곡면에 비친 그림을 깊이 탐구하기도 했으며 무한히 반복되는 공간을 그렸습니다.</li><li>푸앵카레와 프랙탈을 비롯한 현대 수학 및 컴퓨터 그래픽스와 밀접하게 맞닿아 있습니다.</li></ul><h1 id="1-M-C-Escher"><a href="#1-M-C-Escher" class="headerlink" title="1. M. C. Escher"></a>1. M. C. Escher</h1><ul><li>이름은 낯설 지 몰라도 그림은 한 번씩 보셨을 겁니다.</li><li>미술책에 실리기도 했지만 수학이나 착시에 대한 책에 실리는 경우도 많습니다.</li></ul><p><img src="36_drawinghand_02.jpg" alt="M. C. Escher, &quot;Hand with Reflecting Sphere&quot;, Lithography (1935)"></p><p><img src="36_drawinghand_03.jpg" alt="M. C. Escher, &quot;Reptiles&quot;, Lithography (1943)"></p><p><img src="36_drawinghand_01.jpg" alt="M. C. Escher, &quot;Relativity&quot;, Lithography (1953)"></p><p><img src="36_drawinghand_05.jpg" alt="M. C. Escher, &quot;Print Gallery&quot;, Lithography (1956)"></p><p><img src="36_drawinghand_04.jpg" alt="M. C. Escher, &quot;Circle Limit IV&quot;, Lithography (1960)"></p><ul><li>공간을 연구한 예술가이지만 따뜻함이 느껴져서 좋아하는 그림이 있습니다.</li><li>1948년에 만들어진 <b>“drawing hands”</b>라는 작품입니다.</li><li>그림이 종이에서 튀어나와 있는 초현실적인 표현이 재밌기도 하지만,</li><li>두 손이 서로를 그려주는 모습에서 <b>서로를 향한 애정, 지지 발전</b>을 느낍니다.</li></ul><p><img src="36_drawinghand_06.jpg" alt="M. C. Escher, &quot;Drawing hands&quot;, Lithography (1948)"></p><ul><li>30년 전 고등학교 시절 학교 축제에 이를 본뜬 그림을 제출하기도 할 만큼 애정이 깊습니다.</li><li>당시 치기 어린 마음에 한쪽 손에 지우개를 들려줬던 기억이 납니다.</li><li>이 글에서는 번역된 이름인 <b>“그리는 손”</b>이라고 부르겠습니다.</li></ul><h1 id="2-AI로-그리는-Drawing-Hands"><a href="#2-AI로-그리는-Drawing-Hands" class="headerlink" title="2. AI로 그리는 Drawing Hands"></a>2. AI로 그리는 Drawing Hands</h1><ul><li>DALL.E2 시절부터 이 그림을 재현하고자 계속 노력했습니다.</li><li>DALL.E3 성능이 많이 좋아졌고, ChatGPT에서 연속적으로 수정할 수도 있기 때문에 시도해봤습니다. </li><li>결론부터 말씀드리면 <b>순탄치 않았습니다.</b></li><li>원하는 그림을 만들기 위한 노동의 과정을 드러내는 글입니다.</li></ul><h2 id="2-1-손-그리기"><a href="#2-1-손-그리기" class="headerlink" title="2.1. 손 그리기"></a>2.1. 손 그리기</h2><ul><li>얼마 전까지만 해도 <b>AI가 가장 못 그리는 대표적인 대상</b>이 손이었습니다.</li><li>열 개나 되는 손가락은 자세와 각도에 따라 갯수가 달라지고,</li><li>왼손과 오른손의 관절은 다양한 변형을 유발해 사람도 어렵습니다.</li><li>그러나 DALL.E3와 Midjourney v4 이후 크게 개선되어 지금은 믿을 만 합니다.</li><li>원작을 조금 바꾸어<b>스케치북에 연필로 그려진 러프 스케치</b>를 지시합니다.</li></ul><blockquote><p>“two hands drown as rough sketch on sketch book.”</p></blockquote><p><img src="36_drawinghand_07.png"></p><ul><li>DALL.E3는 프롬프트가 충분히 입력되지 않으면 나머지를 스스로 상상해서 메웁니다.</li><li>Copilot (舊 Bing Chat)에서도 같은 일이 일어난다고 추측됩니다.</li><li>이번 그림에서는 물에 빠지는 손을 누군가 잡으려는 듯한 이미지가 생겼습니다.</li><li>그림을 클릭해서 확인하면 전체 프롬프트가 이와 같이 생성되어 있습니다.</li></ul><blockquote><p>“A rough sketch of two hands in the act of drowning, depicted on a sketchbook page. The hands are drawn with expressive lines and shading, capturing a sense of urgency and struggle. The sketchbook has a textured paper, and the sketch is done in pencil, showcasing the rawness and immediacy of the drawing. The background of the image is the rest of the sketchbook page, showing the rough texture and edges of the paper.”</p></blockquote><ul><li><b>조금 더 자세하게 프롬프트를 입력합니다.</b></li><li>제가 오른손잡이인 오른손 두 개가 하나는 위에서 아래로, 또 다른 하나는 아래에서 위로 손을 뻗어 서로 그리는 모습을 그리고자 합니다.</li><li>그 전에, <b>오른손</b>을 인식하는지 확인합니다.</li></ul><blockquote><p>“two right hands drown as rough sketch on sketch book.”</p></blockquote><p><img src="36_drawinghand_08.png"></p><ul><li>손 두 개를 그리라고 했는데 왼손과 오른손을 그립니다.</li><li>여러 차례 반복적으로 실험했으나 <b>오른손</b>이나 <b>왼손</b> 중 특정 한쪽만 지정하는 것은 불가능해 보입니다.</li><li>간혹 확률적으로 같은 쪽 손이 둘 나올 때가 있기는 합니다.</li></ul><ul><li>초기 설정 탓으로 물에 빠진 사람 손이 되고 있습니다.</li><li>새 창을 열고 새 그림을 그립니다.</li></ul><h2 id="2-2-연속-프롬프트-종이-위에-그려진-손-그리기"><a href="#2-2-연속-프롬프트-종이-위에-그려진-손-그리기" class="headerlink" title="2.2. 연속 프롬프트 - 종이 위에 그려진 손 그리기"></a>2.2. 연속 프롬프트 - 종이 위에 그려진 손 그리기</h2><ul><li>프롬프트를 제대로 다시 입력합니다.</li></ul><blockquote><p>“Two hands drawing each other by pencil on sketchbook, top view”</p></blockquote><p><img src="36_drawinghand_09.png"></p><ul><li>종이에 그려진 손들이 등장하지만 영 어지럽습니다.</li><li>실제 사람 손까지 등장하고 있습니다. 이를 제거하기 위해 프롬프트를 추가합니다.</li><li>이번 예제에서는 <b>연속으로 프롬프트를 입력</b>하며 그림을 수정하는 연습을 합니다.</li></ul><ul><li>(적어도 현재의) 달리는 <b>부정어를 인식하지 못합니다.</b></li><li>사람 손을 빼라는 명령 대신 그림 손만 그리라는 식으로 긍정어로 바꾸어 표현해야 합니다.</li><li>OpenAI가 의도한 바는 아니겠지만 같은 생각도 긍정적으로 하게 되는 효과가 있습니다. :)</li></ul><blockquote><p>“Redraw. Drawn hands only. A little bit rough sketcj would better.”</p></blockquote><p><img src="36_drawinghand_10.png"></p><ul><li>여전히 사람 손이 있습니다.</li><li>ChatGPT prompt를 확인했더니 다음과 같습니다.</li></ul><blockquote><p>“A close-up top view of a sketchbook, focusing solely on two pencil drawings of hands drawing each other. The drawing style is slightly rough and sketchy, emphasizing the process of creation. The hands are intricately sketched with pencil, capturing the dynamic motion of drawing. The left hand in the drawing appears to be sketching the right hand, and vice versa, creating an intriguing visual effect. The sketchbook pages are textured, enhancing the raw and artistic feel of the sketch.”</p></blockquote><ul><li>다시 한번 시도합니다.</li></ul><blockquote><p>“Make it sure that only drawn hands are visible, drawing each other.”</p></blockquote><p><img src="36_drawinghand_11.png"></p><ul><li>드디어 사람 손이 빠졌습니다.</li><li>그렇지만 원하는 구도는 계속 잘 나오지 않습니다. &lt;4/4&gt;라는 재시도 횟수가 증명합니다.</li><li>그나마 조금 비슷한 상태에서 ChatGPT prompt를 확인합니다.</li></ul><blockquote><p>“A close-up of a rough pencil sketch showing only two hands drawing each other, with no other elements visible. The sketch is on a plain white background, emphasizing the hands. The drawing style is intentionally rough and sketchy, capturing the dynamic and unfinished nature of the artwork. The intricacy of the fingers and the interaction between the two hands as they draw each other creates a captivating and paradoxical visual effect.”</p></blockquote><ul><li>딱히 크게 달라진 건 없는 것 같습니다.</li><li>희망의 끈을 놓지 않고 <b>오른손 두 개만</b>을 강조합니다.</li></ul><blockquote><p>“Redraw. Both hands should be right hands. One is heading downwards while the other upwards.”</p></blockquote><p><img src="36_drawinghand_12.png"></p><ul><li>처음으로 같은 방향 손이 두 개 나왔습니다.</li><li>그런데 <b>왼손 두 개</b>입니다.</li><li>이게 어딥니까. 일단 Gen ID와 Seed Number를 출력해 기록해 놓습니다.</li></ul><ul><li>구도 전환을 시도합니다. </li><li>각도가 너무 평면이라 원작의 입체감이 잘 드러나지 않습니다.</li><li><b>각도를 조금 틀어보라고 지시합니다.</b></li></ul><blockquote><p>“Let’s work with the iamge. Keep all components including the image seed number and plot. Make the view little bit tilted.”</p></blockquote><p><img src="36_drawinghand_13.png"></p><ul><li>마찬가지입니다.</li><li>이번에는 원작처럼 <b>종이의 경계선을 그림에 함께 담아봅니다.</b></li></ul><blockquote><p>“Boundary of the sketchbook should be seen, as photography realistic.”</p></blockquote><p><img src="36_drawinghand_14.png"></p><ul><li>스케치북이 드러나니 화면이 분리된 느낌을 주면서 그림의 목적에 더 가까워집니다.</li><li>사람의 손이 등장하긴 했지만, <b>그림 속 손이 사람과 같은 연필을 잡고 있어 함께 작업하는 느낌을 줍니다.</b></li><li>그러나 우리가 원하는 것은 사람 손이 등장하지 않고, 그림 두 개가 서로를 그리는 모습입니다.</li><li>프롬프트엔 문제가 없는지 이미지를 클릭해서 <b>GPT가 만든 프롬프트를 확인</b>합니다.</li></ul><p><img src="36_drawinghand_15.png"></p><blockquote><p>“A close-up of a sketchbook page featuring a rough pencil sketch of two right hands drawing each other, with the view slightly tilted. The sketchbook boundary is visible, adding a photography-realistic touch. One hand is oriented downwards while the other is upwards, maintaining the paradoxical composition. The drawing style is rough and sketchy, emphasizing the dynamic nature of the artwork. The fingers are intricately drawn, showcasing the interaction between the two hands. The background is the sketchbook page.”</p></blockquote><ul><li><b>프롬프트는 고칠 것이 없다</b>고 판단됩니다.</li><li>그러면 남은 건 image seed number입니다. 무한 재생성에 들어갑니다.</li></ul><blockquote><p>“Redraw”<br>“Redraw”<br>“Redraw”<br>…</p></blockquote><table><tr><td><img src="36_redraw (1).png" width="320px" height="180px" align="center"></td><td><img src="36_redraw (2).png" width="320px" height="180px" align="center"></td><td><img src="36_redraw (3).png" width="320px" height="180px" align="center"></td><td><img src="36_redraw (4).png" width="320px" height="180px" align="center"></td><td><img src="36_redraw (5).png" width="320px" height="180px" align="center"></td><td><img src="36_redraw (6).png" width="320px" height="180px" align="center"></td></tr><tr><td><img src="36_redraw (7).png" width="320px" height="180px" align="center"></td><td><img src="36_redraw (8).png" width="320px" height="180px" align="center"></td><td><img src="36_redraw (9).png" width="320px" height="180px" align="center"></td><td><img src="36_redraw (10).png" width="320px" height="180px" align="center"></td><td><img src="36_redraw (11).png" width="320px" height="180px" align="center"></td><td><img src="36_redraw (12).png" width="320px" height="180px" align="center"></td></tr><tr><td><img src="36_redraw (13).png" width="320px" height="180px" align="center"></td><td><img src="36_redraw (14).png" width="320px" height="180px" align="center"></td><td><img src="36_redraw (15).png" width="320px" height="180px" align="center"></td><td><img src="36_redraw (16).png" width="320px" height="180px" align="center"></td><td><img src="36_redraw (17).png" width="320px" height="180px" align="center"></td><td><img src="36_redraw (18).png" width="320px" height="180px" align="center"></td></tr><tr><td><img src="36_redraw (19).png" width="320px" height="180px" align="center"></td><td><img src="36_redraw (20).png" width="320px" height="180px" align="center"></td><td><img src="36_redraw (21).png" width="320px" height="180px" align="center"></td><td><img src="36_redraw (22).png" width="320px" height="180px" align="center"></td><td><img src="36_redraw (23).png" width="320px" height="180px" align="center"></td><td><img src="36_redraw (24).png" width="320px" height="180px" align="center"></td></tr><tr><td><img src="36_redraw (25).png" width="320px" height="180px" align="center"></td><td><img src="36_redraw (26).png" width="320px" height="180px" align="center"></td><td><img src="36_redraw (27).png" width="320px" height="180px" align="center"></td><td><img src="36_redraw (28).png" width="320px" height="180px" align="center"></td><td><img src="36_redraw (29).png" width="320px" height="180px" align="center"></td><td><img src="36_redraw (30).png" width="320px" height="180px" align="center"></td></tr><tr><td><img src="36_redraw (31).png" width="320px" height="180px" align="center"></td><td><img src="36_redraw (32).png" width="320px" height="180px" align="center"></td><td><img src="36_redraw (33).png" width="320px" height="180px" align="center"></td><td><img src="36_redraw (34).png" width="320px" height="180px" align="center"></td><td><img src="36_redraw (35).png" width="320px" height="180px" align="center"></td><td><img src="36_redraw (36).png" width="320px" height="180px" align="center"></td></tr><tr><td><img src="36_redraw (37).png" width="320px" height="180px" align="center"></td><td><img src="36_redraw (38).png" width="320px" height="180px" align="center"></td><td><img src="36_redraw (39).png" width="320px" height="180px" align="center"></td><td><img src="36_redraw (40).png" width="320px" height="180px" align="center"></td><td><img src="36_redraw (41).png" width="320px" height="180px" align="center"></td><td><img src="36_redraw (42).png" width="320px" height="180px" align="center"></td></tr><tr><td><img src="36_redraw (43).png" width="320px" height="180px" align="center"></td><td><img src="36_redraw (44).png" width="320px" height="180px" align="center"></td><td><img src="36_redraw (45).png" width="320px" height="180px" align="center"></td><td><img src="36_redraw (46).png" width="320px" height="180px" align="center"></td><td><img src="36_redraw (47).png" width="320px" height="180px" align="center"></td><td><img src="36_redraw (48).png" width="320px" height="180px" align="center"></td></tr><tr><td><img src="36_redraw (49).png" width="320px" height="180px" align="center"></td><td><img src="36_redraw (50).png" width="320px" height="180px" align="center"></td><td><img src="36_redraw (51).png" width="320px" height="180px" align="center"></td><td><img src="36_redraw (52).png" width="320px" height="180px" align="center"></td><td><img src="36_redraw (53).png" width="320px" height="180px" align="center"></td><td><img src="36_redraw (54).png" width="320px" height="180px" align="center"></td></tr></table><ul><li>중간에 <b>잘 되어간다 싶을 때</b>쯤 이런 프롬프트를 넣어주기도 합니다.</li></ul><blockquote><p>“Good. For both images, keep the current image seed numbers and add slight variation to focus on the actions of the two hands: drawing each other’s wrist.”</p></blockquote><h1 id="2-3-그럼에도-불구하고"><a href="#2-3-그럼에도-불구하고" class="headerlink" title="2.3. 그럼에도 불구하고"></a>2.3. 그럼에도 불구하고</h1><ul><li><b>Escher의 그림이 재현되지는 않았습니다.</b></li><li>애초에 옷 소매를 그리라는 말도 입력하지 않았고, 기법도 달랐구요.</li><li>똑같이 그릴 생각은 없었지만 구도만큼은 재현하고 싶었는데, 조금 아쉽습니다.</li><li>근본적으로 <b>왼쪽 오른쪽 손이 마주보는 구도</b>가 그려지는 데 문제가 있었고, 이 글에 쓴 것 외에도 프롬프트를 여러 차례 바꿔봤지만 별 소용이 없었습니다.</li><li>현 시점 DALL.E3의 한계로 판단됩니다.</li></ul><ul><li><p><b>그럼에도 불구하고,</b> 그 바람에 원작과 다른 느낌이 나왔습니다.</p></li><li><p>원작은 두 손이 순환하는 느낌이 강한데 비해</p></li><li><p>달리가 그려낸 그림은 두 손이 대화 또는 협업하는 느낌이 강합니다.<br><br><br></p></li><li><p>이 그림은 성인 남성 둘이 <b>힘을 합해 아이를 키워내는 느낌</b>이고</p></li></ul><img src="36_redraw (55).png"><br><br><ul><li>이 그림은 오른쪽이 왼쪽에게 뭔가 <b>차분하면서도 열정적으로 설명</b>하는 느낌입니다.</li></ul><img src="36_redraw (48).png"><br><br><ul><li>군중에 둘러싸여 <b>서로를 지적하며 한치의 양보도 없는 토론</b>을 하는 느낌도 있습니다.</li></ul><img src="36_redraw (45).png"><br><br><ul><li>여럿이 힘을 합해 <b>뭔가를 만들어가는 느낌</b>의 그림도 있습니다.</li></ul><img src="36_redraw (31).png"><br><br><ul><li>이 그림은 <b>가르치는 스승과 배우는 제자</b>로 보입니다.</li></ul><img src="36_redraw (10).png"><br><br><ul><li>이 그림이 제법 마음에 듭니다.</li><li>대화를 나누는 가운데 <b>서로를 조심스럽게 살피며 배려하는 느낌</b>이 들어서입니다.</li><li>연필 반대편 끝이 다른 그림처럼 종이 밖으로 튀어나와서 비현실감을 더했으면 정말 좋았겠다 싶습니다.</li></ul><img src="36_redraw (37).png"><br><br><ul><li><b>가장 마음에 드는 것</b>은 이 그림입니다.</li><li>왼쪽 손이 다른 손들에게 지지를 받는 가운데 <b>연필을 잠시 내려놓고 오른손의 가필을 조용히 받고 있습니다.</b></li><li>뭔가 한 마디 하려고 몰려든 연필들도 <b>조용히 자기 차례를 기다리는 모습</b>입니다.</li><li>이유는 설명할 수 없지만 번잡한 가운데 차분한 느낌이 들어서 좋습니다.</li></ul><img src="36_redraw (47).png"><h1 id="3-마치며"><a href="#3-마치며" class="headerlink" title="3. 마치며"></a>3. 마치며</h1><ul><li><a href="https://jehyunlee.github.io/2024/01/01/General-35-genAIdraw/">지난 글</a>에서 언급했듯 저는 AI 그림을 <b>인간과 AI의 협업</b>으로 봅니다.</li><li>현업에서 일을 할 때도 지시받은 대로만 해야 하는 상황을 매우 갑갑해하며, 지시자가 상상하지 못했던 더 좋은 답을 주려고 노력합니다.</li><li>마찬가지로 AI로 작업할 때도 제가 의도하지 않았던 느낌이나 연출이 AI에 의해 들어가는 것을 즐깁니다.</li><li>아직 아쉬움이 있지만 DALL.E 덕택에 다시 한번 즐거운 모험을 했습니다.</li></ul><ul><li><b>DALL.E에게 자화상을 그려보라고 했습니다.</b></li><li>컨셉에 충실한 모습을 그리네요. 귀엽습니다. :)</li></ul><blockquote><p>input prompt: “draw your self portrait”</p></blockquote><blockquote><p>ChatGPT prompt: “A futuristic, abstract representation of an AI named DALL·E. The central focus is a sleek, metallic sphere representing the AI’s ‘brain’, with glowing blue circuits and patterns. Surrounding this are numerous holographic screens, displaying lines of code and abstract data visualizations in a variety of colors. The background is a dark, digital landscape, filled with neon lines and geometric shapes, giving a sense of a vast, digital world. The entire scene conveys a sense of advanced technology and intelligence.”</p></blockquote><p><img src="36_drawinghand_17.png"></p>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/General/">General</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/openai/">openai</category>
      
      <category domain="https://jehyunlee.github.io/tags/chatgpt/">chatgpt</category>
      
      <category domain="https://jehyunlee.github.io/tags/dalle/">dalle</category>
      
      <category domain="https://jehyunlee.github.io/tags/escher/">escher</category>
      
      
    </item>
    
    <item>
      <title>AI 그림 vs 손그림</title>
      <link>https://jehyunlee.github.io/2024/01/01/General-35-genAIdraw/</link>
      <guid>https://jehyunlee.github.io/2024/01/01/General-35-genAIdraw/</guid>
      <pubDate>Mon, 01 Jan 2024 11:19:00 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;최초로 일반에 열린 DALL.E2가 공개된 지 얼마 지나지 않아 사용을 시작했습니다.&lt;/li&gt;
&lt;li&gt;Midjourney도 잠시 써봤다가, bing image creator에서 한참을 그리다가,&lt;/li&gt;
&lt;li&gt;ideogram에서 글자</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>최초로 일반에 열린 DALL.E2가 공개된 지 얼마 지나지 않아 사용을 시작했습니다.</li><li>Midjourney도 잠시 써봤다가, bing image creator에서 한참을 그리다가,</li><li>ideogram에서 글자도 쓰다가 요즘은 ChatGPT + DALL.E3에 정착했습니다.</li><li>그림을 보는 것만큼 그리는 것을 좋아하는 일반인 입장에서 생성형 AI를 쓸 때의 느낌을 남겨봅니다.</li></ul><h1 id="1-그림을-좋아합니다"><a href="#1-그림을-좋아합니다" class="headerlink" title="1. 그림을 좋아합니다."></a>1. 그림을 좋아합니다.</h1><ul><li>어려서부터 집에는 그림책이 많았습니다.</li><li>그 중에서도 전 세계 주요 미술관 전집이 있어 어려서부터 책장을 넘기며 놀았습니다.</li><li>밖에 나가 놀기보다 자리에 앉아 노는 성향이 더해져 <b>자연스럽게 그림이 취미가 되었습니다.</b> </li></ul><p><img src="35_genAIdraw_03.jpg" alt="1997.05.20. 레오나르도 다빈치 자화상 모작. 연습장에 자동연필"></p><ul><li>내 그림으로 인해 친구들이 깔깔거리며 웃으면 그것도 좋았습니다.</li><li>정식으로 그림을 그리기보다 <b>문제집 한 귀퉁이나 이면지에 끄적인 것이 대부분입니다.</b></li><li>그림을 제대로 배운 적도 없었기 때문에 스스로 그린 그림을 <b>낙서</b>라고 불렀습니다.</li></ul><p><img src="35_genAIdraw_04.png" alt="2010.03.18. 無題. 이면지에 자동연필"></p><ul><li>스마트폰이 나온 이후 그림을 그리기 더 좋아졌습니다.</li><li>전철이든 버스든 그림을 끊기지 않고 계속 그릴 수 있었고 채색이 자유로워졌기 때문입니다.</li><li>크리스마스처럼 그림을 보내야 하는 시즌엔 더 즐거웠습니다.</li></ul><p><img src="35_genAIdraw_13.png" alt="2014.12.25. 메리 크리스마스. Adobe Sketchbook @Galaxy Note2"></p><ul><li><b>누군가에게 말하기 힘든 기분을 남몰래 그림에 담는 횟수가 늘었습니다.</b></li><li>아래 그림에 담긴 좌절감과 절망감은 저만 알고 있습니다.</li></ul><p><img src="35_genAIdraw_02.png" alt="2014.10.25. 가을 조각. Adobe Sketchbook @Galaxy Note2"></p><ul><li>한 번에 과감하게 그리지 못하고 수정을 많이 합니다.</li><li>그러다 보니 매번 스케치북이 물을 먹어 구멍이 뚫려서 중학교 미술선생님으로부터 이런 말씀도 들었습니다.</li><li><b>“제현이는 아이디어는 좋은데 색칠하다가 망쳐”</b></li><li>아무리 수정을 해도 문제가 없는 스마트폰 그림은 그 자체로 자유로 다가왔고</li><li>처음엔 여러 레이어를 겹쳐 그리다 나중에는 웬만하면 한 레이어에서 그렸습니다.</li><li><b>레이어에 맡기고 게을러지는 자신을 발견한 후 단행한, 연습의 일환이었습니다.</b></li></ul><h1 id="2-Generative-AI"><a href="#2-Generative-AI" class="headerlink" title="2. Generative AI"></a>2. Generative AI</h1><blockquote><p><a href="https://openai.com/research/dall-e">OpenAI, DALL·E: Creating images from text</a></p></blockquote><ul><li>2021년 1월 OpenAI가 DALL.E를 공개했을 때 충격을 받았습니다.</li><li>학습의 결과물이라고 보기에 <b>AI의 창의성</b>이 놀라웠습니다.</li><li>마침 <b>창작은 기존 지식의 조합</b>이라고 믿고 있었기 때문에 자연스럽게 받아들일 수 있었습니다.</li></ul><p><img src="35_genAIdraw_05.png" alt="2021.01.05. 아보카도 모양 의자, DALL.E1"></p><blockquote><p>“An armchair in the shape of an avocado”</p></blockquote><ul><li>DALL.E2가 사용권이 열리자 마자 기쁜 마음으로 여러 그림을 그렸습니다.</li><li>거부감따위 없었고, 손그림에서 폰그림으로 이어진 <b>도구의 연장선</b>이라는 생각.</li><li>그리고 그림을 그리고 싶어도 시간이 너무 들어서 그리기 어려울 때가 있었습니다만</li><li><b>시간의 제약이 사라졌다는 즐거움</b>이 매우 컸습니다.</li><li>그리고 이 생각은 지금도 마찬가지입니다.</li></ul><p><img src="35_genAIdraw_06.jpg" alt="2022.07.19. 고래 모양 열쇠고리, DALL.E2"></p><blockquote><p>“a whale-shaped metal keyring on wooden table, 3D art”</p></blockquote><ul><li><b>이상한 변호사 우영우</b> 오프닝의 고래 열쇠고리가 맘에 들어서 순식간에 그리기도 했습니다.</li><li>예전 같으면 머리 속에만 여러 이미지가 떠다니다가 결국 못 그리고 사라졌을 일입니다.</li><li><b>midjourney</b>에도 강한 매력을 느꼈습니다.</li><li>같은 프롬프트를 입력해도 DALL.E보다 더 멋진 그림이 만들어졌고, 독특한 스타일에 매력을 느꼈습니다.</li></ul><table><tr><td><img src="35_genAIdraw_07.jpg" width="400px" height="400px" align="right"></td><td><img src="35_genAIdraw_08.jpg" width="400px" height="400px" align="left"></td></tr><tr><td><img src="35_genAIdraw_09.jpg" width="400px" height="400px" align="right"></td><td><img src="35_genAIdraw_10.jpg" width="400px" height="400px" align="left"></td></tr><caption>2022.07.27. 자화상, Midjourney</caption></table><blockquote><p>“a black pegasus of which white bones are exposed.”</p></blockquote><ul><li>생성AI로 그림을 그리며 즐거워하는 건 저 뿐만은 아니었습니다.</li><li>딱히 수고를 들이지 않아도 생성AI로 만든 그림들을 쉽게 찾아볼 수 있었습니다.</li><li>대부분 <b>아름다운 여인</b>이나 <b>고흐의 화풍을 따라한 그림</b>이었는데 비슷한 그림들이 너무 많다보니 피로감이 몰려왔습니다.</li><li>남들이 다 하면 왠지 하기 싫어서 베스트셀러도 읽지 않는 성격입니다.</li><li><b>비슷한 그림을 그린다면 내 그림이 존재할 이유가 없다</b>는 생각에 의도적으로 다른 그림들을 그렸습니다.</li></ul><p><img src="35_genAIdraw_11.jpg" alt="2022.09.03. 산길을 가는 승려, DALL.E2"></p><blockquote><p>“a photo of a medieval wanderer entering into a thick forest along a tracking road”</p></blockquote><p><img src="35_genAIdraw_12.jpg" alt="2022.12.28. 지금 내가 하고 싶은 것, Midjourney"></p><blockquote><p>“an artist, standing in front of a big monitor as huge as wall, painting the wall with various colors, holding a brush on his right hand, view from his back”</p></blockquote><p><img src="35_genAIdraw_59.jpg" alt="2023.05.15. 청개구리 심보, bing chat"></p><blockquote><ol><li>“draw a man, not photo-realistic, holding a brush on his right hand upwards, on top of the mountain, looking down the land below.”</li><li>“desaturate image, as a blue tone, the man should be dark while the sky and land should be bright, as if the light comes from the front.”</li><li>“his right hand needs to be upward, holding a brush towards the sky.”</li></ol></blockquote><ul><li>남성의 뒷모습이 많습니다.</li><li>Stable Diffusion을 중심으로 여성을 집중적으로 그리는 것에 대한 반감이 드러났고</li><li>제가 주로 쓰던 DALL.E가 사람 얼굴을 제대로 그리지 못했기 때문입니다.</li><li><b>머리 속에 떠오른 이미지를 옮기려는 노력</b>을 많이 했습니다.</li><li>그 결과 프롬프트가 조금씩 길어졌습니다.</li></ul><h1 id="3-AI와의-협업"><a href="#3-AI와의-협업" class="headerlink" title="3. AI와의 협업"></a>3. AI와의 협업</h1><blockquote><p><a href="https://github.com/lllyasviel/ControlNet">ControlNet</a><br><a href="https://l.facebook.com/l.php?u=https://huggingface.co/spaces/hysts/ControlNet?fbclid=IwAR0PQs8VoCTJBgYi1thlqr5Rgo09fN2uH7mS92Q6Zy7GkDte0PR_YZMfpCE&h=AT242ah0nRBIuxLtj3UM6dWwgER-k-mWw9N1qpauHn7sNk0nnTKcnyhKzqcBRxHF_0HfJrgPukmvzIm-WSWTIBHYgc1bE2zKpIUxNS3FvWxkLVIF6b_8_tYWezC2mGGQy1cj&__tn__=-UK-R&c%5B0%5D=AT2pCkCbdzuXQAr57tFQQ-8dbMa6u1s-ophdUuW7Dmo4-pJhlDM7av19TcAsh8J6_8hUHhCCglV7VEw_XRc2CuJpcSOGQqrBezTpnCHr1ePo97RvPxvgz1k1u1p3V2o9xQlJkDIzmXlcnHXKs3vkeUMM">ControlNet: huggingface</a></p></blockquote><ul><li>생성형 AI는 글이나 그림이나 운에 크게 의존할 수 밖에 없습니다.</li><li>애초에 그림의 모든 구성 요소를 몇 단어, 몇 문장으로 표현하는 것이 불가능하기 때문입니다.</li><li><b>큰 틀은 프롬프트로 제시하지만 디테일은 AI에게 맡기는</b> 스타일의 작업을 하게 됩니다.</li><li>르네상스 시절에도 스승이 밑그림을 그리면 제자가 세부를 맡아 채웠습니다.</li></ul><p><img src="35_genAIdraw_14.jpg" alt="1472~1475, 그리스도의 세례, 나무에 유화. 안드레아 델 베로키오"></p><ul><li>레오나르도 다빈치는 베로키오의 문하에서, 미켈란젤로는 기를란다요의 작업을 함께 했습니다.</li><li>위 그림 왼쪽 아래 천사는 문하생 시절의 레오나르도 다 빈치가 그렸습니다.</li><li>루벤스는 공방 수준을 넘어선 공장을 운영했다고도 알려져 있습니다.</li><li><b>오늘날 AI로 그림을 그리는 방식이 이와 다르지 않다고 느낍니다.</b></li></ul><ul><li>그런데 제자나 조수가 말귀를 알아듣지 못하면 답답합니다.</li><li>비슷하게, <b>어떻게 지시를 해도 AI가 그리지 못할 때는 무척이나 답답합니다.</b></li><li>저만 그런 것은 아니었는지, 페블러스의 이주행 대표께서 공모(?)를 했습니다. <a href="https://www.facebook.com/photo.php?fbid=10231347991711778&set=pb.1495549946.-2207520000&type=3">(원글 링크)</a></li></ul><p><img src="35_genAIdraw_15.jpg" alt="&quot;Stable Diffusion 장인분 계시면 유사한 거 함 만들어 주세요.&quot;"></p><ul><li>DALL.E, Midjourney, Stable Diffusion으로 모두 시도하다 실패한 끝에,</li><li>공개된지 얼마 되지 않은 ControlNet을 사용해서 겨우 성공했습니다.<table><tr><td><img src="35_genAIdraw_16.jpg" width="400px" height="400px" align="right"></td><td><img src="35_genAIdraw_17.jpg" width="400px" height="400px" align="left"></td></tr><caption>2023.02.17. 페블러스의 고양이 (밑그림: 좌측), Stable Diffusion with ControlNet</caption></table></li></ul><blockquote><p>“a cat supporting orange stone over its head.”</p></blockquote><ul><li>입력받은 밑그림을 바탕으로 그리는 ControlNet은 그간의 갈증을 씻어주었습니다.</li><li>머리 속 구도를 거의 그대로 끄집어낼 수 있게 되었기 때문에 우연에의 의존이 크게 줄었고</li><li>원하는 부분만 지정해서 생성하기가 훨씬 쉬워졌습니다. 프롬프트도 많이 줄었습니다.</li></ul><table><tr><td><img src="35_genAIdraw_18.jpg" width="400px" height="400px" align="right"></td><td><img src="35_genAIdraw_19.jpg" width="400px" height="400px" align="left"></td></tr><tr><td><img src="35_genAIdraw_20.jpg" width="400px" height="400px" align="right"></td><td><img src="35_genAIdraw_21.jpg" width="400px" height="400px" align="left"></td></tr><caption>2023.03.05. 조각 케이크 (밑그림: 좌측 상단), Stable Diffusion with ControlNet </caption></table><blockquote><p>“a piece of cake and a strawberry on it.”</p></blockquote><ul><li>게임체인저가 될 것이라고 예상한 바와 같이 <b>디자인 전문가들이 이 기술을 바탕으로 대거 유입되었습니다.</b></li><li>반면 Stable diffusion을 사용해야 한다는 점 + GPU 여유가 없다는 점,</li><li>huggingface가 제공하는 UI가 다소 번잡하다는 점,</li><li>그리고 밑그림을 그리면 시간이 소요된다는 점에서 <b>정작 저는 생각보다 손을 덜 뻗게 되었습니다.</b></li></ul><h1 id="4-AI로-그림을-그린다는-것"><a href="#4-AI로-그림을-그린다는-것" class="headerlink" title="4. AI로 그림을 그린다는 것"></a>4. AI로 그림을 그린다는 것</h1><blockquote><p><a href="https://www.bing.com/images/create">bing image creator</a></p></blockquote><ul><li>몇 마디 말로 정교한 그림을 그려낼 수 있다는 것은 참으로 매력적입니다.</li><li>특히 AI가 개입하는 영역에서 내가 생각하지 못한 구성과 디테일이 등장하는 걸 볼 때면, <b>클라이언트보다 클라이언트 마음을 더 잘 아는 디자이너</b>와 함께 일하는 기분이 들기도 합니다.</li><li>여전히 학습되지 않은 그림, 또는 제작사가 위험하다고 규정한 그림을 그리지 못하지만,</li><li>이 안에서도 상상력을 펼치기에는 크게 부족함이 없습니다.</li></ul><ul><li>이런 면에서 제게는 Stable Diffusion에 기반한 ControlNet보다 DALL.E2가 진화한 <b>bing image creator</b>가 제게는 게임체인저였습니다.</li><li>브라우저만 있으면 20초 안에 멋진 그림을 하루에 400개(과거 100 boosts x 4장. 현재 15 boosts)씩 그릴 수 있기 때문에</li><li>과거 일과 일 사이 머리를 식힐 때 순간순간의 감정을 배설하던 습관을 다시 살릴 수 있었습니다.</li></ul><p><img src="35_genAIdraw_22.jpg" alt="2023.06.05. 방전된듯, Bing Image Creator"></p><blockquote><p>“a full body transparent worker made of water outline with bubbles water drops dividing himself in the air flyinging on the desk, kicking the computer monitor, his head is being splitted into the air, turning into bubbles, dark background with a very very small window on the corner, a part of cloud is seen through the window.”</p></blockquote><p><img src="35_genAIdraw_23.jpg" alt="2023.06.22. 유영, Bing Image Creator"></p><blockquote><p>“tall buildings standing through thick fog, early in tbe morning, sting rays are surfing in the sky, high speed”</p></blockquote><p><img src="35_genAIdraw_24.jpg" alt="2023.07.14. diving into the world, Bing Image Creator"></p><blockquote><p>“jumping from cliff, diving onto city, parachute bag {packed} on back, drone view”</p></blockquote><ul><li>여러 사람들과 단톡방에서 그림으로 하루를 열고 닫으며 한번 더 웃는 것도 큰 즐거움입니다.</li></ul><p><img src="35_genAIdraw_25.jpg" alt="2023.07.10. prompt challenge, Bing Image Creator"></p><blockquote><p>“딸기탕후루”</p></blockquote><ul><li>사실 아직도 조금은 어색한 느낌이 있습니다.</li><li>도구가 연필이건, 볼펜이건, 스마트폰이건 손 끝에서 그림이 그려질 때는 <b>온 신경이 예민해지는 것</b>을 느낍니다.</li><li>종이를 느끼는 손 끝의 감촉과 이를 보는 내 눈이 핫라인으로 연결된 것이 느껴지고, 머리 속 도면과 끊임없이 대조하느라 의식이 분주합니다.</li></ul><p><img src="35_genAIdraw_01.png" alt="2023.12.31. pencil drawing, ChatGPT DALL.E3"></p><blockquote><p>“tip of a pencil drawing a line on sketchbook. close up to the tip. photography”</p></blockquote><ul><li><p>그런데 AI에게 그림을 의뢰할 때는 느낌이 다릅니다.</p></li><li><p>프롬프트를 쓰고 엔터를 누르면 그림이 생성되는 짧은 시간 동안 <b>살짝 머리가 멍해지는 것</b>을 느낍니다.</p></li><li><p><b>아무것도 할 수가 없다는 무력감마저 느껴지기도 합니다.</b></p></li><li><p>어떤 그림이 나올지 기다리면서, 내가 입력한 프롬프트에 오타는 없는지 다시 읽어봅니다.</p></li><li><p>모바일로 그릴 때면 오타가 적지 않은데 뒤늦게 한숨을 쉬며 마음을 졸이기도 합니다.<br><img src="35_genAIdraw_27.png" alt="ChatGPT DALL.E3"></p></li><li><p><b>ChatGPT</b>에서 DALL.E3를 그릴 수 있게 되면서 <b>내가 입력한 프롬프트가 어떻게 변형되었는지,</b></p></li><li><p>image seed number는 어떤 것들이 사용되었는지 알 수 있게 되었습니다.</p></li><li><p>이를 보면서 프롬프트를 수정하기도 하지만, 프롬프트가 잘 들어갔다고 확신이 되면 여전히 운에 의존해야 합니다.</p></li><li><p>원하는 그림이 나올때가지 반복실행을 할 때는 이게 맞나 싶기도 하지만, 손으로 그려도 비슷한 경험을 할 때가 있습니다.</p></li></ul><table><tr><td><img src="35_genAIdraw_28.png" width="320px" height="180px" align="center"></td><td><img src="35_genAIdraw_29.png" width="320px" height="180px" align="center"></td><td><img src="35_genAIdraw_30.png" width="320px" height="180px" align="center"></td><td><img src="35_genAIdraw_31.png" width="320px" height="180px" align="center"></td></tr><tr><td><img src="35_genAIdraw_32.png" width="320px" height="180px" align="center"></td><td><img src="35_genAIdraw_33.png" width="320px" height="180px" align="center"></td><td><img src="35_genAIdraw_34.png" width="320px" height="180px" align="center"></td><td><img src="35_genAIdraw_35.png" width="320px" height="180px" align="center"></td></tr><tr><td><img src="35_genAIdraw_36.png" width="320px" height="180px" align="center"></td><td><img src="35_genAIdraw_37.png" width="320px" height="180px" align="center"></td><td><img src="35_genAIdraw_38.png" width="320px" height="180px" align="center"></td><td><img src="35_genAIdraw_39.png" width="320px" height="180px" align="center"></td></tr><tr><td><img src="35_genAIdraw_40.png" width="320px" height="180px" align="center"></td><td><img src="35_genAIdraw_41.png" width="320px" height="180px" align="center"></td><td><img src="35_genAIdraw_42.png" width="320px" height="180px" align="center"></td><td><img src="35_genAIdraw_43.png" width="320px" height="180px" align="center"></td></tr><tr><td><img src="35_genAIdraw_44.png" width="320px" height="180px" align="center"></td><td><img src="35_genAIdraw_45.png" width="320px" height="180px" align="center"></td><td><img src="35_genAIdraw_46.png" width="320px" height="180px" align="center"></td><td><img src="35_genAIdraw_47.png" width="320px" height="180px" align="center"></td></tr><tr><td><img src="35_genAIdraw_48.png" width="320px" height="180px" align="center"></td><td><img src="35_genAIdraw_49.png" width="320px" height="180px" align="center"></td><td><img src="35_genAIdraw_50.png" width="320px" height="180px" align="center"></td><td><img src="35_genAIdraw_51.png" width="320px" height="180px" align="center"></td></tr><tr><td><img src="35_genAIdraw_51.png" width="320px" height="180px" align="center"></td><td><img src="35_genAIdraw_52.png" width="320px" height="180px" align="center"></td><td><img src="35_genAIdraw_53.png" width="320px" height="180px" align="center"></td><td><img src="35_genAIdraw_54.png" width="320px" height="180px" align="center"></td></tr></table><blockquote><p>“A tiny, strong light sphere in the midst of an intricate and delicate anime-style explosion, floating in a dark abyss. The sphere is at the center of an exploding three-layered, half-transparent shell, with a detailed and refined anime-style design. The shattered shell pieces are expanding in a vortex formation, each layer distinct yet elegantly depicted in anime art style. The tilted angle of the scene enhances its dynamic feel. The image should convey a landscape-oriented, anime art style, emphasizing the delicate and intricate details of the explosion, with a 3D appearance.</p></blockquote><p><img src="35_genAIdraw_58.png" alt="2023.12.30. self-destructive innovation, ChatGPT DALL·E3"></p><h1 id="5-마치며"><a href="#5-마치며" class="headerlink" title="5. 마치며"></a>5. 마치며</h1><ul><li>AI 그림은 두어달 전 DALL.E3와 Midjourney v6의 등장으로 또 한번 진화했습니다.</li><li>AI 그림 도구들이 경쟁할수록 그릴 수 있는 그림의 종류와 표현은 다양해집니다.</li><li>더 많은 이들이 더 많은 자유를 느끼기를 바랍니다.</li></ul><p><img src="35_genAIdraw_26.jpg" alt="2023.11.26. 상상 가져오기, ChatGPT DALL.E3"></p><blockquote><p>“Photography of a smartphone held on a Korean man’s hand. Multicolored {orange-rich and yellow, red} vapor is emerging from the white-glowing screen, forming a trunk of tree of which branches have everything {giant and fairly in bedtime story, goblins and pirates, objects depicting  love and friendship} in the air, side view, extreme close up.”</p></blockquote>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/General/">General</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/openai/">openai</category>
      
      <category domain="https://jehyunlee.github.io/tags/chatgpt/">chatgpt</category>
      
      <category domain="https://jehyunlee.github.io/tags/dalle/">dalle</category>
      
      <category domain="https://jehyunlee.github.io/tags/midjourney/">midjourney</category>
      
      <category domain="https://jehyunlee.github.io/tags/ideogram/">ideogram</category>
      
      
    </item>
    
    <item>
      <title>DALL.E 대비가 강한 그림 그리기</title>
      <link>https://jehyunlee.github.io/2023/12/26/General-34-dalle_centaur/</link>
      <guid>https://jehyunlee.github.io/2023/12/26/General-34-dalle_centaur/</guid>
      <pubDate>Tue, 26 Dec 2023 02:30:00 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;이탈리아의 화가 Caravaggio의 그림을 좋아합니다.&lt;/li&gt;
&lt;li&gt;실제 성격도 괴팍하고 공격적이었다고 알려져 있습니다만&lt;/li&gt;
&lt;li&gt;강한 대비와 역동적인 구도에서 오는 그의 그림에는 다른 그림에 없는 에너지가 느껴집니다.&lt;/</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>이탈리아의 화가 Caravaggio의 그림을 좋아합니다.</li><li>실제 성격도 괴팍하고 공격적이었다고 알려져 있습니다만</li><li>강한 대비와 역동적인 구도에서 오는 그의 그림에는 다른 그림에 없는 에너지가 느껴집니다.</li></ul><h1 id="1-DALL-E의-그림"><a href="#1-DALL-E의-그림" class="headerlink" title="1. DALL.E의 그림"></a>1. DALL.E의 그림</h1><ul><li><b>DALL.E는 그림을 잘 그립니다.</b></li><li>몇 줄의 프롬프트, 심지어 문장 하나만으로도 사진같은 그림, 화가가 그린 것 같은 그림을 그립니다.</li><li>하지만 아쉬움이 있습니다. <b>특색을 담기가 은근히 어렵습니다.</b></li><li>독창적인 주제와 화면 구성을 하면 조금 낫지만, <b>인터넷에 떠도는 그림들이 다 비슷비슷해 보입니다.</b></li></ul><ul><li><b>그림을 배울 때, 기존 화가의 그림을 따라서 그립니다.</b> </li><li>서예도 비슷합니다. 그림을 따라 그리면 임화(臨畵), 글씨를 따라 쓰면 임서(臨書)라고 합니다.</li><li>단순히 베끼는 과정이 아니라 선배들이 어떤 생각과 느낌으로 그렸는지를 체득하는 과정입니다.</li></ul><ul><li>DALL.E의 그림이 밋밋해보이는 또 다른 이유는 색 사용이 왠지 반복되는 느낌입니다.</li><li>구체적으로 예를 들어 말하기는 어려우나 청백색의 느낌이 자주 느껴집니다.</li><li>사람의 살색도 비슷비슷하고 얼굴 유형도 단조롭습니다. </li><li>학습 기반 모델의 한계일지도 모르고 학습한 데이터의 한계일지도 모르겠습니다.</li></ul><h1 id="2-까라바조-스타일-그림-그리기"><a href="#2-까라바조-스타일-그림-그리기" class="headerlink" title="2. 까라바조 스타일 그림 그리기"></a>2. 까라바조 스타일 그림 그리기</h1><p><img src="34_dalle_centaur_01.jpg" alt="골리앗의 머리를 든 다윗. 캔버스에 유채. 보르게세 미술관 소장"></p><ul><li>제가 가장 좋아하는 그림 중 하나입니다.</li><li>과감하게 배경을 어둡게 처리함으로써 골리앗의 잘린 머리, 다윗의 얼굴과 앳된 소년의 몸, 그리고 번쩍이는 칼날에 시선이 집중됩니다.</li><li>다윗의 얼굴과 골리앗 얼굴 절반, 그리고 머리카락까지 모두 배경에 묻어버렸습니다.</li><li><b>DALL.E에서는 이 정도로 과감한 표현이 잘 되지 않습니다.</b></li></ul><ul><li>이런 느낌으로 <b>눈밭에서 무리를 이끄는 켄타우루스 족장</b>을 그려보고 싶었습니다.</li><li>주제를 선정한 이유는 몇 가지가 있지만 여기서는 생략합니다.</li></ul><h2 id="2-1-Explore-gt-DALL-E-선택"><a href="#2-1-Explore-gt-DALL-E-선택" class="headerlink" title="2.1. Explore &gt; DALL.E 선택"></a>2.1. Explore &gt; DALL.E 선택</h2><ul><li>전문적으로 그림을 그리는 것이 목적이라면, ChatGPT4보다 좋은 선택이 있습니다.</li><li>좌측의 <b>Explore</b>에서 <b>DALL.E</b>를 선택하는 것입니다.</li><li>ChatGPT4가 그림을 한 장씩 주는 반면에 DALL.E는 두 장씩 줍니다.</li><li>랜덤에 상당 부분 의존할 수 밖에 없는 환경에서 선택지가 많은 것이 좋습니다.</li></ul><p><img src="34_dalle_centaur_02.png"></p><h2 id="2-2-프롬프트-작성"><a href="#2-2-프롬프트-작성" class="headerlink" title="2.2. 프롬프트 작성"></a>2.2. 프롬프트 작성</h2><ul><li>ChatGPT에서 DALL.E를 쓸 때 다음과 같은 과정을 거칩니다.<br>① 사용자가 프롬프트를 입력하면 (input prompt)<br>② ChatGPT가 DALL.E와 함께 나머지 부분을 상상합니다. 이 때 프롬프트가 변경됩니다. (ChatGPT prompt)<br>③ DALL.E가 이를 받아 그림으로 표현합니다.<br>이 때 image seed layer가 랜덤으로 할당되는데, 같은 프롬프트라도 이미지가 다르게 생성됩니다.</li></ul><ul><li>머리 속에 구체적인 그림이 없다면 ②에서 ChatGPT의 도움을 받을 수 있습니다.</li><li>그러나 지금의 저는 <b>머리 속에 그림이 있는 만큼, 프롬프트를 최대한 자세히 작성합니다.</b></li><li>프롬프트를 자세히 작성하지 않으면 ChatGPT가 끼어들어 의도를 뒤틀 수 있기 때문입니다.</li></ul><blockquote><p>input prompt: “A centaur holding a torch standing on a big rock of snow-covered forest at night and other centaurs gathered around nearby. The centaurs have a human upper body and a horse lower body, glancing far away among tall trees. The forest is full of various pine trees and tall trees without leaves but snow on them. stars are clearly seen above sky, creating a magical, enchanted unrealistic atmosphere. The scene captures the wisdom of the centaur as a leader of a company. cinematic view. sharp contrast with low brightness, like Caravaggio style. almost entire image is dark as black, but some highlights in limited region where the torch light is shed are bright with white, yellow and orange. oil on canvas with thick brush. landscape view”</p></blockquote><p><img src="34_dalle_centaur_03.png"></p><ul><li><b>&lt;16/16&gt;</b>이라는 표식이 있습니다. 원하는 그림을 찾아 16번 반복 실행했다는 뜻입니다.</li><li>반인반마여야 할 켄타우루스를 사람이 말을 타고 있는 모습으로 그리기도 하고, 말 머리 사람으로 그려서입니다.</li><li>현재는 결과가 마음에 들지 않으면 원하는 결과가 나올때까지 반복하는 수밖에 없습니다.</li><li>원하는 이미지에 가까운 오른쪽 그림은 다음과 같습니다.</li></ul><p><img src="34_dalle_centaur_04.png"></p><ul><li>ChatGPT가 수정한 프롬프트를 확인하면 다음과 같습니다.</li></ul><blockquote><p>ChatGPT prompt: “A scene depicting a centaur holding a torch, standing on a large rock in a snow-covered forest at night. This centaur, exuding wisdom as a leader, is surrounded by other centaurs with a human upper body and horse lower body. They are all glancing into the distance among tall pine trees and leafless trees draped in snow. Above, the stars in the sky create a magical, enchanted atmosphere. The setting is cinematic, with a Caravaggio-like sharp contrast, low brightness, and an almost entirely dark background. The limited regions illuminated by the torch light are bright with white, yellow, and orange, resembling an oil painting on canvas with thick brushstrokes. The overall composition is in landscape view.”</p></blockquote><ul><li>내용은 바뀐 것이 없이 문장만 일부 수정된 정도입니다. 그나마도 거의 같습니다.</li><li>만약 입력을 대충 했다면 생각지도 않은 디테일이 마구 첨가되었을 것입니다.</li></ul><h2 id="2-3-명도는-낮추고-대비는-올리고"><a href="#2-3-명도는-낮추고-대비는-올리고" class="headerlink" title="2.3. 명도는 낮추고 대비는 올리고"></a>2.3. 명도는 낮추고 대비는 올리고</h2><ul><li>까라바조 그림의 특징을 살려 명도를 낮추고 대비를 높입니다.</li><li>생성된 이미지의 전반적인 모습을 유지하려면 <b>image seed number를 유지</b>하면 됩니다.</li><li>현재는 image seed number를 직접 입력할 수는 없으나 생성된 이미지의 값을 유지하는 것은 가능합니다.</li><li>프롬프트에 <b>“이미지 시드 넘버를 유지해줘.”</b>나 <b>“keep the image seed number”</b>를 입력하면 됩니다.</li></ul><p><img src="34_dalle_centaur_05.png"></p><ul><li>시드 넘버를 유지했지만 디테일이 조금씩 변합니다. 어쩔 수 없는 현재의 한계입니다.</li><li>이미지가 점점 어두워집니다. 하지만 아직 부족한 느낌입니다.</li><li>더 어둡게 하라고 지시를 하자 <b>“이미지 퀄리티와 세부 유지가 안된다. 괜찮은가?”</b>라고 묻습니다.</li><li>과감하게 <b>“디테일을 희생하라”</b>는 추가 프롬프트를 제공하고, 결과물을 확인합니다.</li></ul><p><img src="34_dalle_centaur_06.png"></p><ul><li>비로소 마음에 듭니다. 확대해서 확인합니다.</li></ul><p><img src="34_dalle_centaur_07.png"></p><ul><li>주변부가 좀 바뀌기는 했지만 허용 범위 이내입니다. 오히려 좋은 면도 있습니다.</li></ul><h1 id="3-까라바조-그림과-명도-분포-비교"><a href="#3-까라바조-그림과-명도-분포-비교" class="headerlink" title="3. 까라바조 그림과 명도 분포 비교"></a>3. 까라바조 그림과 명도 분포 비교</h1><ul><li>눈으로 보기에는 제법 괜찮은데, 데이터도 그런지 확인합니다.</li><li><b>ChatGPT4</b> 또는 <b>Data Analysis</b>를 선택해서 새 창을 열고 그림을 올립니다.</li><li><b>“명도 분포를 커널밀도추정(KDE) plot으로 시각화하라”</b>는 프롬프트를 입력하면, 그림이 나옵니다.</li><li>눈으로 보는 바와 같이 상당히 낮은 값에 몰려 있습니다.</li></ul><p><img src="34_dalle_centaur_08.png"></p><ul><li>처음의 &lt;골리앗의 머리를 든 다윗&gt; 이미지를 올리고 <b>“같은 작업을 반복하되, KDE plot을 겹쳐 그려라”</b>는 명령을 입력합니다.</li><li>한 차례 오류가 났습니다. 그림이 커서 처리에 1분을 초과했기 때문에 중단된 것입니다.</li><li>그러나 <b>Data Analysis는 웬만한 오류를 스스로 해결합니다.</b> </li><li>재작업 후 그려진 그림에서, 전반적인 분포가 매우 유사함을 확인할 수 있습니다.</li></ul><p><img src="34_dalle_centaur_09.png"></p><ul><li><b>“이만하면 된 것 같다”</b>는 느낌이 사실로 증명되었습니다. :)</li></ul><ul><li>제가 DALL.E로 그린 그림의 부분입니다.</li><li>저런 지도자를 만나고 싶기도 하고 저런 지도자로 성장하고 싶기도 합니다.</li></ul><p><img src="34_dalle_centaur_10.png"></p>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/General/">General</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/openai/">openai</category>
      
      <category domain="https://jehyunlee.github.io/tags/chatgpt/">chatgpt</category>
      
      <category domain="https://jehyunlee.github.io/tags/dalle/">dalle</category>
      
      
    </item>
    
    <item>
      <title>ChatGPT로 한글과 한자가 적힌 카드 만들기</title>
      <link>https://jehyunlee.github.io/2023/12/25/General-33-ChatGPT_DataAnalysis/</link>
      <guid>https://jehyunlee.github.io/2023/12/25/General-33-ChatGPT_DataAnalysis/</guid>
      <pubDate>Mon, 25 Dec 2023 06:33:00 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;b&gt;contributor: &lt;/b&gt;임유나&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;ChatGPT는 글로 뭔가를 남기기 주저될 만큼 지난 1년여에 걸쳐 꾸준히 업그레이드를 해왔습니다.&lt;br&gt;DALL.E를</description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p><b>contributor: </b>임유나</p></blockquote><blockquote><p>ChatGPT는 글로 뭔가를 남기기 주저될 만큼 지난 1년여에 걸쳐 꾸준히 업그레이드를 해왔습니다.<br>DALL.E를 품어 그림을 그릴 수 있게 되었고 Data Anaysis(舊 Code Interpreter)를 품어 데이터 분석이 가능합니다.<br>이들은 별개로 사용할 수도 있지만 함께 활용하면 불가능이 가능으로 바뀝니다. </p></blockquote><ul><li>대학(大學)에는 <b>수신제가치국평천하(修身齊家治國平天下)</b>라는 널리 알려진 말이 있습니다.</li><li>이 앞에 붙는 말은 이보다 덜 알려졌는데, <b>격물치지성의정심(格物致知誠意正心)</b>입니다.</li><li>성의정심은 <b>뜻이 성실해진 뒤에 마음이 바르게 된다</b>는 뜻이며</li><li>격물치지는 <b>사물의 이치를 터득한 뒤에 지식이 지극해진다</b>는 뜻입니다.</li><li>ChatGPT의 여러 기능을 활용하고자 하는 분들이 많지만 <b>개별 기능을 먼저 올바르게 판단해야 합니다.</b></li></ul><ul><li><b>DALL.E</b>는 언어와 그림이 함께 임베딩된 CLIP을 바탕으로 한 diffusion model 기반의 이미지 생성 모델입니다.</li><li>수량이나 길이를 <b>정량적으로 표현하는 데 근본적으로 취약합니다.</b> </li><li>현재 버전 기준으로 영어는 제법 문장까지 쓰지만 한글은 쓰지 못합니다.</li><li>$y = sin(x)$ 같은 수식, CH<sub>4</sub> 같은 화학 구조를 제대로 표현하지 못합니다.</li></ul><ul><li><b>Data Analysis</b>는 코드를 생성해 내부의 서버에서 실행합니다.</li><li>간단한 딥러닝도 해 주지만 실행 시간이 1분이 넘어가면 자동으로 종료됩니다.</li><li><code>.ttf</code>같은 글꼴, <code>.whl</code>같은 파이썬 라이브러리를 업로드해서 <b>설치해서 사용하라</b>고 할 수 있습니다.</li><li>예술적인 그림은 그리지 못하지만 <code>PIL</code>과 <code>opencv</code>를 활용한 이미지 처리는 잘 합니다.</li><li>GAN 계열 기술이 필요한 업스케일링은 하지 못합니다. 그렇지만 보간(interpolation)은 합니다.</li></ul><ul><li><b>서로 다른 듯 보이는 둘이지만 시너지를 일으킬 수 있습니다.</b></li><li>그 중 한글을 못쓰는 DALL.E에게 Data Analysis로 한글과 한자를 써주는 예제를 살펴보겠습니다.</li></ul><h1 id="1-그림-그리기-DALL-E"><a href="#1-그림-그리기-DALL-E" class="headerlink" title="1. 그림 그리기: DALL.E"></a>1. 그림 그리기: DALL.E</h1><ul><li>동양화 느낌의 연하장을 만듭니다.</li><li>달리에게 미니멀리즘 느낌의 수묵화를 그리라고 지시합니다.</li><li>ChatGPT 안에 여러 도구들이 있으므로 <b>“Use DALL.E:”</b> 프롬프트를 사용해 달리를 사용하라고 지시하는 것이 좋습니다.</li></ul><blockquote><p>prompt: “Use DALL.E: draw Korean ink painting style landscape image, sephia tone, minimalism”</p></blockquote><p><img src="33_chatgpt_da_01.png"><br></p><ul><li>한국적인 느낌을 너무 기대하면 곤란합니다. 달리는 한국 그림보다 중국과 일본 그림을 훨씬 많이 학습했습니다. </li><li>그림에 담기는 요소가 풍부할수록 한국화보다 중국화, 일본화 느낌이 많이 나는 경향이 있습니다.</li><li><b>seed number</b>와 <b>Gen ID</b>가 출력되었습니다. Custom Instructions의 “How would you like ChatGPT to respond?”에 아래 명령을 입력해 두었기 때문입니다.</li></ul><blockquote><p>If image(s) are generated, return the image seed number(s) as well as Gen ID(s).</p></blockquote><ul><li>생성된 이미지의 seed number와 Gen ID를 알고 있으면 일관된 이미지를 만들기 편리합니다.</li></ul><ul><li><b>영어로 프롬프트를 입력했습니다.</b> </li><li>달리의 시스템 프롬프트를 열어보면 <b>입력 언어가 영어가 아니면 영어로 번역해서 작업하라</b>는 내용이 있습니다. </li><li>ChatGPT 안에서 한글이 영어로 번역될 때 의도와 다른 단어로 번역되는 경우가 종종 있기 때문에, 처음부터 영어로 입력하는 것이 좋습니다.</li></ul><h1 id="2-글자-쓰기-Data-Analysis"><a href="#2-글자-쓰기-Data-Analysis" class="headerlink" title="2. 글자 쓰기: Data Analysis"></a>2. 글자 쓰기: Data Analysis</h1><h2 id="2-1-외부-글꼴-활용"><a href="#2-1-외부-글꼴-활용" class="headerlink" title="2.1. 외부 글꼴 활용"></a>2.1. 외부 글꼴 활용</h2><blockquote><p><a href="https://event.chosun.com/100/100font.html">조선일보 제공 무료 글꼴</a></p></blockquote><ul><li>방금 작성한 이미지에 글자를 쓰게 합니다.</li><li>Data Analysis에서 이미지를 다루게 하면 파이썬의 <code>PIL</code> 라이브러리를 사용합니다.</li><li><code>PIL</code> 라이브러리로 한글을 쓰려면 글꼴을 제공해야 합니다.</li><li>무료 글꼴을 찾아 사용합니다. 여기서는 <b>조선일보가 제공한 <a href="https://event.chosun.com/100/100font.html">조선100년체</a>를 사용합니다.</b></li></ul><p><img src="33_chatgpt_da_02.png"><br></p><ul><li><b>TTF 다운로드</b>를 클릭하면 글꼴이 압축된 .zip파일이 다운됩니다.</li><li>ChatGPT 대화창 왼쪽의 <b>클립 모양 아이콘을 클릭</b>해 글꼴을 업로드하고 이를 사용하도록 지시합니다.</li><li>위에서 20% 지점에 검은색으로, 가로 방향으로는 중앙 정렬되도록 지시합니다.</li><li>같은 요령으로 <b>“Use Data Analysis:”</b> 프롬프트를 사용해 도구를 지정합니다.</li></ul><p><img src="33_chatgpt_da_03.png"><br></p><ul><li>잠시 작업이 끝난 후 다음과 같은 결과물이 출력됩니다.</li></ul><p><img src="33_chatgpt_da_04.png"><br></p><ul><li><p>출력창을 맨 아래로 내리면 <b>[&gt;_]</b> 버튼이 있습니다.</p></li><li><p>클릭하면 코드가 보이는데, 다음과 같은 코드가 실행되었음을 알 수 있습니다.</p><details>  <summary><b>코드 보기/접기</b></summary><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image, ImageFont, ImageDraw</span><br><span class="line"><span class="keyword">import</span> zipfile</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="comment"># Path to the uploaded image and font file</span></span><br><span class="line">image_path = <span class="string">&#x27;/mnt/data/A_Korean_ink_painting_style_landscape,_showcasing_.png&#x27;</span></span><br><span class="line">font_zip_path = <span class="string">&#x27;/mnt/data/ChosunCentennial_ttf.zip&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Extract the font file from the zip</span></span><br><span class="line"><span class="keyword">with</span> zipfile.ZipFile(font_zip_path, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> zip_ref:</span><br><span class="line">    zip_ref.extractall(<span class="string">&#x27;/mnt/data&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Find the extracted font file (assuming there&#x27;s only one .ttf file in the zip)</span></span><br><span class="line">extracted_files = os.listdir(<span class="string">&#x27;/mnt/data&#x27;</span>)</span><br><span class="line">font_file = <span class="built_in">next</span>((file <span class="keyword">for</span> file <span class="keyword">in</span> extracted_files <span class="keyword">if</span> file.endswith(<span class="string">&#x27;.ttf&#x27;</span>)), <span class="literal">None</span>)</span><br><span class="line">font_path = <span class="string">f&#x27;/mnt/data/<span class="subst">&#123;font_file&#125;</span>&#x27;</span> <span class="keyword">if</span> font_file <span class="keyword">else</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Load the image</span></span><br><span class="line">image = Image.<span class="built_in">open</span>(image_path)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Add text to the image</span></span><br><span class="line"><span class="keyword">if</span> font_path:</span><br><span class="line">    draw = ImageDraw.Draw(image)</span><br><span class="line">    text = <span class="string">&quot;새해 복 많이 받으세요&quot;</span></span><br><span class="line">    font_size = <span class="number">50</span>  <span class="comment"># Starting font size, may need adjustment</span></span><br><span class="line">    font = ImageFont.truetype(font_path, font_size)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Calculate text size and position</span></span><br><span class="line">    text_width, text_height = draw.textsize(text, font=font)</span><br><span class="line">    image_width, image_height = image.size</span><br><span class="line">    x = (image_width - text_width) / <span class="number">2</span>  <span class="comment"># Center horizontally</span></span><br><span class="line">    y = image_height * <span class="number">0.2</span>  <span class="comment"># 20% from the top</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Draw text</span></span><br><span class="line">    draw.text((x, y), text, font=font, fill=<span class="string">&quot;black&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Save the modified image</span></span><br><span class="line">    modified_image_path = <span class="string">&#x27;/mnt/data/modified_korean_ink_painting.png&#x27;</span></span><br><span class="line">    image.save(modified_image_path)</span><br><span class="line">    modified_image_path</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    modified_image_path = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">modified_image_path</span><br></pre></td></tr></table></figure></li><li><p>글꼴이 잘 반영되었습니다.</p></li></ul><h2 id="2-2-글자-위치-변경"><a href="#2-2-글자-위치-변경" class="headerlink" title="2.2. 글자 위치 변경"></a>2.2. 글자 위치 변경</h2><ul><li>글자가 그림과 조금 겹쳤습니다. 살짝 위로 옮기면 좋을 것 같습니다.</li><li>상단 20% 지점으로 지정된 위치를 상단 10%로 옮깁니다.</li><li>그냥 옮기라고 말만 하면 되지만, 자칫하면 지금 글자를 놔둔 채 위에 글자를 또 하나 쓰기 때문에 <b>original image</b>를 가지고 작업하라는 말을 하는 것이 안전합니다.</li></ul><p><img src="33_chatgpt_da_05.png"><br></p><h2 id="2-3-한자-입력"><a href="#2-3-한자-입력" class="headerlink" title="2.3. 한자 입력"></a>2.3. 한자 입력</h2><blockquote><p><a href="https://days773.tistory.com/233">중국어 폰트 (사업적 사용 가능 40종)</a></p></blockquote><ul><li>한글 입력과 완전히 같은 요령으로 하면 됩니다.</li><li>한자 폰트를 찾아 적절한 것을 골라서 업로드하고 이 폰트를 사용하라고 지시합니다.</li><li>저는 <b><a href="https://ja.cooltext.com/Download-Font-%e9%9a%b8%e6%9b%b8%e7%b9%81+Li+Su+Medium">Li Su medium font</a></b>를 사용했습니다.</li><li>그 어떤 언어도 마찬가지 방법으로 사용 가능합니다.</li></ul><p><img src="33_chatgpt_da_06.png"><br></p><h1 id="3-응용"><a href="#3-응용" class="headerlink" title="3. 응용"></a>3. 응용</h1><blockquote><p><a href="https://gongu.copyright.or.kr/gongu/bbs/B0000018/list.do?menuNo=200195">공유마당 무료폰트 모음</a><br><a href="https://www.woowahan.com/fonts">우아한형제들 공개 글꼴</a><br><a href="https://clova.ai/handwriting/">Naver 나눔손글씨 글꼴</a></p></blockquote><ul><li>같은 요령으로 아래 그림도 그릴 수 있습니다. </li><li>나눔손글씨 중 <b>나의 아내 손글씨</b>로 작성한, 출근하는 남편에게 싸준 아내의 과일 도시락 설정입니다.</li><li>Data Analysis와 함께 DALL.E와 언어의 장벽을 마음껏 뛰어넘으시길 바랍니다.</li></ul><p><img src="modified_image_with_text.png"></p>]]></content:encoded>
      
      
      <category domain="https://jehyunlee.github.io/categories/General/">General</category>
      
      
      <category domain="https://jehyunlee.github.io/tags/openai/">openai</category>
      
      <category domain="https://jehyunlee.github.io/tags/chatgpt/">chatgpt</category>
      
      <category domain="https://jehyunlee.github.io/tags/dalle/">dalle</category>
      
      <category domain="https://jehyunlee.github.io/tags/data-analysis/">data analysis</category>
      
      
    </item>
    
  </channel>
</rss>
